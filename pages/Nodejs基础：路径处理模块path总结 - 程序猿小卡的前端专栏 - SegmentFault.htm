<!DOCTYPE html>
<!-- saved from url=(0043)https://segmentfault.com/a/1190000007471775 -->
<html lang="zh-CN"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1"><meta name="renderer" content="webkit"><meta property="qc:admins" content="15317273575564615446375"><meta property="og:image" content="https://sf-static.b0.upaiyun.com/v-582926ab/global/img/touch-icon.png"><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"><meta name="alexaVerifyID" content="LkzCRJ7rPEUwt6fVey2vhxiw1vQ"><meta name="apple-itunes-app" content="app-id=958101793, app-argument="><title>Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault</title><meta name="description" content="模块概览 在nodejs中，path是个使用频率很高，但却让人又爱又恨的模块。部分因为文档说的不够清晰，部分因为接口的平台差异性。 将path的接口按照用途归类，仔细琢磨琢磨，也就没那么费解了。 获取路径/文件名/扩..."><meta name="keywords" content="javascript,前端,path,node.js"><link rel="search" type="application/opensearchdescription+xml" href="https://segmentfault.com/opensearch.xml" title="SegmentFault"><link rel="shortcut icon" href="https://sf-static.b0.upaiyun.com/v-582926ab/global/img/favicon.ico"><link rel="apple-touch-icon" href="https://sf-static.b0.upaiyun.com/v-582926ab/global/img/touch-icon.png"><meta name="msapplication-TileColor" content="#009a61"><meta name="msapplication-square150x150logo" content="https://sf-static.b0.upaiyun.com/v-582926ab/global/img/touch-icon.png"><link rel="alternate" type="application/atom+xml" title="SegmentFault 最新问题" href="https://segmentfault.com/feeds/questions"><link rel="alternate" type="application/atom+xml" title="SegmentFault 最新文章" href="https://segmentfault.com/feeds/blogs"><link rel="stylesheet" href="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/global.css"><link rel="stylesheet" href="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/blog.css"><link rel="stylesheet" href="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/responsive.css"><!--[if lt IE 9]><link rel="stylesheet" href="https://sf-static.b0.upaiyun.com/v-582926ab/global/css/ie.css"/><script src="https://sf-static.b0.upaiyun.com/v-582926ab/global/script/html5shiv.js"></script><script src="https://sf-static.b0.upaiyun.com/v-582926ab/global/script/respond.js"></script><![endif]--><script src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/hm.js"></script><script async="" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/analytics.js"></script><script src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/debug.js"></script></head><body data-mod="blog" class="blog-post "><!--[if lt IE 9]><div class="alert alert-danger topframe" role="alert">你的浏览器实在<strong>太太太太太太旧了</strong>，放学别走，升级完浏览器再说 <a target="_blank" class="alert-link" href="http://browsehappy.com">立即升级</a></div><![endif]--><img id="icon4weChat" style="height: 0;width: 0;" data-src="https://sf-static.b0.upaiyun.com/v-582926ab/global/img/touch-icon-512.png"><img id="icon4weChat" data-src="https://sf-static.b0.upaiyun.com/v-582926ab/global/img/touch-icon-512.png"><div class="global-nav sf-header"><nav class="container nav"><div class="hidden-sm hidden-lg hidden-md"><div class="sf-header__logo sf-header__logo--response"><h1><a></a></h1></div><div class="dropdown m-menu"><a href="javascript:void(0);" id="dLabel" class="visible-xs-block m-toptools" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="glyphicon glyphicon-align-justify"></span><span class="mobile-menu__unreadpoint"></span></a><ul class="dropdown-menu" role="menu" aria-labelledby="dLabel"><li class="mobile-menu__item"><a href="https://segmentfault.com/news">头条</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/questions/newest">问答</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/blogs">文章</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/user/note">笔记</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/jobs">职位</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/events">活动</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/tags">标签</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/users">榜单</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/sites">子站</a></li></ul></div><a href="https://segmentfault.com/user/login" class="visible-xs-block pull-right m-ask m-toptools"><span class="glyphicon glyphicon-log-in"></span></a></div><div class="row hidden-xs"><div class="col-sm-9 col-md-7 col-lg-6"><div class="sf-header__logo"><h1><a href="https://segmentfault.com/">SegmentFault</a></h1></div><ul class="menu list-inline pull-left hidden-xs"><li class="menu__item menu__item--new menu__item--new-show"><a href="https://segmentfault.com/news">头条</a></li><li class="menu__item"><a href="https://segmentfault.com/questions">问答</a></li><li class="menu__item"><a href="https://segmentfault.com/blogs">专栏</a></li><li class="menu__item"><a href="https://segmentfault.com/jobs">职位</a></li><li class="menu__item"><a href="https://segmentfault.com/events">活动</a></li></ul></div><div class="col-sm-3 col-md-5 col-lg-6 text-right"><form action="https://segmentfault.com/search" class="header-search  hidden-sm hidden-xs mr20"><button class="btn btn-link"><span class="sr-only">搜索</span><span class="glyphicon glyphicon-search"></span></button><input id="searchBox" name="q" type="text" placeholder="输入关键字搜索" class="form-control" value=""></form><ul class="opts list-inline hidden-xs"><li class="opts__item message has-unread"><a target="_blank" href="https://segmentfault.com/tour"><span class="sr-only">消息</span><span id="messageCount" class="fa fa-hand-peace-o"></span></a></li><li class="opts__item"><a href="https://segmentfault.com/user/login" class="SFLogin em ml10" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;Button&#39;, &#39;Click&#39;, &#39;Login&#39;]);">注册 ·
                                        登录</a></li></ul></div></div></nav></div><div class="global-navTags"><div class="container"><nav class=" nav"><ul class="nav__list"><li class="nav__item"><a href="https://segmentfault.com/"><i class="fa fa-home"></i>home
                            </a></li><li class="nav__item"><a href="https://segmentfault.com/timeline"><i class="fa fa-list-alt"></i>feed
                            </a></li><li class="nav__item nav__item--split"><a><span class="split"></span></a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/javascript">javascript</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/php">php</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/python">python</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/java">java</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/mysql">mysql</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/ios">ios</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/android">android</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/node.js">node.js</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/html5">html5</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/linux">linux</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/c%2B%2B">c++</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/css3">css3</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/git">git</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/golang">golang</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/ruby">ruby</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/vim">vim</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/docker">docker</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/mongodb">mongodb</a></li><li class="nav__item nav__item--more" data-open="0"><a class="nav__item--more-link" href="https://segmentfault.com/tags"><div class="tag__more"><i class="tag__more--icon"></i><i class="tag__more--icon"></i><i class="tag__more--icon"></i></div></a></li></ul><div class="tag-mgr__box hide"><input class="tag-mgr__query" type="text" placeholder="搜索关注的标签" data-tags="null"><div class="mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar" data-mcs-theme="minimal-dark" style="position: relative; overflow: visible;"><div id="mCSB_1" class="mCustomScrollBox mCS-minimal-dark mCSB_vertical mCSB_outside" style="max-height: 0px;" tabindex="0"><div id="mCSB_1_container" class="mCSB_container mCS_y_hidden mCS_no_scrollbar_y" style="position:relative; top:0; left:0;" dir="ltr"><ul class="tag-mgr__list"></ul></div></div><div id="mCSB_1_scrollbar_vertical" class="mCSB_scrollTools mCSB_1_scrollbar mCS-minimal-dark mCSB_scrollTools_vertical" style="display: none;"><div class="mCSB_draggerContainer"><div id="mCSB_1_dragger_vertical" class="mCSB_dragger" style="position: absolute; min-height: 50px; top: 0px;" oncontextmenu="return false;"><div class="mCSB_dragger_bar" style="line-height: 50px;"></div></div><div class="mCSB_draggerRail"></div></div></div></div><a href="https://segmentfault.com/tags" class="btn btn-primary btn-sm tag-mgr__btn">标签管理</a></div></nav></div></div>
    <div class="wrap">
    <div class="post-topheader custom-">
        <div class="container">
            <div class="row">
                <div class="col-md-9 col-sm-8 col-xs-12">
                    <span class="post-topheader__title--icon-symbol">文</span>

                    <div class="post-topheader__info" data-username="程序猿小卡_casper" data-userslug="chyingp" data-useravatar="https://sfault-avatar.b0.upaiyun.com/377/012/3770129147-1030000000446809_big64">

                        <h1 class="h3 post-topheader__info--title" id="articleTitle" data-id="1190000007471775">

                                                <a href="https://segmentfault.com/a/1190000007471775"> Nodejs基础：路径处理模块path总结</a>
                                            </h1>

                        <ul class="taglist--inline inline-block article__title--tag mr10">
                                                            <li class="tagPopup mb5"><a class="tag" href="https://segmentfault.com/t/javascript/blogs" data-toggle="popover" data-img="https://sfault-avatar.b0.upaiyun.com/195/823/1958237468-1040000000089436_huge256" data-placement="top" data-original-title="javascript" data-id="1040000000089436">javascript</a></li>
                                                            <li class="tagPopup mb5"><a class="tag" href="https://segmentfault.com/t/%E5%89%8D%E7%AB%AF/blogs" data-toggle="popover" data-img="https://sfault-avatar.b0.upaiyun.com/330/484/3304844401-1040000000089899_huge256" data-placement="top" data-original-title="前端" data-id="1040000000089899">前端</a></li>
                                                            <li class="tagPopup mb5"><a class="tag" href="https://segmentfault.com/t/path/blogs" data-toggle="popover" data-img="" data-placement="top" data-original-title="path" data-id="1040000000140863">path</a></li>
                                                            <li class="tagPopup mb5"><a class="tag" href="https://segmentfault.com/t/node.js/blogs" data-toggle="popover" data-img="https://sfault-avatar.b0.upaiyun.com/740/312/74031254-1040000000089918_huge256" data-placement="top" data-original-title="node.js" data-id="1040000000089918">node.js</a></li>
                                                    </ul>

                        <div class="article__author">
                        <a href="https://segmentfault.com/u/chyingp" class="mr5 "><strong>程序猿小卡_casper</strong></a>
                        8 小时前发布
                                                                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-4 hidden-xs">
                    <ul class="post-topheader__side list-unstyled">
                        <li>
                                                                                                <button type="button" class="btn btn-success btn-sm" data-id="1190000007471775" id="sideLike">推荐
                                    </button>
                                                                                        <strong id="sideLiked">2</strong> 推荐
                        </li>
                        <li>
                                                                                                <button type="button" id="sideBookmark" class="btn btn-default btn-sm" data-id="1190000007471775" data-type="article">收藏
                                    </button>
                                                                                        <strong id="sideBookmarked">8</strong> 收藏，<strong class="no-stress">153</strong> 浏览
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div><!-- end .post-topheader -->

    <div class="container mt30">
        <div class="row">
            <div class="col-xs-12 col-md-9 main ">

                
                <div class="article fmt article__content" data-id="1190000007471775" data-license="cc">
                    
<h2 id="articleHeader0">模块概览</h2>
<p>在nodejs中，path是个使用频率很高，但却让人又爱又恨的模块。部分因为文档说的不够清晰，部分因为接口的平台差异性。</p>
<p>将path的接口按照用途归类，仔细琢磨琢磨，也就没那么费解了。</p>
<h2 id="articleHeader1">获取路径/文件名/扩展名</h2>
<ul>
<li><p>获取路径：path.dirname(filepath)</p></li>
<li><p>获取文件名：path.basename(filepath)</p></li>
<li><p>获取扩展名：path.extname(filepath)</p></li>
</ul>
<h3 id="articleHeader2">获取所在路径</h3>
<p>例子如下：</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var path = require(&#39;path&#39;);
var filepath = &#39;/tmp/demo/js/test.js&#39;;

// 输出：/tmp/demo/js
console.log( path.dirname(filepath) );" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-keyword">var</span> filepath = <span class="hljs-string">'/tmp/demo/js/test.js'</span>;

<span class="hljs-comment">// 输出：/tmp/demo/js</span>
<span class="hljs-built_in">console</span>.log( path.dirname(filepath) );</code></pre>
<h3 id="articleHeader3">获取文件名</h3>
<p>严格意义上来说，path.basename(filepath) 只是输出路径的最后一部分，并不会判断是否文件名。</p>
<p>但大部分时候，我们可以用它来作为简易的“获取文件名“的方法。</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var path = require(&#39;path&#39;);

// 输出：test.js
console.log( path.basename(&#39;/tmp/demo/js/test.js&#39;) );

// 输出：test
console.log( path.basename(&#39;/tmp/demo/js/test/&#39;) );

// 输出：test
console.log( path.basename(&#39;/tmp/demo/js/test&#39;) );" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);

<span class="hljs-comment">// 输出：test.js</span>
<span class="hljs-built_in">console</span>.log( path.basename(<span class="hljs-string">'/tmp/demo/js/test.js'</span>) );

<span class="hljs-comment">// 输出：test</span>
<span class="hljs-built_in">console</span>.log( path.basename(<span class="hljs-string">'/tmp/demo/js/test/'</span>) );

<span class="hljs-comment">// 输出：test</span>
<span class="hljs-built_in">console</span>.log( path.basename(<span class="hljs-string">'/tmp/demo/js/test'</span>) );</code></pre>
<p>如果只想获取文件名，单不包括文件扩展呢？可以用上第二个参数。</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="// 输出：test
console.log( path.basename(&#39;/tmp/demo/js/test.js&#39;, &#39;.js&#39;) );" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-comment">// 输出：test</span>
<span class="hljs-built_in">console</span>.log( path.basename(<span class="hljs-string">'/tmp/demo/js/test.js'</span>, <span class="hljs-string">'.js'</span>) );</code></pre>
<h3 id="articleHeader4">获取文件扩展名</h3>
<p>简单的例子如下：</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var path = require(&#39;path&#39;);
var filepath = &#39;/tmp/demo/js/test.js&#39;;

// 输出：.js
console.log( path.extname(filepath) );" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-keyword">var</span> filepath = <span class="hljs-string">'/tmp/demo/js/test.js'</span>;

<span class="hljs-comment">// 输出：.js</span>
<span class="hljs-built_in">console</span>.log( path.extname(filepath) );</code></pre>
<p>更详细的规则是如下：（假设 path.basename(filepath) === B ）</p>
<ul>
<li><p>从B的最后一个<code>.</code>开始截取，直到最后一个字符。</p></li>
<li><p>如果B中不存在<code>.</code>，或者B的第一个字符就是<code>.</code>，那么返回空字符串。</p></li>
</ul>
<p>直接看<a href="https://nodejs.org/api/path.html#path_path_extname_path" target="_blank">官方文档</a>的例子</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="path.extname(&#39;index.html&#39;)
// returns &#39;.html&#39;

path.extname(&#39;index.coffee.md&#39;)
// returns &#39;.md&#39;

path.extname(&#39;index.&#39;)
// returns &#39;.&#39;

path.extname(&#39;index&#39;)
// returns &#39;&#39;

path.extname(&#39;.index&#39;)
// returns &#39;&#39;
" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript">path.extname(<span class="hljs-string">'index.html'</span>)
<span class="hljs-comment">// returns '.html'</span>

path.extname(<span class="hljs-string">'index.coffee.md'</span>)
<span class="hljs-comment">// returns '.md'</span>

path.extname(<span class="hljs-string">'index.'</span>)
<span class="hljs-comment">// returns '.'</span>

path.extname(<span class="hljs-string">'index'</span>)
<span class="hljs-comment">// returns ''</span>

path.extname(<span class="hljs-string">'.index'</span>)
<span class="hljs-comment">// returns ''</span>
</code></pre>
<h2 id="articleHeader5">路径组合</h2>
<ul>
<li><p>path.join([...paths])</p></li>
<li><p>path.resolve([...paths])</p></li>
</ul>
<h3 id="articleHeader6">path.join([...paths])</h3>
<p>把<code>paths</code>拼起来，然后再normalize一下。这句话反正我自己看着也是莫名其妙，可以参考下面的伪代码定义。</p>
<p>例子如下：</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var path = require(&#39;path&#39;);

// 输出 &#39;/foo/bar/baz/asdf&#39;
path.join(&#39;/foo&#39;, &#39;bar&#39;, &#39;baz/asdf&#39;, &#39;quux&#39;, &#39;..&#39;);" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre class="hljs coffeescript"><code class="javacript"><span class="hljs-reserved">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);

<span class="hljs-regexp">//</span> 输出 <span class="hljs-string">'/foo/bar/baz/asdf'</span>
path.join(<span class="hljs-string">'/foo'</span>, <span class="hljs-string">'bar'</span>, <span class="hljs-string">'baz/asdf'</span>, <span class="hljs-string">'quux'</span>, <span class="hljs-string">'..'</span>);</code></pre>
<p>path定义的伪代码如下：</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="module.exports.join = function(){
  var paths = Array.prototye.slice.call(arguments, 0);
  return this.normalize( paths.join(&#39;/&#39;) );
};" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-built_in">module</span>.exports.join = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{
  <span class="hljs-keyword">var</span> paths = <span class="hljs-built_in">Array</span>.prototye.slice.call(<span class="hljs-built_in">arguments</span>, <span class="hljs-number">0</span>);
  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.normalize( paths.join(<span class="hljs-string">'/'</span>) );
};</code></pre>
<h3 id="articleHeader7">path.resolve([...paths])</h3>
<p>这个接口的说明有点啰嗦。你可以想象现在你在shell下面，从左到右运行一遍<code>cd path</code>命令，最终获取的绝对路径/文件名，就是这个接口所返回的结果了。</p>
<p>比如 <code>path.resolve('/foo/bar', './baz')</code> 可以看成下面命令的结果</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="cd /foo/bar
cd ./baz" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="bash"><span class="hljs-built_in">cd</span> /foo/bar
<span class="hljs-built_in">cd</span> ./baz</code></pre>
<p>更多对比例子如下：</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var path = require(&#39;path&#39;);

// 假设当前工作路径是 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path

// 输出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path
console.log( path.resolve(&#39;&#39;) )

// 输出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path
console.log( path.resolve(&#39;.&#39;) )

// 输出 /foo/bar/baz
console.log( path.resolve(&#39;/foo/bar&#39;, &#39;./baz&#39;) );

// 输出 /foo/bar/baz
console.log( path.resolve(&#39;/foo/bar&#39;, &#39;./baz/&#39;) );

// 输出 /tmp/file
console.log( path.resolve(&#39;/foo/bar&#39;, &#39;/tmp/file/&#39;) );

// 输出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path/www/js/mod.js
console.log( path.resolve(&#39;www&#39;, &#39;js/upload&#39;, &#39;../mod.js&#39;) );
" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);

<span class="hljs-comment">// 假设当前工作路径是 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path</span>

<span class="hljs-comment">// 输出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path</span>
<span class="hljs-built_in">console</span>.log( path.resolve(<span class="hljs-string">''</span>) )

<span class="hljs-comment">// 输出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path</span>
<span class="hljs-built_in">console</span>.log( path.resolve(<span class="hljs-string">'.'</span>) )

<span class="hljs-comment">// 输出 /foo/bar/baz</span>
<span class="hljs-built_in">console</span>.log( path.resolve(<span class="hljs-string">'/foo/bar'</span>, <span class="hljs-string">'./baz'</span>) );

<span class="hljs-comment">// 输出 /foo/bar/baz</span>
<span class="hljs-built_in">console</span>.log( path.resolve(<span class="hljs-string">'/foo/bar'</span>, <span class="hljs-string">'./baz/'</span>) );

<span class="hljs-comment">// 输出 /tmp/file</span>
<span class="hljs-built_in">console</span>.log( path.resolve(<span class="hljs-string">'/foo/bar'</span>, <span class="hljs-string">'/tmp/file/'</span>) );

<span class="hljs-comment">// 输出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path/www/js/mod.js</span>
<span class="hljs-built_in">console</span>.log( path.resolve(<span class="hljs-string">'www'</span>, <span class="hljs-string">'js/upload'</span>, <span class="hljs-string">'../mod.js'</span>) );
</code></pre>
<h2 id="articleHeader8">路径解析</h2>
<p>path.parse(path)</p>
<h2 id="articleHeader9">path.normalize(filepath)</h2>
<p>从官方文档的描述来看，path.normalize(filepath) 应该是比较简单的一个API，不过用起来总是觉得没底。</p>
<p>为什么呢？API说明过于简略了，包括如下：</p>
<ul>
<li><p>如果路径为空，返回<code>.</code>，相当于当前的工作路径。</p></li>
<li><p>将对路径中重复的路径分隔符（比如linux下的<code>/</code>)合并为一个。</p></li>
<li><p>对路径中的<code>.</code>、<code>..</code>进行处理。（类似于shell里的<code>cd ..</code>）</p></li>
<li><p>如果路径最后有<code>/</code>，那么保留该<code>/</code>。</p></li>
</ul>
<p>感觉stackoverflow上一个兄弟对这个API的解释更实在，<a href="http://stackoverflow.com/questions/10822574/difference-between-path-normalize-and-path-resolve-in-node-js" target="_blank">原文链接</a>。</p>
<blockquote><p>In other words, path.normalize is "What is the shortest path I can take that will take me to the same place as the input"</p></blockquote>
<p>代码示例如下。建议读者把代码拷贝出来运行下，看下实际效果。</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var path = require(&#39;path&#39;);
var filepath = &#39;/tmp/demo/js/test.js&#39;;

var index = 0;

var compare = function(desc, callback){
  console.log(&#39;[用例%d]：%s&#39;, ++index, desc);
  callback();
  console.log(&#39;\n&#39;);
};

compare(&#39;路径为空&#39;, function(){
  // 输出 .
  console.log( path.normalize(&#39;&#39;) );
});

compare(&#39;路径结尾是否带/&#39;, function(){
  // 输出 /tmp/demo/js/upload
  console.log( path.normalize(&#39;/tmp/demo/js/upload&#39;) );

  // /tmp/demo/js/upload/
  console.log( path.normalize(&#39;/tmp/demo/js/upload/&#39;) );
});

compare(&#39;重复的/&#39;, function(){
  // 输出 /tmp/demo/js
  console.log( path.normalize(&#39;/tmp/demo//js&#39;) );
});

compare(&#39;路径带..&#39;, function(){
  // 输出 /tmp/demo/js
  console.log( path.normalize(&#39;/tmp/demo/js/upload/..&#39;) );
});

compare(&#39;相对路径&#39;, function(){
  // 输出 demo/js/upload/
  console.log( path.normalize(&#39;./demo/js/upload/&#39;) );

  // 输出 demo/js/upload/
  console.log( path.normalize(&#39;demo/js/upload/&#39;) );
});

compare(&#39;不常用边界&#39;, function(){
  // 输出 ..
  console.log( path.normalize(&#39;./..&#39;) );

  // 输出 ..
  console.log( path.normalize(&#39;..&#39;) );

  // 输出 ../
  console.log( path.normalize(&#39;../&#39;) );

  // 输出 /
  console.log( path.normalize(&#39;/../&#39;) );
  
  // 输出 /
  console.log( path.normalize(&#39;/..&#39;) );
});" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-keyword">var</span> filepath = <span class="hljs-string">'/tmp/demo/js/test.js'</span>;

<span class="hljs-keyword">var</span> index = <span class="hljs-number">0</span>;

<span class="hljs-keyword">var</span> compare = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(desc, callback)</span></span>{
  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'[用例%d]：%s'</span>, ++index, desc);
  callback();
  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'\n'</span>);
};

compare(<span class="hljs-string">'路径为空'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{
  <span class="hljs-comment">// 输出 .</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">''</span>) );
});

compare(<span class="hljs-string">'路径结尾是否带/'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{
  <span class="hljs-comment">// 输出 /tmp/demo/js/upload</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'/tmp/demo/js/upload'</span>) );

  <span class="hljs-comment">// /tmp/demo/js/upload/</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'/tmp/demo/js/upload/'</span>) );
});

compare(<span class="hljs-string">'重复的/'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{
  <span class="hljs-comment">// 输出 /tmp/demo/js</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'/tmp/demo//js'</span>) );
});

compare(<span class="hljs-string">'路径带..'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{
  <span class="hljs-comment">// 输出 /tmp/demo/js</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'/tmp/demo/js/upload/..'</span>) );
});

compare(<span class="hljs-string">'相对路径'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{
  <span class="hljs-comment">// 输出 demo/js/upload/</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'./demo/js/upload/'</span>) );

  <span class="hljs-comment">// 输出 demo/js/upload/</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'demo/js/upload/'</span>) );
});

compare(<span class="hljs-string">'不常用边界'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{
  <span class="hljs-comment">// 输出 ..</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'./..'</span>) );

  <span class="hljs-comment">// 输出 ..</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'..'</span>) );

  <span class="hljs-comment">// 输出 ../</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'../'</span>) );

  <span class="hljs-comment">// 输出 /</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'/../'</span>) );
  
  <span class="hljs-comment">// 输出 /</span>
  <span class="hljs-built_in">console</span>.log( path.normalize(<span class="hljs-string">'/..'</span>) );
});</code></pre>
<p>感兴趣的可以看下 path.normalize(filepath) 的node源码如下：<a href="https://github.com/nodejs/node/blob/master/lib/path.js" target="_blank">传送门</a></p>
<h2 id="articleHeader10">文件路径分解/组合</h2>
<ul>
<li><p>path.format(pathObject)：将pathObject的root、dir、base、name、ext属性，按照一定的规则，组合成一个文件路径。</p></li>
<li><p>path.parse(filepath)：path.format()方法的反向操作。</p></li>
</ul>
<p>我们先来看看官网对相关属性的说明。</p>
<p>首先是linux下</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="┌─────────────────────┬────────────┐
│          dir        │    base    │
├──────┬              ├──────┬─────┤
│ root │              │ name │ ext │
&quot;  /    home/user/dir / file  .txt &quot;
└──────┴──────────────┴──────┴─────┘
(all spaces in the &quot;&quot; line should be ignored -- they are purely for formatting)" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="bash">┌─────────────────────┬────────────┐
│          dir        │    base    │
├──────┬              ├──────┬─────┤
│ root │              │ name │ ext │
<span class="hljs-string">"  /    home/user/dir / file  .txt "</span>
└──────┴──────────────┴──────┴─────┘
(all spaces <span class="hljs-keyword">in</span> the <span class="hljs-string">""</span> line should be ignored -- they are purely <span class="hljs-keyword">for</span> formatting)</code></pre>
<p>然后是windows下</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="┌─────────────────────┬────────────┐
│          dir        │    base    │
├──────┬              ├──────┬─────┤
│ root │              │ name │ ext │
&quot; C:\      path\dir   \ file  .txt &quot;
└──────┴──────────────┴──────┴─────┘
(all spaces in the &quot;&quot; line should be ignored -- they are purely for formatting)" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="bash">┌─────────────────────┬────────────┐
│          dir        │    base    │
├──────┬              ├──────┬─────┤
│ root │              │ name │ ext │
<span class="hljs-string">" C:\      path\dir   \ file  .txt "</span>
└──────┴──────────────┴──────┴─────┘
(all spaces <span class="hljs-keyword">in</span> the <span class="hljs-string">""</span> line should be ignored -- they are purely <span class="hljs-keyword">for</span> formatting)</code></pre>
<h3 id="articleHeader11">path.format(pathObject)</h3>
<p>阅读相关API文档说明后发现，path.format(pathObject)中，pathObject的配置属性是可以进一步精简的。</p>
<p>根据接口的描述来看，以下两者是等价的。</p>
<ul>
<li><p><code>root</code> vs <code>dir</code>：两者可以互相替换，区别在于，路径拼接时，<code>root</code>后不会自动加<code>/</code>，而<code>dir</code>会。</p></li>
<li><p><code>base</code> vs <code>name+ext</code>：两者可以互相替换。</p></li>
</ul>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var path = require(&#39;path&#39;);

var p1 = path.format({
  root: &#39;/tmp/&#39;, 
  base: &#39;hello.js&#39;
});
console.log( p1 ); // 输出 /tmp/hello.js

var p2 = path.format({
  dir: &#39;/tmp&#39;, 
  name: &#39;hello&#39;,
  ext: &#39;.js&#39;
});
console.log( p2 );  // 输出 /tmp/hello.js" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);

<span class="hljs-keyword">var</span> p1 = path.format({
  root: <span class="hljs-string">'/tmp/'</span>, 
  base: <span class="hljs-string">'hello.js'</span>
});
<span class="hljs-built_in">console</span>.log( p1 ); <span class="hljs-comment">// 输出 /tmp/hello.js</span>

<span class="hljs-keyword">var</span> p2 = path.format({
  dir: <span class="hljs-string">'/tmp'</span>, 
  name: <span class="hljs-string">'hello'</span>,
  ext: <span class="hljs-string">'.js'</span>
});
<span class="hljs-built_in">console</span>.log( p2 );  <span class="hljs-comment">// 输出 /tmp/hello.js</span></code></pre>
<h3 id="articleHeader12">path.parse(filepath)</h3>
<p>path.format(pathObject) 的反向操作，直接上官网例子。</p>
<p>四个属性，对于使用者是挺便利的，不过path.format(pathObject) 中也是四个配置属性，就有点容易搞混。</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="path.parse(&#39;/home/user/dir/file.txt&#39;)
// returns
// {
//    root : &quot;/&quot;,
//    dir : &quot;/home/user/dir&quot;,
//    base : &quot;file.txt&quot;,
//    ext : &quot;.txt&quot;,
//    name : &quot;file&quot;
// }" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript">path.parse(<span class="hljs-string">'/home/user/dir/file.txt'</span>)
<span class="hljs-comment">// returns</span>
<span class="hljs-comment">// {</span>
<span class="hljs-comment">//    root : "/",</span>
<span class="hljs-comment">//    dir : "/home/user/dir",</span>
<span class="hljs-comment">//    base : "file.txt",</span>
<span class="hljs-comment">//    ext : ".txt",</span>
<span class="hljs-comment">//    name : "file"</span>
<span class="hljs-comment">// }</span></code></pre>
<h2 id="articleHeader13">获取相对路径</h2>
<p>接口：path.relative(from, to)</p>
<p>描述：从<code>from</code>路径，到<code>to</code>路径的相对路径。</p>
<p>边界：</p>
<ul>
<li><p>如果<code>from</code>、<code>to</code>指向同个路径，那么，返回空字符串。</p></li>
<li><p>如果<code>from</code>、<code>to</code>中任一者为空，那么，返回当前工作路径。</p></li>
</ul>
<p>上例子：</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var path = require(&#39;path&#39;);

var p1 = path.relative(&#39;/data/orandea/test/aaa&#39;, &#39;/data/orandea/impl/bbb&#39;);
console.log(p1);  // 输出 &quot;../../impl/bbb&quot;

var p2 = path.relative(&#39;/data/demo&#39;, &#39;/data/demo&#39;);
console.log(p2);  // 输出 &quot;&quot;

var p3 = path.relative(&#39;/data/demo&#39;, &#39;&#39;);
console.log(p3);  // 输出 &quot;../../Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path&quot;" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);

<span class="hljs-keyword">var</span> p1 = path.relative(<span class="hljs-string">'/data/orandea/test/aaa'</span>, <span class="hljs-string">'/data/orandea/impl/bbb'</span>);
<span class="hljs-built_in">console</span>.log(p1);  <span class="hljs-comment">// 输出 "../../impl/bbb"</span>

<span class="hljs-keyword">var</span> p2 = path.relative(<span class="hljs-string">'/data/demo'</span>, <span class="hljs-string">'/data/demo'</span>);
<span class="hljs-built_in">console</span>.log(p2);  <span class="hljs-comment">// 输出 ""</span>

<span class="hljs-keyword">var</span> p3 = path.relative(<span class="hljs-string">'/data/demo'</span>, <span class="hljs-string">''</span>);
<span class="hljs-built_in">console</span>.log(p3);  <span class="hljs-comment">// 输出 "../../Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path"</span></code></pre>
<h2 id="articleHeader14">平台相关接口/属性</h2>
<p>以下属性、接口，都跟平台的具体实现相关。也就是说，同样的属性、接口，在不同平台上的表现不同。</p>
<ul>
<li><p>path.posix：path相关属性、接口的linux实现。</p></li>
<li><p>path.win32：path相关属性、接口的win32实现。</p></li>
<li><p>path.sep：路径分隔符。在linux上是<code>/</code>，在windows上是``。</p></li>
<li><p>path.delimiter：path设置的分割符。linux上是<code>:</code>，windows上是<code>;</code>。</p></li>
</ul>
<p>注意，当使用 path.win32 相关接口时，参数同样可以使用<code>/</code>做分隔符，但接口返回值的分割符只会是``。</p>
<p>直接来例子更直观。</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="&gt; path.win32.join(&#39;/tmp&#39;, &#39;fuck&#39;)
&#39;\\tmp\\fuck&#39;
&gt; path.win32.sep
&#39;\\&#39;
&gt; path.win32.join(&#39;\tmp&#39;, &#39;demo&#39;)
&#39;\\tmp\\demo&#39;
&gt; path.win32.join(&#39;/tmp&#39;, &#39;demo&#39;)
&#39;\\tmp\\demo&#39;" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="bash">&gt; path.win32.join(<span class="hljs-string">'/tmp'</span>, <span class="hljs-string">'fuck'</span>)
<span class="hljs-string">'\\tmp\\fuck'</span>
&gt; path.win32.sep
<span class="hljs-string">'\\'</span>
&gt; path.win32.join(<span class="hljs-string">'\tmp'</span>, <span class="hljs-string">'demo'</span>)
<span class="hljs-string">'\\tmp\\demo'</span>
&gt; path.win32.join(<span class="hljs-string">'/tmp'</span>, <span class="hljs-string">'demo'</span>)
<span class="hljs-string">'\\tmp\\demo'</span></code></pre>
<h3 id="articleHeader15">path.delimiter</h3>
<p>linux系统例子：</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="console.log(process.env.PATH)
// &#39;/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin&#39;

process.env.PATH.split(path.delimiter)
// returns [&#39;/usr/bin&#39;, &#39;/bin&#39;, &#39;/usr/sbin&#39;, &#39;/sbin&#39;, &#39;/usr/local/bin&#39;]" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="bash">console.log(process.env.PATH)
// <span class="hljs-string">'/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin'</span>

process.env.PATH.split(path.delimiter)
// returns [<span class="hljs-string">'/usr/bin'</span>, <span class="hljs-string">'/bin'</span>, <span class="hljs-string">'/usr/sbin'</span>, <span class="hljs-string">'/sbin'</span>, <span class="hljs-string">'/usr/local/bin'</span>]</code></pre>
<p>windows系统例子：</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="console.log(process.env.PATH)
// &#39;C:\Windows\system32;C:\Windows;C:\Program Files\node\&#39;

process.env.PATH.split(path.delimiter)
// returns [&#39;C:\\Windows\\system32&#39;, &#39;C:\\Windows&#39;, &#39;C:\\Program Files\\node\\&#39;]" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="bash">console.log(process.env.PATH)
// <span class="hljs-string">'C:\Windows\system32;C:\Windows;C:\Program Files\node\'</span>

process.env.PATH.split(path.delimiter)
// returns [<span class="hljs-string">'C:\\Windows\\system32'</span>, <span class="hljs-string">'C:\\Windows'</span>, <span class="hljs-string">'C:\\Program Files\\node\\'</span>]</code></pre>
<h2 id="articleHeader16">相关链接</h2>
<p>官方文档：<a href="https://nodejs.org/api/path.html#path_path" target="_blank">https://nodejs.org/api/path.h...</a></p>

                </div>
                                                
                <div class="clearfix mt10">

                    <ul class="article-operation list-inline pull-left">
                        <li><a href="https://segmentfault.com/a/1190000007471775" class="text-muted">8 小时前发布</a></li>
                                                                                                                            <li class="dropdown js__content-ops" data-module="article" data-id="1190000007471775" data-typetext="文章">
                                <a href="javascript:void(0);" class="dropdown-toggle text-muted" data-toggle="dropdown">更多<b class="caret"></b></a>
                                <ul class="dropdown-menu dropdown-menu-left">
                                    <li><a href="https://segmentfault.com/a/1190000007471775#911" data-toggle="modal" data-target="#911" data-action="report">举报</a></li>
                                                                            
                                                                                                                        
                                        
                                                                    </ul>
                            </li>
                                            </ul>
                </div>
<div class="mt10 text-center"><button type="button" id="mainLike" data-id="1190000007471775" class="btn btn-success btn-lg mr15 ">
                            2 推荐
                        </button><button type="button" id="mainBookmark" data-type="article" data-id="1190000007471775" class="btn btn-default btn-lg mr15 ">
                            收藏
                        </button></div>
                                    <div class="recommend-post pt30 mt40 mb30 border-top">
                        <div class="row">
                            <div class="col-md-8">
                                                                <h4 class="mt0">你可能感兴趣的文章</h4>
                                <ul class="widget-links list-unstyled">
                                                                            <li class="widget-links__item">
                                            <a href="https://segmentfault.com/a/1190000004657579" title="漫谈前端及其自学路径——来自《前端养成记》">漫谈前端及其自学路径——来自《前端养成记》</a>
                                            <small class="text-muted">
                                                44 收藏，1.5k
                                                浏览
                                            </small>
                                        </li>
                                                                            <li class="widget-links__item">
                                            <a href="https://segmentfault.com/a/1190000004593603" title="node js模块机制与异步处理">node js模块机制与异步处理</a>
                                            <small class="text-muted">
                                                5 收藏，515
                                                浏览
                                            </small>
                                        </li>
                                                                            <li class="widget-links__item">
                                            <a href="https://segmentfault.com/a/1190000003874170" title="Node.js 官方Path模块简介">Node.js 官方Path模块简介</a>
                                            <small class="text-muted">
                                                2 收藏，574
                                                浏览
                                            </small>
                                        </li>
                                                                    </ul>
                                                            </div>
                            <div class="col-md-4">
                                                                    <div class="article-license">
                                                                                                                        <img class="mb5" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/creativecommons-cc.png" height="24"><br>
                                                                                <div class="license-item text-muted">
                                            本文采用 <a href="http://creativecommons.org/licenses/by/3.0/cn" target="_blank" class="alert-link">署名-相同方式共享 3.0 中国大陆许可协议</a>，分享、演绎需署名且使用相同方式共享。
                                        </div>

                                    </div>
                                                            </div>
                        </div>

                    </div>
                                <!-- <ul class="list-unstyled text-muted mt30">
                                        <li>上一篇：<a href="/a/1190000007412310">Nodejs进阶：基于express+multer的文件上传</a></li>
                                                        </ul> -->

                <h2 class="h4 post-comment-title">讨论区</h2>
                <div class="widget-comments" id="comment-1190000007471775" data-id="1190000007471775">
                    <div class="widget-comments__form row">
            
                            <form class="clearfix SFLogin" method="POST">
                    <div class="form-group mb0 widget-comments__form--input">
                        <input name="id" type="hidden" value="1190000007471775">
                        <textarea rows="1" name="text" class="SFLogin form-control mono" id="commentText-1190000007471775" data-id="1190000007471775" placeholder="使用评论询问更多信息或提出修改意见，请不要在评论里回答问题" style="overflow: hidden; word-wrap: break-word; height: 35px;"></textarea>

                    </div>
                    <div class="widget-comments__btn">
                        <div class="pull-right">
                            <button type="submit" class="btn btn-default postComment" data-id="1190000007471775">提交评论
                            </button>
                            <span class="widget-comments__btn--tips"><a href="javascript:void(0);" class="toggle-comment-helper" title="语法提示">
                            <i class="fa fa-question-circle"></i>
                        </a></span>
                        </div>
                    </div>
                </form>
                <div class="col-md-12">
                    <div class="alert alert-warning alert-dismissible mb0 mt10 fmt comment-helper" data-rank="" style="" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close" style="right:0;"><span aria-hidden="true">×</span></button>
                        评论支持部分 Markdown 语法：<code>**bold**</code> <code>_italic_</code>
                        <code>[link](http://example.com)</code> <code>&gt; 引用</code> <code>`code`</code> <code>-
                        列表</code>。<br>同时，被你 @ 的用户也会收到通知
                    </div>
                </div>
            
        </div><!-- /.widget-comments__form -->
            </div><!-- /.widget-comments -->

    

                                    
                
            </div><!-- /.main -->


            <div class="col-xs-12 col-md-3 side">
                <div class="sfad-sidebar">
      <div class="sfad-item">
    <ins><style>
.sfad-item ins {
position: relative;
display: inline-block;
}
.ad-sign {
position: absolute;
right: 8px;
bottom: 8px;
padding: 0 3px;
background: rgba(0,0,0,.15);
color: #fff;
font-size: 12px;
text-decoration: none;
height: 16px;
line-height: 16px;
border-radius: 3px;
}
</style><a href="https://sponsor.segmentfault.com/ck.php?oaparams=2__bannerid=88__zoneid=2__cb=a644ad3e04__oadest=http%3A%2F%2Fwww.bagevent.com%2Fevent%2Fsfdc-2016hz" target="_blank"><img src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/bf096ea5b785b5a08ba2d957e6922b12.png" width="255" height="165" alt="SegmentFault 2016 开发者大会 - 杭州「Atom」" title="SegmentFault 2016 开发者大会 - 杭州「Atom」" border="0"></a><div id="beacon_a644ad3e04" style="position: absolute; left: 0px; top: 0px; visibility: hidden;"><img src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/lg.php" width="0" height="0" alt="" style="width: 0px; height: 0px;"></div><span class="ad-sign">广告</span></ins>
    <button class="close" type="button" aria-hidden="true">×</button>
</div>

  </div>


                <div class="widget-box no-border">
                    <p class="text-muted">本文隶属于专栏</p>
                    <h4 class="fz16"><a href="https://segmentfault.com/blog/chyingp">程序猿小卡的前端专栏</a></h4>

                    <p class="wordbreak">专注前端30年</p>


                    <div class="article__widget--author">
                        <a href="https://segmentfault.com/u/chyingp">
                            <img class="avatar-40" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/3770129147-1030000000446809_big64" alt="程序猿小卡_casper">
                        </a>
                        <a href="https://segmentfault.com/u/chyingp">
                            程序猿小卡_casper
                        </a>
                        <p class="text-muted mb0">作者</p>

                                                    <div style="margin-top: 20px;">
                                                                    <button type="button mb20" class="btn btn-default follow-article" data-do="follow" data-type="blog" data-id="1200000004088327">关注专栏
                                    </button>
                                                            </div>
                        

                    </div>

                </div>


                
                    <div data-type="widget" data-api="/api/bookmarkArchive/hots" data-api-overwrite="/api/bookmarkArchive/1190000007471775/related">
        <script type="text/template">
            <div class="widget-box widget-box--bookmark no-border">
                <h4 class="widget-box__title">相关收藏夹 <a id="widgetBookmarkRefresh" class="userstab pull-right"
                                                          href="javascript:;">换一组</a></h4>
                <ul class="widget-links list-unstyled media">
                    <% _.each(data,function(d){ %>
                    <li class="widget-links__item">
                        <img class="pull-left pattern pattern-<%= d.id%19 %> mr10" src="https://sf-static.b0.upaiyun.com/v-582926ab/global/img/pattern/<%= d.id%10 ? d.id%10 : 10 %>.svg" width="32">
                        <div class="media-body">
                            <a target="_blank" class="ellipsis mr0" href="<%- d.url %>"><%= d.name %></a>
                            <p class="mb0">
                                <span><%- d.num %></span> 个条目 <span class="division">|</span> <span><%- d.followers %></span> 人关注
                            </p>
                        </div>
                    </li>
                    <% }) %>
                </ul>
            </div>
        </script>
    
            <div class="widget-box widget-box--bookmark no-border">
                <h4 class="widget-box__title">相关收藏夹 <a id="widgetBookmarkRefresh" class="userstab pull-right" href="javascript:;">换一组</a></h4>
                <ul class="widget-links list-unstyled media">
                    
                    <li class="widget-links__item">
                        <img class="pull-left pattern pattern-3 mr10" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/2.svg" width="32">
                        <div class="media-body">
                            <a target="_blank" class="ellipsis mr0" href="https://segmentfault.com/bookmark/1230000007104632">前端资源汇总</a>
                            <p class="mb0">
                                <span>27</span> 个条目 <span class="division">|</span> <span>2</span> 人关注
                            </p>
                        </div>
                    </li>
                    
                    <li class="widget-links__item">
                        <img class="pull-left pattern pattern-13 mr10" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/7.svg" width="32">
                        <div class="media-body">
                            <a target="_blank" class="ellipsis mr0" href="https://segmentfault.com/bookmark/1230000004425737">nodejs</a>
                            <p class="mb0">
                                <span>4</span> 个条目 <span class="division">|</span> <span>1</span> 人关注
                            </p>
                        </div>
                    </li>
                    
                    <li class="widget-links__item">
                        <img class="pull-left pattern pattern-5 mr10" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/1.svg" width="32">
                        <div class="media-body">
                            <a target="_blank" class="ellipsis mr0" href="https://segmentfault.com/bookmark/1230000004108581">前端 Javascript</a>
                            <p class="mb0">
                                <span>5</span> 个条目 <span class="division">|</span> <span>1</span> 人关注
                            </p>
                        </div>
                    </li>
                    
                </ul>
            </div>
        </div>


                <div class="widget-share__full" data-text="Nodejs基础：路径处理模块path总结" data-url="https://segmentfault.com/a/1190000007471775" data-shorturl="http://sfau.lt/b5FvUF"><div style="margin-bottom:10px;">分享扩散：</div><div class="widget-share-network sharer-0" style="display: block;"><ul class="sn-inline"><li data-network="weibo"><a href="javascript:void(0);" class="entypo-weibo icon-sn-weibo share-1" data-toggle="tooltip" data-placement="top" title="" data-original-title="分享至新浪微博">新浪微博</a></li><li data-network="wechart"><a href="javascript:void(0);" class="entypo-wechart icon-sn-weixin share-2" data-toggle="tooltip" data-placement="top" title="" data-original-title="分享至微信">微信</a></li><li data-network="twitter"><a href="javascript:void(0);" class="entypo-twitter icon-sn-twitter share-3" data-toggle="tooltip" data-placement="top" title="" data-original-title="分享至 Twitter">Twitter</a></li><li data-network="facebook"><a href="javascript:void(0);" class="entypo-facebook icon-sn-facebook share-4" data-toggle="tooltip" data-placement="top" title="" data-original-title="分享至 Facebook">Facebook</a></li></ul></div><a type="button" class="btn btn-sm shareMore btn-sn-more" data-toggle="popover" data-placement="top" data-url="https://segmentfault.com/a/1190000007471775" data-shorturl="http://sfau.lt/b5FvUF"><span class="icon-sn-dotted" data-original-title="" title=""></span><strong class="visible-xs-inline">•••</strong></a></div>

                <div class="post-nav hidden-xs side-outline hidden-sm fixed" style="display: block; width: 255px; top: 0px;">
                    <div class="panel panel-default widget-outline">
                        <div class="panel-heading">文章目录</div>
                        <div class="panel-body">
                            <div class="nav-body" style="top: 0px;">
                                <div class="highlight-title" style="display: block; top: 378px; height: 27px;"></div>
                                <ul class="articleIndex"><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader0">模块概览</a></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader1">获取路径/文件名/扩展名</a></li><li style="list-style:none;"><ul><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader2">获取所在路径</a></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader3">获取文件名</a></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader4">获取文件扩展名</a></li></ul></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader5">路径组合</a></li><li style="list-style:none;"><ul><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader6">path.join([...paths])</a></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader7">path.resolve([...paths])</a></li></ul></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader8">路径解析</a></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader9">path.normalize(filepath)</a></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader10">文件路径分解/组合</a></li><li style="list-style:none;"><ul><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader11">path.format(pathObject)</a></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader12">path.parse(filepath)</a></li></ul></li><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader13">获取相对路径</a></li><li class="active"><a href="https://segmentfault.com/a/1190000007471775#articleHeader14">平台相关接口/属性</a></li><li style="list-style:none;"><ul><li class=""><a href="https://segmentfault.com/a/1190000007471775#articleHeader15">path.delimiter</a></li></ul></li><li><a href="https://segmentfault.com/a/1190000007471775#articleHeader16">相关链接</a></li></ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- /.side -->
        </div>
    </div>
</div>

<div id="shareToWeiboModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span><span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">分享</h4>
            </div>
            <div class="modal-body">
                <p class="sfModal-content">
                    分享到微博？
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default dont-likeweibo" data-dismiss="modal">取消</button>
                <a href="https://segmentfault.com/a/1190000007471775" id="shareLink" class="btn btn-primary done-btn" target="_blank" onclick="$(&#39;#shareToWeiboModal&#39;).modal(&#39;hide&#39;)">分享</a>
            </div>
        </div>
    </div>
</div>

    

<script type="text/template" id="regNext">
        <div class="row flex-vertical-center">
        <div class="col-md-12">
            <p class="mb0" style="font-size: 14px; margin-right:50px; font-family: Source Code Pro,Consolas,Menlo,Monaco,Courier New,monospace;">
                    “人生苦短须尽欢，我有 Python 价值观”……不对，什么叫 Python 价值观？
            </p>
            <button class="btn btn-primary SFLogin mr10"
                    onclick='ga("send", "event", "join button", "clicked", "footer welcome popup");'>投入组织怀抱
            </button>
            <button class="btn  btn-default  tomorrow">你才用 Python</button>
        </div>

    </div>
</script>

<div class="widget-register widget-welcome-question mt20 hidden-xs hidden-sm widget-welcome widget-register-slideUp">
    <div class="container">
        <div class="row flex-vertical-center">
            <div class="col-sm-12 col-md-8">
                <p class="mb0">
                                                                技术专栏，帮你记录编程中的点滴，提升你对技术的理解<br>收藏感兴趣的文章，丰富自己的知识库
                                    </p>

            </div>
            <div class="col-sm-12 col-lg-3 col-lg-offset-1 col-md-4">
                <button class="btn btn-primary btn-lg SFLogin  mr10" onclick="ga(&quot;send&quot;, &quot;event&quot;, &quot;join button&quot;, &quot;clicked&quot;, &quot;footer welcome popup&quot;);">立即注册
                </button>
                <button class="btn btn-lg btn-default  tomorrow">明天提醒我</button>
            </div>
        </div>
    </div>
</div>

<div class="modal widget-911" id="911" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button class="close" data-dismiss="modal" type="button">
          <span aria-hidden="true">×</span>
          <span class="sr-only">Close</span>
        </button>
        <h4 class="modal-title"><span data-model="action"></span><span data-model="type"></span></h4>
      </div>
      <div class="modal-body">
        <form id="reportForm">
          <!-- 后台返回信息 -->
          <p class="alert alert-warning" data-model="returnMsg"></p>
          <div data-role="base">
            <p>
              <strong class="required">我要<span data-model="action"></span>该<span data-model="type"></span>，理由是：</strong>
            </p>
            <ul class="list-unstyled" data-model="list"></ul>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button class="btn btn-default pull-left" type="button" data-role="back" style="display:none">返回重选</button>
                <button class="btn btn-default" data-dismiss="modal" type="button">取消</button>
        <button class="btn btn-primary" data-role="submit" type="button">提交</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<footer id="footer">
    <div class="container">
        <div class="row hidden-xs">
            <dl class="col-sm-2 site-link">
                <dt>网站相关</dt>
                <dd><a href="https://segmentfault.com/about">关于我们</a></dd>
                <dd><a href="https://segmentfault.com/tos">服务条款</a></dd>
                <dd><a href="https://segmentfault.com/faq">帮助中心</a></dd>
                <dd><a href="https://segmentfault.com/repu">声望与权限</a></dd>
                <dd><a href="https://segmentfault.com/markdown">编辑器语法</a></dd>
                <dd><a href="https://weekly.segmentfault.com/">每周精选</a></dd>
                <dd><a href="https://segmentfault.com/app">App 下载</a></dd>
                <dd><a href="https://segmentfault.com/community">社区服务中心</a></dd>
            </dl>
            <dl class="col-sm-2 site-link">
                <dt>联系合作</dt>
                <dd><a href="https://segmentfault.com/contact">联系我们</a></dd>
                <dd><a href="https://segmentfault.com/hiring">加入我们</a></dd>
                <dd><a href="https://segmentfault.com/link">合作伙伴</a></dd>
                <dd><a href="https://segmentfault.com/press">媒体报道</a></dd>
                <dd><a href="https://board.segmentfault.com/">建议反馈</a></dd>
                            </dl>
            <dl class="col-sm-2 site-link">
                <dt>常用链接</dt>
                                                <dd><a href="https://chrome.google.com/webstore/detail/segmentfault-%E7%AC%94%E8%AE%B0/pjklfdmleagfaekibdccmhlhellefcfo" target="_blank">笔记插件: Chrome</a></dd>
                                                                <dd><a href="https://addons.mozilla.org/zh-CN/firefox/addon/sf-note-ext/" target="_blank">笔记插件: Firefox</a></dd>
                                                                <dd>订阅：<a href="https://segmentfault.com/feeds">问答</a> / <a href="https://segmentfault.com/feeds/blogs">文章</a></dd>
                                                                <dd><a href="https://mirrors.segmentfault.com/" target="_blank">文档镜像</a></dd>
                                                                <dd><a href="https://segmentfault.com/blog/interview" target="_blank">社区访谈</a></dd>
                                                                <dd><a href="https://segmentfault.com/d-day" target="_blank">D-DAY 技术沙龙</a></dd>
                                                                <dd><a href="https://segmentfault.com/hackathon" target="_blank">黑客马拉松 Hackathon</a></dd>
                                                                <dd><a href="https://namebeta.com/" target="_blank">域名搜索注册</a></dd>
                                            </dl>
            <dl class="col-sm-2 site-link">
                <dt>关注我们</dt>
                                <dd><a href="https://github.com/SegmentFault" target="_blank">Github</a></dd>
                                <dd><a href="https://twitter.com/segment_fault" target="_blank">Twitter</a></dd>
                                <dd><a href="http://weibo.com/segmentfault" target="_blank">新浪微博</a></dd>
                                <dd><a href="https://segmentfault.com/blog/segmentfault_team" target="_blank">团队日志</a></dd>
                                <dd><a href="https://segmentfault.com/blog/segmentfault" target="_blank">产品技术日志</a></dd>
                                <dd><a href="https://segmentfault.com/blog/community_admin" target="_blank">社区运营日志</a></dd>
                                <dd><a href="https://segmentfault.com/blog/segmentfault_news" target="_blank">市场运营日志</a></dd>
                            </dl>
            <dl class="col-sm-4 site-link" id="license">
                <dt>内容许可</dt>
                <dd>除特别说明外，用户内容均采用 <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-sa/3.0/cn/">知识共享署名-相同方式共享 3.0 中国大陆许可协议</a> 进行许可
                </dd>
                <dd>本站由 <a target="_blank" href="https://www.upyun.com/?utm_source=segmentfault&amp;utm_medium=link&amp;utm_campaign=upyun&amp;md=segmentfault">又拍云</a> 提供 CDN 存储服务
                </dd>
            </dl>
        </div>
        <div class="copyright">
            Copyright © 2011-2016 SegmentFault. 当前呈现版本 16.11.11<br>
            <a href="http://www.miibeian.gov.cn/" rel="nofollow">浙ICP备 15005796号-2</a> &nbsp;
            <a target="_blank" href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010602002000" rel="nofollow">浙公网安备 33010602002000号</a>
        </div>
        <p class="text-center">
            <a class="js__view--selector hidden-sm hidden-md hidden-lg" data-action="mobile" href="javascript:;">移动版</a>
            <a class="js__view--selector hidden-sm hidden-md hidden-lg" data-action="desktop" href="javascript:;">桌面版</a>
        </p>
    </div>
</footer>

<div id="fixedTools" class="hidden-xs hidden-sm">
    <a id="backtop" class="border-bottom" href="https://segmentfault.com/a/1190000007471775#">回顶部</a>

    <div class="qrcodeWraper">
        <a href="https://segmentfault.com/app#qrcode"><span class="glyphicon glyphicon-qrcode"></span></a>
        <img id="qrcode" class="border" alt="sf-wechat" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/appQrcode.png">

        <p class="qrcode-text">扫扫下载 App</p>
    </div>
</div>

<div class="app-promotion-bar">
    <a href="javascript:;"><i class="fa fa-close close"></i></a>
    <div class="icon"></div>
    <h5 class="title h5">SegmentFault</h5>
    <p class="describe">一起探索更多未知</p>
    <a class="download-btn btn btn-sm btn-primary" href="https://segmentfault.com/app#qrcode">下载 App</a>
</div>

<script id="loginModal" type="text/template">
    <div class="row bg-white login-modal">
        <div class="col-md-4 col-sm-12 col-md-push-7 login-wrap">
            <h1 class="h4 text-muted login-title">用户登录</h1>
            <form action="/api/user/login" method="POST" role="form" class="mt30">
                <div class="form-group">
                    <label for="username" class="control-label">手机号 或 Email</label>
                    <input type="text" class="form-control" name="username" required placeholder="11 位手机号 或 Email"
                           autocomplete="off">
                </div>
                <div class="form-group">
                    <label class="control-label">密码</label><span class="pull-right"><a
                                href="/user/forgot">忘记密码</a></span>
                    <input type="password" class="form-control" name="password" required placeholder="密码">
                </div>
                <div class="form-group clearfix">
                    <div class="checkbox pull-left">
                        <label><input name="remember" type="checkbox" value="1" checked> 记住登录状态</label>
                    </div>
                    <button type="submit" class="btn btn-primary pull-right pl20 pr20"
                            onclick='ga("send", "event", "email login button", "clicked", "login modal");'>登录
                    </button>
                </div>
            </form>
            <p class="h4 text-muted visible-xs-block h4">快速登录</p>
            <div class="widget-login mt30">
                <p class="text-muted mt5 mr10 pull-left hidden-xs">快速登录</p>
                <a href="/user/oauth/google" class=""
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "google"});'><span
                            class="icon-sn-google"></span> <strong class="visible-xs-inline">Google 账号</strong></a>
                <a href="/user/oauth/github" class=""
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "github"});");'><span
                            class="icon-sn-github"></span> <strong class="visible-xs-inline">Github 账号</strong></a>
                <a href="/user/oauth/weibo" class=""
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "weibo"});'><span
                            class="icon-sn-weibo"></span> <strong class="visible-xs-inline">新浪微博账号</strong></a>
                <a href="/user/oauth/qq" class=""
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span
                            class="icon-sn-qq"></span> <strong class="visible-xs-inline">QQ 账号</strong></a>
                <a href="/user/oauth/weixin" class=""
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span
                            class="icon-sn-weixin"></span> <strong class="visible-xs-inline">微信账号</strong></a>
                <a href="/user/oauth/linkedin" class=""
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "linkedin"});'><span
                            class="icon-sn-linkedin"></span> <strong class="visible-xs-inline">LinkedIn 账号</strong></a>
                <span id="loginShowMore" style="cursor: pointer" class="mb5"><span class="icon-sn-dotted"></span><strong
                            class="visible-xs-inline">•••</strong></span>
                <a href="/user/oauth/twitter" class=" hidden"
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "twitter"});'><span
                            class="icon-sn-twitter"></span> <strong class="visible-xs-inline">Twitter 账号</strong></a>
                <a href="/user/oauth/facebook" class=" hidden"
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "facebook"});'><span
                            class="icon-sn-facebook"></span> <strong class="visible-xs-inline">Facebook 账号</strong></a>
                <a href="/user/oauth/douban" class=" hidden"
                   onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "douban"});'><span
                            class="icon-sn-douban"></span> <strong class="visible-xs-inline">豆瓣账号</strong></a>
            </div>
        </div>
        <div class="login-vline hidden-xs hidden-sm"></div>
        <div class="col-md-4 col-md-pull-3 col-sm-12 login-wrap">
            <h1 class="h4 text-muted login-title">注册新账号</h1>
            <form action="/api/user/phone/register" method="POST" role="form" class="mt30">
                <div class="form-group">
                    <label for="name" class="control-label">名字</label>
                    <input type="text" class="form-control" name="name" required placeholder="真实姓名或常用昵称">
                </div>


                <div class="form-group js-register-switch-box">
                    <div class="mb10">
                        <label class="radio-inline">
                            <input type="radio" name="register_type" value="phone" checked> 用手机号注册
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="register_type" value="mail"> 用 Email 注册
                        </label>
                    </div>
                    <div class="js-register-switch-content">
                        <input type="phone" class="form-control mb15" name="phone" required placeholder="仅支持大陆手机号"
                               autocomplete="off">
                        <div class="input-group"><input name="code" type="text"
                                                        class="form-control js-user-login__phone-code-value"
                                                        placeholder="短信验证码">
                            <span class="input-group-btn"><button class="btn btn-default js-user-login__phone-vaild-btn"
                                                                  style="width:96px;" type="button">获取验证码</button></span>
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <label for="password" class="control-label">密码</label>
                    <input type="password" class="form-control" name="password" required placeholder="不少于 6 位">
                </div>
                <div class="form-group" style="display:none;">
                    <label class="required control-label">验证码</label>
                    <input type="text" class="form-control" id="captcha" name="captcha" placeholder="请输入下方的验证码">
                    <div class="mt10"><a id="loginReloadCaptcha" href="javascript:void(0)"><img
                                    data-src="/user/captcha?w=240&h=50" class="captcha" width="240" height="50"/></a>
                    </div>
                </div>
                <div class="form-group clearfix">
                    <div class="checkbox pull-left">
                        同意并接受<a href="/tos" target="_blank">《服务条款》</a>
                    </div>
                    <button type="submit" class="btn btn-primary pl20 pr20 pull-right"
                            onclick='ga("send", "event", "email register button", "clicked", "login modal");'>注册
                    </button>
                </div>
            </form>
        </div>
    </div>
    <div class="text-center text-muted mt30">
    </div>
</script>



<script>
    (function (w) {
        w.SF = {
            staticUrl: "https://sf-static.b0.upaiyun.com/v-582926ab"
        };
        w.SF.token = (function () {
    var _2HcXD1 = '8'//'8'
+//'1'
'13'+'84c'//'Z7d'
+'D2q'//'D2q'
+'70'//'2'
+//'J'
'43'+//'1hr'
'1hr'+'6'//'Z'
+'992'//'l4'
+//'Hj9'
'6'+''///*'eh'*/'eh'
+//'y'
'y'+'c'//'nH'
+//'iXH'
'49'+'2d9'//'2p'
+//'ko'
'2'+'3f'//'V'
+'0be'//'zvn'
+//'Jj'
'c5'+''///*'g6x'*/'g6x'
+//'l9n'
'9c8'+/* 'p1'//'p1' */''+//'5Hd'
'5Hd'+//'CZW'
'0', _O0Ypb = [[0,1],[5,8],[9,12],[14,15],[31,34]];

    for (var i = 0; i < _O0Ypb.length; i ++) {
        _2HcXD1 = _2HcXD1.substring(0, _O0Ypb[i][0]) + _2HcXD1.substring(_O0Ypb[i][1]);
    }

    return _2HcXD1;
})();;
    })(window);

                var lock = {
        type: "",
        text: '',
        table: {"ban_post":[1,"\u4f60\u5df2\u7ecf\u88ab\u7981\u8a00, \u65e0\u6cd5\u8fdb\u884c\u6b64\u64cd\u4f5c, \u5982\u6709\u7591\u4e49\u8bf7\u63d0\u4ea4\u7533\u8bc9, \u6216\u8005\u53d1\u90ae\u4ef6\u5230pr@segmentfault.com"]}
    };
</script>

    <script crossorigin="" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/assets.js"></script>
    <script crossorigin="" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/post.min.js"></script>

<script async="" src="./Nodejs基础：路径处理模块path总结 - 程序猿小卡的前端专栏 - SegmentFault_files/asyncjs.php"></script>

<script>
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-918487-8']);
    _gaq.push(['_trackPageview']);
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r;
        i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date();
        a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

            
        

            

    ga('create', 'UA-918487-8', 'auto', {
        'userID'
    : 0,
        'createdTime'
    : 0,
        'now'
    : 1479113625 });
    ga('set', 'dimension1', 'guest');
    ga('send', 'pageview');

</script>

<script>
    var _hmt = _hmt || [];
    (function () {
        var hm = document.createElement("script");
        hm.src = "//hm.baidu.com/hm.js?e23800c454aa573c0ccb16b52665ac26";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</script>




<div id="noteWidget" class="noteWidget hidden hidden-xs">
    <div class="noteWidget-header clearfix">
        <h2 class="h4 pull-left">记笔记</h2>
        <ul class="list-inline pull-right mb0">
            <li id="noteWidgetMinimize"><span class="icon-minimize"></span></li><li id="noteWidgetZoom"><span class="icon-zoom"></span></li><li id="noteWidgetClose"><span class="icon-close"></span></li>
        </ul>
    </div>
    <form method="POST" action="https://segmentfault.com/api/notes/add" role="form">
        <div class="form-group">
            <label for="title" class="sr-only">标题</label>
            <input type="hidden" value="" id="draftId">
            <input type="text" name="title" data-error="" autocomplete="off" class="form-control" placeholder="笔记描述" value="">
        </div>
        <div class="editor-config clearfix">
            <select name="lang" class="form-control pull-left input-sm">
                <optgroup label="文本语法">
                    <option value="text" data-mode="text">纯文本</option>
                    <option value="markdown" data-mode="markdown">Markdown</option>
                    <option value="javascript" data-mode="javascript">Javascript</option>
                    <option value="css" data-mode="css">CSS</option>
                    <option value="html5" data-mode="htmlmixed">HTML</option>
                    <option value="php" data-mode="php">PHP</option>
                    <option value="python" data-mode="python">Python</option>
                    <option value="ruby" data-mode="ruby">Ruby</option>
                    <option value="go" data-mode="go">Go</option>
                    <option value="c" data-mode="clike">C/C++</option>
                    <option value="java" data-mode="java">Java</option>
                    <option value="bash" data-mode="shell">Shell/Bash</option>
                </optgroup>
            </select>
            <div class="pull-right hidden-xs">
                <select name="indentWithTabs" class="form-control inline-block input-sm">
                    <optgroup label="缩进模式">
                        <option value="false">空格缩进</option>
                        <option value="true">Tabs 缩进</option>
                    </optgroup>
                </select>
                <select name="tabSize" class="form-control inline-block input-sm">
                    <optgroup label="缩进大小">
                        <option value="2">2</option>
                        <option value="4" selected="">4</option>
                    </optgroup>
                </select>
                <select name="lineWrap" class="form-control inline-block input-sm">
                    <optgroup label="换行方式">
                        <option value="true">自动换行</option>
                        <option value="false">不换行</option>
                    </optgroup>
                </select>
            </div>
        </div>
        <textarea id="codeMirror" class="form-control" style="display: none;"></textarea><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-hscrollbar" style="left: 0px;"><div style="height: 100%; min-height: 1px;"></div></div><div class="CodeMirror-vscrollbar"><div style="min-width: 1px;"></div></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px;"><div style="position: relative;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"></div><div class="CodeMirror-code"></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px;"></div><div class="CodeMirror-gutters"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 1px;"></div></div></div></div>
        <div class="mt20 clearfix">
            <div class="pull-right">
                <span class="text-muted hidden" id="editorStatus">已保存</span>
                <a id="dropIt" href="javascript:void(0);" class="mr10 hidden">[舍弃]</a>
                <button data-type="note" id="publishIt2" class="btn btn-default ml10" data-id="" data-do="add" data-url="" data-text="保存私密笔记" data-name="">保存私密笔记</button>
                <button data-type="note" id="publishIt" class="btn btn-primary ml10" data-id="" data-do="add" data-url="" data-text="保存公开笔记" data-name="">保存公开笔记</button>
                </div>
            </div>
        </form></div>
    
<div id="atwho-container"><div id="atwho-ground-commentText-1190000007471775"><div class="atwho-view" id="at-view-64"><ul class="atwho-view-ul"></ul></div></div></div><textarea tabindex="-1" style="position: absolute; top: -999px; left: 0px; right: auto; bottom: auto; border: 0px; padding: 0px; box-sizing: content-box; word-wrap: break-word; overflow: hidden; transition: none; height: 0px !important; min-height: 0px !important; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; font-weight: 400; font-style: normal; letter-spacing: 0px; text-transform: none; word-spacing: 0px; text-indent: 0px; white-space: pre-wrap; line-height: 21px; width: 649px;" class="autosizejs" id="autosizejs"></textarea></body><div></div></html>