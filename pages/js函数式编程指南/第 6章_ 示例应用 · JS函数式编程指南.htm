<!DOCTYPE html>
<!-- saved from url=(0076)https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html -->
<html lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>第 6章: 示例应用 · JS函数式编程指南</title>
        
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        
        <meta name="description" content="">
        <meta name="generator" content="GitBook 3.1.1">
        <meta name="author" content="Linghao Li">
        
        
    
    <link rel="stylesheet" href="./第 6章_ 示例应用 · JS函数式编程指南_files/style.css">

    
            
                
                <link rel="stylesheet" href="./第 6章_ 示例应用 · JS函数式编程指南_files/plugin.css">
                
            
                
                <link rel="stylesheet" href="./第 6章_ 示例应用 · JS函数式编程指南_files/website.css">
                
            
                
                <link rel="stylesheet" href="./第 6章_ 示例应用 · JS函数式编程指南_files/search.css">
                
            
                
                <link rel="stylesheet" href="./第 6章_ 示例应用 · JS函数式编程指南_files/website(1).css">
                
            
        

    

    
        
    
        
    
        
    
        
    
        
    
        
    

        
    
    
    <meta name="HandheldFriendly" content="true">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <link rel="apple-touch-icon-precomposed" sizes="152x152" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/gitbook/images/apple-touch-icon-precomposed-152.png">
    <link rel="shortcut icon" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/gitbook/images/favicon.ico" type="image/x-icon">

    
    <link rel="next" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html">
    
    
    <link rel="prev" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html">
    

    </head>
    <body>
        
<div class="book without-animation with-summary font-size-2 font-family-1">
    <div class="book-summary">
        
            
<div id="book-search-input" role="search">
    <input type="text" placeholder="Type to search">
</div>

            
                <nav role="navigation">
                


<ul class="summary">
    
    
    
        
        <li>
            <a href="https://www.gitbook.com/book/llh911001/mostly-adequate-guide-chinese" target="_blank" class="custom-link">JS函数式编程指南</a>
        </li>
    
    

    
    <li class="divider"></li>
    

    
        
        
    
        <li class="chapter " data-level="1.1" data-path="./">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/">
            
                    
                    Introduction
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2" data-path="ch1.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html">
            
                    
                    第 1 章: 我们在做什么？
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.2.1" data-path="ch1.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html#介绍">
            
                    
                    介绍
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2.2" data-path="ch1.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html#一个简单例子">
            
                    
                    一个简单例子
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.3" data-path="ch2.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch2.html">
            
                    
                    第 2 章: 一等公民的函数
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.3.1" data-path="ch2.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch2.html#快速概览">
            
                    
                    快速概览
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.3.2" data-path="ch2.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch2.html#为何钟爱一等公民">
            
                    
                    为何钟爱一等公民
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.4" data-path="ch3.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch3.html">
            
                    
                    第 3 章: 纯函数的好处
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.4.1" data-path="ch3.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch3.html#再次强调“纯”">
            
                    
                    再次强调“纯”
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.4.2" data-path="ch3.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch3.html#副作用可能包括">
            
                    
                    副作用可能包括...
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.4.3" data-path="ch3.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch3.html#八年级数学">
            
                    
                    八年级数学
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.4.4" data-path="ch3.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch3.html#追求“纯”的理由">
            
                    
                    追求“纯”的理由
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.4.5" data-path="ch3.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch3.html#总结">
            
                    
                    总结
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.5" data-path="ch4.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch4.html">
            
                    
                    第 4 章: 柯里化（curry）
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.5.1" data-path="ch4.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch4.html#不可或缺的-curry">
            
                    
                    不可或缺的 curry
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.5.2" data-path="ch4.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch4.html#不仅仅是双关语咖喱">
            
                    
                    不仅仅是双关语／咖喱
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.5.3" data-path="ch4.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch4.html#总结">
            
                    
                    总结
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.6" data-path="ch5.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html">
            
                    
                    第 5 章: 代码组合（compose）
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.6.1" data-path="ch5.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html#函数饲养">
            
                    
                    函数饲养
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.6.2" data-path="ch5.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html#pointfree">
            
                    
                    pointfree
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.6.3" data-path="ch5.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html#debug">
            
                    
                    debug
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.6.4" data-path="ch5.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html#范畴学">
            
                    
                    范畴学
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.6.5" data-path="ch5.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html#总结">
            
                    
                    总结
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter active" data-level="1.7" data-path="ch6.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html">
            
                    
                    第 6章: 示例应用
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter" data-level="1.7.1" data-path="ch6.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#声明式代码">
            
                    
                    声明式代码
            
                </a>
            

            
        </li>
    
        <li class="chapter" data-level="1.7.2" data-path="ch6.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#一个函数式的-flickr">
            
                    
                    一个函数式的 flickr
            
                </a>
            

            
        </li>
    
        <li class="chapter" data-level="1.7.3" data-path="ch6.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#有原则的重构">
            
                    
                    有原则的重构
            
                </a>
            

            
        </li>
    
        <li class="chapter" data-level="1.7.4" data-path="ch6.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#总结">
            
                    
                    总结
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.8" data-path="ch7.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch7.html">
            
                    
                    第 7 章: Hindley-Milner 类型签名
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.8.1" data-path="ch7.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch7.html#初识类型">
            
                    
                    初识类型
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.8.2" data-path="ch7.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch7.html#神秘的传奇故事">
            
                    
                    神秘的传奇故事
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.8.3" data-path="ch7.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch7.html#缩小可能性范围">
            
                    
                    缩小可能性范围
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.8.4" data-path="ch7.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch7.html#自由定理">
            
                    
                    自由定理
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.8.5" data-path="ch7.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch7.html#总结">
            
                    
                    总结
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.9" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html">
            
                    
                    第 8 章: 特百惠
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.9.1" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html#强大的容器">
            
                    
                    强大的容器
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.9.2" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html#第一个-functor">
            
                    
                    第一个 functor
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.9.3" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html#薛定谔的-maybe">
            
                    
                    薛定谔的 Maybe
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.9.4" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html#“纯”错误处理">
            
                    
                    “纯”错误处理
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.9.5" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html#王老先生有作用">
            
                    
                    王老先生有作用...
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.9.6" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html#异步任务">
            
                    
                    异步任务
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.9.7" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html#一点理论">
            
                    
                    一点理论
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.9.8" data-path="ch8.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch8.html#总结">
            
                    
                    总结
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.10" data-path="ch9.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch9.html">
            
                    
                    第 9 章: Monad
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.10.1" data-path="ch9.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch9.html#pointed-functor">
            
                    
                    pointed functor
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.10.2" data-path="ch9.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch9.html#混合比喻">
            
                    
                    混合比喻
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.10.3" data-path="ch9.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch9.html#chain-函数">
            
                    
                    chain 函数
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.10.4" data-path="ch9.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch9.html#理论">
            
                    
                    理论
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.10.5" data-path="ch9.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch9.html#总结">
            
                    
                    总结
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.11" data-path="ch10.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch10.html">
            
                    
                    第 10 章: Applicative Functor
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.11.1" data-path="ch10.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch10.html#应用-applicative-functor">
            
                    
                    应用 applicative functor
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.11.2" data-path="ch10.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch10.html#瓶中之船">
            
                    
                    瓶中之船
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.11.3" data-path="ch10.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch10.html#协调于激励">
            
                    
                    协调于激励
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.11.4" data-path="ch10.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch10.html#lift">
            
                    
                    lift
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.11.5" data-path="ch10.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch10.html#免费开瓶器">
            
                    
                    免费开瓶器
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.11.6" data-path="ch10.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch10.html#定律">
            
                    
                    定律
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.11.7" data-path="ch10.html">
            
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch10.html#总结">
            
                    
                    总结
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    

    

    <li class="divider"></li>

    <li>
        <a href="https://www.gitbook.com/" target="blank" class="gitbook-link">
            Published with GitBook
        </a>
    </li>
</ul>


                </nav>
            
        
    </div>

    <div class="book-body">
        
            <div class="body-inner">
                
                    

<div class="book-header" role="navigation">
    

    <!-- Title -->
    <a class="btn pull-left js-toolbar-action" aria-label="" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#"><i class="fa fa-align-justify"></i></a><div class="dropdown pull-right  js-toolbar-action"><a class="btn toggle-dropdown" aria-label="Share" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#"><i class="fa fa-share-alt"></i></a><div class="dropdown-menu dropdown-left"><div class="dropdown-caret"><span class="caret-outer"></span><span class="caret-inner"></span></div><div class="buttons"><button class="button size-5 ">Facebook</button><button class="button size-5 ">Google+</button><button class="button size-5 ">Twitter</button><button class="button size-5 ">Weibo</button><button class="button size-5 ">Instapaper</button></div></div></div><a class="btn pull-right js-toolbar-action" aria-label="" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#"><i class="fa fa-facebook"></i></a><a class="btn pull-right js-toolbar-action" aria-label="" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#"><i class="fa fa-twitter"></i></a><div class="dropdown pull-left font-settings js-toolbar-action"><a class="btn toggle-dropdown" aria-label="Font Settings" href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#"><i class="fa fa-font"></i></a><div class="dropdown-menu dropdown-right"><div class="dropdown-caret"><span class="caret-outer"></span><span class="caret-inner"></span></div><div class="buttons"><button class="button size-2 font-reduce">A</button><button class="button size-2 font-enlarge">A</button></div><div class="buttons"><button class="button size-2 ">Serif</button><button class="button size-2 ">Sans</button></div><div class="buttons"><button class="button size-3 ">White</button><button class="button size-3 ">Sepia</button><button class="button size-3 ">Night</button></div></div></div><h1>
        <i class="fa fa-circle-o-notch fa-spin"></i>
        <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/">第 6章: 示例应用</a>
    </h1>
</div>




                    <div class="page-wrapper" tabindex="-1" role="main">
                        <div class="page-inner">
                            
<div id="book-search-results">
    <div class="search-noresults">
    
                                <section class="normal markdown-section">
                                
                                <h1 id="第-6-章-示例应用">第 6 章: 示例应用</h1>
<h2 id="声明式代码">声明式代码</h2>
<p class="comments-section">我们要开始转变观念了，从本章开始，我们将不再指示计算机如何工作，而是指出我们明确希望得到的结果。我敢保证，这种做法与那种需要时刻关心所有细节的命令式编程相比，会让你轻松许多。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">与命令式不同，声明式意味着我们要写表达式，而不是一步一步的指示。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">以 SQL 为例，它就没有“先做这个，再做那个”的命令，有的只是一个指明我们想要从数据库取什么数据的表达式。至于如何取数据则是由它自己决定的。以后数据库升级也好，SQL 引擎优化也好，根本不需要更改查询语句。这是因为，有多种方式解析一个表达式并得到相同的结果。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">对包括我在内的一些人来说，一开始是不太容易理解“声明式”这个概念的；所以让我们写几个例子找找感觉。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-comment">// 命令式</span>
<span class="hljs-keyword">var</span> makes = [];
<span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; cars.length; i++) {
  makes.push(cars[i].make);
}


<span class="hljs-comment">// 声明式</span>
<span class="hljs-keyword">var</span> makes = cars.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">car</span>)</span>{ <span class="hljs-keyword">return</span> car.make; });
</code></pre>
<p class="comments-section">命令式的循环要求你必须先实例化一个数组，而且执行完这个实例化语句之后，解释器才继续执行后面的代码。然后再直接迭代 <code>cars</code> 列表，手动增加计数器，把各种零零散散的东西都展示出来...实在是直白得有些露骨。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">使用 <code>map</code> 的版本是一个表达式，它对执行顺序没有要求。而且，<code>map</code> 函数如何进行迭代，返回的数组如何收集，都有很大的自由度。它指明的是<code>做什么</code>，不是<code>怎么做</code>。因此，它是正儿八经的声明式代码。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">除了更加清晰和简洁之外，<code>map</code> 函数还可以进一步优化，这么一来我们宝贵的应用代码就无须改动了。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">至于那些说“虽然如此，但使用命令式循环速度要快很多”的人，我建议你们先去学学 JIT 优化代码的相关知识。这里有一个<a href="https://www.youtube.com/watch?v=65-RbBwZQdU" target="_blank">非常棒的视频</a>，可能会对你有帮助。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">再看一个例子。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-comment">// 命令式</span>
<span class="hljs-keyword">var</span> authenticate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">form</span>) </span>{
  <span class="hljs-keyword">var</span> user = toUser(form);
  <span class="hljs-keyword">return</span> logIn(user);
};

<span class="hljs-comment">// 声明式</span>
<span class="hljs-keyword">var</span> authenticate = compose(logIn, toUser);
</code></pre>
<p class="comments-section">虽然命令式的版本并不一定就是错的，但还是硬编码了那种一步接一步的执行方式。而 <code>compose</code> 表达式只是简单地指出了这样一个事实：用户验证是 <code>toUser</code> 和 <code>logIn</code> 两个行为的组合。这再次说明，声明式为潜在的代码更新提供了支持，使得我们的应用代码成为了一种高级规范（high level specification）。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">因为声明式代码不指定执行顺序，所以它天然地适合进行并行运算。它与纯函数一起解释了为何函数式编程是未来并行计算的一个不错选择——我们真的不需要做什么就能实现一个并行／并发系统。<div class="comments-icon"><div class="marker">+</div></div></p>
<h2 id="一个函数式的-flickr">一个函数式的 flickr</h2>
<p class="comments-section">现在我们以一种声明式的、可组合的方式创建一个示例应用。暂时我们还是会作点小弊，使用副作用；但我们会把副作用的程度降到最低，让它们与纯函数代码分离开来。这个示例应用是一个浏览器 widget，功能是从 flickr 获取图片并在页面上展示。我们从写 html 开始：<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-html"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.11/require.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"flickr.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>
</code></pre>
<p class="comments-section">flickr.js 如下：<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js">requirejs.config({
  paths: {
    ramda: <span class="hljs-string">'https://cdnjs.cloudflare.com/ajax/libs/ramda/0.13.0/ramda.min'</span>,
    jquery: <span class="hljs-string">'https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min'</span>
  }
});

<span class="hljs-built_in">require</span>([
    <span class="hljs-string">'ramda'</span>,
    <span class="hljs-string">'jquery'</span>
  ],
  <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">_, $</span>) </span>{
    <span class="hljs-keyword">var</span> trace = _.curry(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tag, x</span>) </span>{
      <span class="hljs-built_in">console</span>.log(tag, x);
      <span class="hljs-keyword">return</span> x;
    });
    <span class="hljs-comment">// app goes here</span>
  });
</code></pre>
<p class="comments-section">这里我们使用了 <a href="http://ramdajs.com/" target="_blank">ramda</a> ，没有用 lodash 或者其他类库。ramda 提供了 <code>compose</code>、<code>curry</code> 等很多函数。模块加载我们选择的是 requirejs，我以前用过 requirejs，虽然它有些重，但为了保持一致性，本书将一直使用它。另外，我也把 <code>trace</code> 函数写好了，便于 debug。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">有点跑题了。言归正传，我们的应用将做 4 件事：<div class="comments-icon"><div class="marker">+</div></div></p>
<ol>
<li>根据特定搜索关键字构造 url</li>
<li>向 flickr 发送 api 请求</li>
<li>把返回的 json 转为 html 图片</li>
<li>把图片放到屏幕上</li>
</ol>
<p class="comments-section">注意到没？上面提到了两个不纯的动作，即从 flickr 的 api 获取数据和在屏幕上放置图片这两件事。我们先来定义这两个动作，这样就能隔离它们了。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> Impure = {
  getJSON: _.curry(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">callback, url</span>) </span>{
    $.getJSON(url, callback);
  }),

  setHtml: _.curry(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">sel, html</span>) </span>{
    $(sel).html(html);
  })
};
</code></pre>
<p class="comments-section">这里只是简单地包装了一下 jQuery 的 <code>getJSON</code> 方法，把它变为一个 curry 函数，还有就是把参数位置也调换了下。这些方法都在 <code>Impure</code> 命名空间下，这样我们就知道它们都是危险函数。在后面的例子中，我们会把这两个函数变纯。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">下一步是构造 url 传给 <code>Impure.getJSON</code> 函数。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> url = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">term</span>) </span>{
  <span class="hljs-keyword">return</span> <span class="hljs-string">'https://api.flickr.com/services/feeds/photos_public.gne?tags='</span> + term + <span class="hljs-string">'&amp;format=json&amp;jsoncallback=?'</span>;
};
</code></pre>
<p class="comments-section">借助 monoid 或 combinator （后面会讲到这些概念），我们可以使用一些奇技淫巧来让 <code>url</code> 函数变为 pointfree 函数。但是为了可读性，我们还是选择以普通的非 pointfree 的方式拼接字符串。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">让我们写一个 <code>app</code> 函数发送请求并把内容放置到屏幕上。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> app = _.compose(Impure.getJSON(trace(<span class="hljs-string">"response"</span>)), url);

app(<span class="hljs-string">"cats"</span>);
</code></pre>
<p class="comments-section">这会调用 <code>url</code> 函数，然后把字符串传给 <code>getJSON</code> 函数。<code>getJSON</code> 已经局部应用了 <code>trace</code>，加载这个应用将会把请求的响应显示在 console 里。<div class="comments-icon"><div class="marker">+</div></div></p>
<p><img src="./第 6章_ 示例应用 · JS函数式编程指南_files/console_ss.png"></p>
<p class="comments-section">我们想要从这个 json 里构造图片，看起来 src 都在 <code>items</code> 数组中的每个 <code>media</code> 对象的 <code>m</code> 属性上。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">不管怎样，我们可以使用 ramda 的一个通用 getter 函数 <code>_.prop()</code> 来获取这些嵌套的属性。不过为了让你明白这个函数做了什么事情，我们自己实现一个 prop 看看：<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> prop = _.curry(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">property, object</span>)</span>{
  <span class="hljs-keyword">return</span> object[property];
});
</code></pre>
<p class="comments-section">实际上这有点傻，仅仅是用 <code>[]</code> 来获取一个对象的属性而已。让我们利用这个函数获取图片的 src。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> mediaUrl = _.compose(_.prop(<span class="hljs-string">'m'</span>), _.prop(<span class="hljs-string">'media'</span>));

<span class="hljs-keyword">var</span> srcs = _.compose(_.map(mediaUrl), _.prop(<span class="hljs-string">'items'</span>));
</code></pre>
<p class="comments-section">一旦得到了 <code>items</code>，就必须使用 <code>map</code> 来分解每一个 url；这样就得到了一个包含所有 src 的数组。把它和 <code>app</code> 联结起来，打印结果看看。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> renderImages = _.compose(Impure.setHtml(<span class="hljs-string">"body"</span>), srcs);
<span class="hljs-keyword">var</span> app = _.compose(Impure.getJSON(renderImages), url);
</code></pre>
<p class="comments-section">这里所做的只不过是新建了一个组合，这个组合会调用 <code>srcs</code> 函数，并把返回结果设置为 body 的 html。我们也把 <code>trace</code> 替换为了 <code>renderImages</code>，因为已经有了除原始 json 以外的数据。这将会粗暴地把所有的 src 直接显示在屏幕上。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section">最后一步是把这些 src 变为真正的图片。对大型点的应用来说，是应该使用类似 Handlebars 或者 React 这样的 template/dom 库来做这件事的。但我们这个应用太小了，只需要一个 img 标签，所以用 jQuery 就好了。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> img = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">url</span>) </span>{
  <span class="hljs-keyword">return</span> $(<span class="hljs-string">'&lt;img /&gt;'</span>, { src: url });
};
</code></pre>
<p class="comments-section">jQuery 的 <code>html()</code> 方法接受标签数组为参数，所以我们只须把 src 转换为 img 标签然后传给 <code>setHtml</code> 即可。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> images = _.compose(_.map(img), srcs);
<span class="hljs-keyword">var</span> renderImages = _.compose(Impure.setHtml(<span class="hljs-string">"body"</span>), images);
<span class="hljs-keyword">var</span> app = _.compose(Impure.getJSON(renderImages), url);
</code></pre>
<p class="comments-section">任务完成！<div class="comments-icon"><div class="marker">+</div></div></p>
<p><img src="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/images/cats_ss.png"></p>
<p class="comments-section">下面是完整代码：<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js">requirejs.config({
  paths: {
    ramda: <span class="hljs-string">'https://cdnjs.cloudflare.com/ajax/libs/ramda/0.13.0/ramda.min'</span>,
    jquery: <span class="hljs-string">'https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min'</span>
  }
});

<span class="hljs-built_in">require</span>([
    <span class="hljs-string">'ramda'</span>,
    <span class="hljs-string">'jquery'</span>
  ],
  <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">_, $</span>) </span>{
    <span class="hljs-comment">////////////////////////////////////////////</span>
    <span class="hljs-comment">// Utils</span>

    <span class="hljs-keyword">var</span> Impure = {
      getJSON: _.curry(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">callback, url</span>) </span>{
        $.getJSON(url, callback);
      }),

      setHtml: _.curry(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">sel, html</span>) </span>{
        $(sel).html(html);
      })
    };

    <span class="hljs-keyword">var</span> img = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">url</span>) </span>{
      <span class="hljs-keyword">return</span> $(<span class="hljs-string">'&lt;img /&gt;'</span>, { src: url });
    };

    <span class="hljs-keyword">var</span> trace = _.curry(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tag, x</span>) </span>{
      <span class="hljs-built_in">console</span>.log(tag, x);
      <span class="hljs-keyword">return</span> x;
    });

    <span class="hljs-comment">////////////////////////////////////////////</span>

    <span class="hljs-keyword">var</span> url = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">t</span>) </span>{
      <span class="hljs-keyword">return</span> <span class="hljs-string">'https://api.flickr.com/services/feeds/photos_public.gne?tags='</span> + t + <span class="hljs-string">'&amp;format=json&amp;jsoncallback=?'</span>;
    };

    <span class="hljs-keyword">var</span> mediaUrl = _.compose(_.prop(<span class="hljs-string">'m'</span>), _.prop(<span class="hljs-string">'media'</span>));

    <span class="hljs-keyword">var</span> srcs = _.compose(_.map(mediaUrl), _.prop(<span class="hljs-string">'items'</span>));

    <span class="hljs-keyword">var</span> images = _.compose(_.map(img), srcs);

    <span class="hljs-keyword">var</span> renderImages = _.compose(Impure.setHtml(<span class="hljs-string">"body"</span>), images);

    <span class="hljs-keyword">var</span> app = _.compose(Impure.getJSON(renderImages), url);

    app(<span class="hljs-string">"cats"</span>);
  });
</code></pre>
<p class="comments-section">看看，多么美妙的声明式规范啊，只说做什么，不说怎么做。现在我们可以把每一行代码都视作一个等式，变量名所代表的属性就是等式的含义。我们可以利用这些属性去推导分析和重构这个应用。<div class="comments-icon"><div class="marker">+</div></div></p>
<h2 id="有原则的重构">有原则的重构</h2>
<p class="comments-section has-comments has-highlight-comments">上面的代码是有优化空间的——我们获取 url map 了一次，把这些 url 变为 img 标签又 map 了一次。关于 map 和组合是有定律的：<div class="comments-icon"><div class="marker">1</div></div></p>
<pre><code class="lang-js"><span class="hljs-comment">// map 的组合律</span>
<span class="hljs-keyword">var</span> law = compose(map(f), map(g)) == map(compose(f, g));
</code></pre>
<p class="comments-section">我们可以利用这个定律优化代码，进行一次有原则的重构。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-comment">// 原有代码</span>
<span class="hljs-keyword">var</span> mediaUrl = _.compose(_.prop(<span class="hljs-string">'m'</span>), _.prop(<span class="hljs-string">'media'</span>));

<span class="hljs-keyword">var</span> srcs = _.compose(_.map(mediaUrl), _.prop(<span class="hljs-string">'items'</span>));

<span class="hljs-keyword">var</span> images = _.compose(_.map(img), srcs);
</code></pre>
<p class="comments-section">感谢等式推导（equational reasoning）及纯函数的特性，我们可以内联调用 <code>srcs</code> 和 <code>images</code>，也就是把 map 调用排列起来。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> mediaUrl = _.compose(_.prop(<span class="hljs-string">'m'</span>), _.prop(<span class="hljs-string">'media'</span>));

<span class="hljs-keyword">var</span> images = _.compose(_.map(img), _.map(mediaUrl), _.prop(<span class="hljs-string">'items'</span>));
</code></pre>
<p class="comments-section">把 <code>map</code> 排成一列之后就可以应用组合律了。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> mediaUrl = _.compose(_.prop(<span class="hljs-string">'m'</span>), _.prop(<span class="hljs-string">'media'</span>));

<span class="hljs-keyword">var</span> images = _.compose(_.map(_.compose(img, mediaUrl)), _.prop(<span class="hljs-string">'items'</span>));
</code></pre>
<p class="comments-section">现在只需要循环一次就可以把每一个对象都转为 img 标签了。我们把 map 调用的 compose 取出来放到外面，提高一下可读性。<div class="comments-icon"><div class="marker">+</div></div></p>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> mediaUrl = _.compose(_.prop(<span class="hljs-string">'m'</span>), _.prop(<span class="hljs-string">'media'</span>));

<span class="hljs-keyword">var</span> mediaToImg = _.compose(img, mediaUrl);

<span class="hljs-keyword">var</span> images = _.compose(_.map(mediaToImg), _.prop(<span class="hljs-string">'items'</span>));
</code></pre>
<h2 id="总结">总结</h2>
<p class="comments-section">我们已经见识到如何在一个小而不失真实的应用中运用新技能了，也已经使用过函数式这个“数学框架”来推导和重构代码了。但是异常处理以及代码分支呢？如何让整个应用都是函数式的，而不仅仅是把破坏性的函数放到命名空间下？如何让应用更安全更富有表现力？这些都是本书第 2 部分将要解决的问题。<div class="comments-icon"><div class="marker">+</div></div></p>
<p class="comments-section"><a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch7.html">第 7 章: Hindley-Milner 类型签名</a><div class="comments-icon"><div class="marker">+</div></div></p>

                                
                                </section>
                            
    </div>
    <div class="search-results">
        <div class="has-results">
            
            <h1 class="search-results-title"><span class="search-results-count"></span> results matching "<span class="search-query"></span>"</h1>
            <ul class="search-results-list"></ul>
            
        </div>
        <div class="no-results">
            
            <h1 class="search-results-title">No results matching "<span class="search-query"></span>"</h1>
            
        </div>
    </div>
</div>

                        </div>
                    </div>
                
            </div>

            
                
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html#总结" class="navigation navigation-prev " aria-label="Previous page: 总结">
                    <i class="fa fa-angle-left"></i>
                </a>
                
                
                <a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch6.html#声明式代码" class="navigation navigation-next " aria-label="Next page: 声明式代码" style="margin-right: 15px;">
                    <i class="fa fa-angle-right"></i>
                </a>
                
            
        
    </div>

    <script>
        var gitbook = gitbook || [];
        gitbook.push(function() {
            gitbook.page.hasChanged({"page":{"title":"第 6章: 示例应用","level":"1.7","depth":1,"next":{"title":"声明式代码","level":"1.7.1","depth":2,"anchor":"#声明式代码","path":"ch6.md","ref":"ch6.md#声明式代码","articles":[]},"previous":{"title":"总结","level":"1.6.5","depth":2,"anchor":"#总结","path":"ch5.md","ref":"ch5.md#总结","articles":[]},"dir":"ltr"},"config":{"plugins":["comment"],"styles":{"website":"styles/website.css","pdf":"styles/pdf.css","epub":"styles/epub.css","mobi":"styles/mobi.css","ebook":"styles/ebook.css","print":"styles/print.css"},"pluginsConfig":{"comment":{"highlightCommented":true},"highlight":{},"search":{},"lunr":{"maxIndexSize":1000000},"sharing":{"facebook":true,"twitter":true,"google":false,"weibo":false,"instapaper":false,"vk":false,"all":["facebook","google","twitter","weibo","instapaper"]},"fontsettings":{"theme":"white","family":"sans","size":2},"theme-default":{"styles":{"website":"styles/website.css","pdf":"styles/pdf.css","epub":"styles/epub.css","mobi":"styles/mobi.css","ebook":"styles/ebook.css","print":"styles/print.css"},"showLevel":false}},"github":"llh911001/mostly-adequate-guide-chinese","theme":"default","author":"Linghao Li","pdf":{"pageNumbers":true,"fontSize":16,"fontFamily":"Arial","paperSize":"a4","chapterMark":"pagebreak","pageBreaksBefore":"/","margin":{"right":62,"left":62,"top":56,"bottom":56}},"structure":{"langs":"LANGS.md","readme":"README.md","glossary":"GLOSSARY.md","summary":"SUMMARY.md"},"variables":{},"title":"JS函数式编程指南","language":"zh","links":{"sidebar":{"JS函数式编程指南":"https://www.gitbook.com/book/llh911001/mostly-adequate-guide-chinese"},"gitbook":true},"gitbook":"*","description":"Mostly Adequate Guide 中文版"},"file":{"path":"ch6.md","mtime":"2016-09-19T03:35:00.000Z","type":"markdown"},"gitbook":{"version":"3.1.1","time":"2016-09-19T03:34:10.921Z"},"basePath":".","book":{"language":""}});
        });
    </script>
</div>

        
    <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/gitbook.js"></script>
    <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/theme.js"></script>
    
        
        <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/plugin.js"></script>
        
    
        
        <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/search-engine.js"></script>
        
    
        
        <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/search.js"></script>
        
    
        
        <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/lunr.min.js"></script>
        
    
        
        <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/search-lunr.js"></script>
        
    
        
        <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/buttons.js"></script>
        
    
        
        <script src="./第 6章_ 示例应用 · JS函数式编程指南_files/fontsettings.js"></script>
        
    

    


</body></html>