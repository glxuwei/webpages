<!DOCTYPE html>
<!-- saved from url=(0059)https://segmentfault.com/a/1190000004322487#articleHeader13 -->
<html lang="zh-CN"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1"><meta name="renderer" content="webkit"><meta property="qc:admins" content="15317273575564615446375"><meta property="og:image" content="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/touch-icon.png"><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"><meta name="alexaVerifyID" content="LkzCRJ7rPEUwt6fVey2vhxiw1vQ"><meta name="apple-itunes-app" content="app-id=958101793, app-argument="><title>你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault</title><meta name="description" content="看到标题时，有些同学可能会想：“我已经用xhr成功地发过很多个Ajax请求了，对它的基本操作已经算挺熟练了。” 我之前的想法和你们一样，直到最近我使用xhr时踩了不少坑儿，我才突然发现其实自己并不够了解xhr，我..."><meta name="keywords" content="xmlhttprequest,http,cors,ajax"><link rel="search" type="application/opensearchdescription+xml" href="https://segmentfault.com/opensearch.xml" title="SegmentFault"><link rel="shortcut icon" href="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/favicon.ico"><link rel="apple-touch-icon" href="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/touch-icon.png"><meta name="msapplication-TileColor" content="#009a61"><meta name="msapplication-square150x150logo" content="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/touch-icon.png"><link rel="alternate" type="application/atom+xml" title="SegmentFault 最新问题" href="https://segmentfault.com/feeds/questions"><link rel="alternate" type="application/atom+xml" title="SegmentFault 最新文章" href="https://segmentfault.com/feeds/blogs"><link rel="stylesheet" href="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/global.css"><link rel="stylesheet" href="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/blog.css"><link rel="stylesheet" href="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/responsive.css"><!--[if lt IE 9]><link rel="stylesheet" href="https://sf-static.b0.upaiyun.com/v-57c4094c/global/css/ie.css"/><script src="https://sf-static.b0.upaiyun.com/v-57c4094c/global/script/html5shiv.js"></script><script src="https://sf-static.b0.upaiyun.com/v-57c4094c/global/script/respond.js"></script><![endif]--><script src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/hm.js"></script><script type="text/javascript" async="" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/vds.js"></script><script async="" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/analytics.js"></script><script src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/debug.js"></script></head><body data-mod="blog" class="blog-post "><!--[if lt IE 9]><div class="alert alert-danger topframe" role="alert">你的浏览器实在<strong>太太太太太太旧了</strong>，放学别走，升级完浏览器再说 <a target="_blank" class="alert-link" href="http://browsehappy.com">立即升级</a></div><![endif]--><img id="icon4weChat" style="height: 0;width: 0;" data-src="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/touch-icon-512.png"><img id="icon4weChat" data-src="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/touch-icon-512.png"><div class="global-nav sf-header"><nav class="container nav"><div class="hidden-sm hidden-lg hidden-md"><div class="sf-header__logo sf-header__logo--response"><h1><a></a></h1></div><div class="dropdown m-menu"><a href="javascript:void(0);" id="dLabel" class="visible-xs-block m-toptools" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="glyphicon glyphicon-align-justify"></span><span class="mobile-menu__unreadpoint"></span></a><ul class="dropdown-menu" role="menu" aria-labelledby="dLabel"><li class="mobile-menu__item"><a href="https://segmentfault.com/questions/newest">问答</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/blogs">文章</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/user/note">笔记</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/jobs">职位</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/events">活动</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/tags">标签</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/users">榜单</a></li><li class="mobile-menu__item"><a href="https://segmentfault.com/sites">子站</a></li></ul></div><a href="https://segmentfault.com/user/login" class="visible-xs-block pull-right m-ask m-toptools"><span class="glyphicon glyphicon-log-in"></span></a></div><div class="row hidden-xs"><div class="col-sm-9 col-md-7 col-lg-6"><div class="sf-header__logo"><h1><a href="https://segmentfault.com/">SegmentFault</a></h1></div><ul class="menu list-inline pull-left hidden-xs"><li class="menu__item"><a href="https://segmentfault.com/questions">问答</a></li><li class="menu__item"><a href="https://segmentfault.com/blogs">文章</a></li><li class="menu__item"><a href="https://segmentfault.com/notes">笔记</a></li><li class="menu__item"><a href="https://segmentfault.com/jobs">职位</a></li><li class="menu__item"><a href="https://segmentfault.com/events">活动</a></li></ul></div><div class="col-sm-3 col-md-5 col-lg-6 text-right"><form action="https://segmentfault.com/search" class="header-search  hidden-sm hidden-xs mr20"><button class="btn btn-link"><span class="sr-only">搜索</span><span class="glyphicon glyphicon-search"></span></button><input id="searchBox" name="q" type="text" placeholder="输入关键字搜索" class="form-control" value=""></form><ul class="opts list-inline hidden-xs"><li class="opts__item message has-unread"><a target="_blank" href="https://segmentfault.com/tour"><span class="sr-only">消息</span><span id="messageCount" class="fa fa-hand-peace-o"></span></a></li><li class="opts__item"><a href="https://segmentfault.com/user/login" class="SFLogin em ml10" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;Button&#39;, &#39;Click&#39;, &#39;Login&#39;]);">注册 ·
                                        登录</a></li></ul></div></div></nav></div><div class="global-navTags"><div class="container"><nav class=" nav"><ul class="nav__list"><li class="nav__item"><a href="https://segmentfault.com/"><i class="fa fa-home"></i>home
                            </a></li><li class="nav__item"><a href="https://segmentfault.com/timeline"><i class="fa fa-list-alt"></i>feed
                            </a></li><li class="nav__item nav__item--split"><a><span class="split"></span></a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/javascript">javascript</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/php">php</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/python">python</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/java">java</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/mysql">mysql</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/ios">ios</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/android">android</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/node.js">node.js</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/html5">html5</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/linux">linux</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/c%2B%2B">c++</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/css3">css3</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/git">git</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/golang">golang</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/ruby">ruby</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/vim">vim</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/docker">docker</a></li><li class="nav__item tag-nav__item"><a href="https://segmentfault.com/t/mongodb">mongodb</a></li><li class="nav__item nav__item--more" data-open="0"><a class="nav__item--more-link" href="https://segmentfault.com/tags"><div class="tag__more"><i class="tag__more--icon"></i><i class="tag__more--icon"></i><i class="tag__more--icon"></i></div></a></li></ul><div class="tag-mgr__box hide"><input class="tag-mgr__query" type="text" placeholder="搜索关注的标签" data-tags="null"><div class="mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar" data-mcs-theme="minimal-dark" style="position: relative; overflow: visible;"><div id="mCSB_1" class="mCustomScrollBox mCS-minimal-dark mCSB_vertical mCSB_outside" style="max-height: 0px;" tabindex="0"><div id="mCSB_1_container" class="mCSB_container mCS_y_hidden mCS_no_scrollbar_y" style="position:relative; top:0; left:0;" dir="ltr"><ul class="tag-mgr__list"></ul></div></div><div id="mCSB_1_scrollbar_vertical" class="mCSB_scrollTools mCSB_1_scrollbar mCS-minimal-dark mCSB_scrollTools_vertical" style="display: none;"><div class="mCSB_draggerContainer"><div id="mCSB_1_dragger_vertical" class="mCSB_dragger" style="position: absolute; min-height: 50px; top: 0px;" oncontextmenu="return false;"><div class="mCSB_dragger_bar" style="line-height: 50px;"></div></div><div class="mCSB_draggerRail"></div></div></div></div><a href="https://segmentfault.com/tags" class="btn btn-primary btn-sm tag-mgr__btn">标签管理</a></div></nav></div></div>
    <div class="wrap">
    <div class="post-topheader custom-">
        <div class="container">
            <div class="row">
                <div class="col-md-9 col-sm-8 col-xs-12">
                    <span class="post-topheader__title--icon-symbol">文</span>

                    <div class="post-topheader__info" data-username="ruoyiqing" data-userslug="ruoyiqing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/880/675/880675381-55e906105a04a_big64">

                        <h1 class="h3 post-topheader__info--title" id="articleTitle" data-id="1190000004322487">

                                                <a href="https://segmentfault.com/a/1190000004322487"> 你真的会使用XMLHttpRequest吗？</a>
                                            </h1>

                        <ul class="taglist--inline inline-block article__title--tag mr10">
                                                            <li class="tagPopup mb5"><a class="tag" href="https://segmentfault.com/t/xmlhttprequest/blogs" data-toggle="popover" data-img="" data-placement="top" data-original-title="xmlhttprequest" data-id="1040000000137360">xmlhttprequest</a></li>
                                                            <li class="tagPopup mb5"><a class="tag" href="https://segmentfault.com/t/http/blogs" data-toggle="popover" data-img="" data-placement="top" data-original-title="http" data-id="1040000000089706">http</a></li>
                                                            <li class="tagPopup mb5"><a class="tag" href="https://segmentfault.com/t/cors/blogs" data-toggle="popover" data-img="" data-placement="top" data-original-title="cors" data-id="1040000000408858">cors</a></li>
                                                            <li class="tagPopup mb5"><a class="tag" href="https://segmentfault.com/t/ajax/blogs" data-toggle="popover" data-img="" data-placement="top" data-original-title="ajax" data-id="1040000000090169">ajax</a></li>
                                                    </ul>

                        <div class="article__author">
                        <a href="https://segmentfault.com/u/ruoyiqing" class="mr5 "><strong>ruoyiqing</strong></a>
                        1月17日发布
                                                                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-4 hidden-xs">
                    <ul class="post-topheader__side list-unstyled">
                        <li>
                                                                                                <button type="button" class="btn btn-success btn-sm" data-id="1190000004322487" id="sideLike">推荐
                                    </button>
                                                                                        <strong id="sideLiked">27</strong> 推荐
                        </li>
                        <li>
                                                                                                <button type="button" id="sideBookmark" class="btn btn-default btn-sm" data-id="1190000004322487" data-type="article">收藏
                                    </button>
                                                                                        <strong id="sideBookmarked">195</strong> 收藏，<strong class="no-stress">9.9k</strong> 浏览
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div><!-- end .post-topheader -->

    <div class="container mt30">
        <div class="row">
            <div class="col-xs-12 col-md-9 main ">

                                                <div class="article fmt article__content" data-id="1190000004322487" data-license="cc">
                    
<blockquote><p>看到标题时，有些同学可能会想：“我已经用<code>xhr</code>成功地发过很多个<code>Ajax</code>请求了，对它的基本操作已经算挺熟练了。” 我之前的想法和你们一样，直到最近我使用<code>xhr</code>时踩了不少坑儿，我才突然发现其实自己并不够了解<code>xhr</code>，我知道的只是最最基本的使用。<br>于是我决定好好地研究一番<code>xhr</code>的真面目，可拜读了不少博客后都不甚满意，于是我决定认真阅读一遍W3C的<code>XMLHttpRequest</code>标准。看完标准后我如同醍醐灌顶一般，感觉到了从未有过的清澈。这篇文章就是参考W3C的<code>XMLHttpRequest</code>标准和结合一些实践验证总结而来的。</p></blockquote>
<h2 id="articleHeader0">
<code>Ajax</code>和<code>XMLHttpRequest</code>
</h2>
<p>我们通常将<code>Ajax</code>等同于<code>XMLHttpRequest</code>，但细究起来它们两个是属于不同维度的2个概念。</p>
<blockquote>
<p>以下是我认为对<code>Ajax</code>较为准确的解释：（摘自<a href="http://www.tutorialspoint.com/ajax/what_is_ajax.htm" target="_blank">what is Ajax</a>）<br>AJAX stands for Asynchronous JavaScript and XML. AJAX is a new technique for creating better, faster, and more interactive web applications with the help of XML, HTML, CSS, and Java Script.</p>
<p>AJAX is based on the following open standards:</p>
<ul>
<li><p>Browser-based presentation using HTML and Cascading Style Sheets (CSS).</p></li>
<li><p>Data is stored in XML format and fetched from the server.</p></li>
<li><p>Behind-the-scenes data fetches using XMLHttpRequest objects in the browser.</p></li>
<li><p>JavaScript to make everything happen.</p></li>
</ul>
</blockquote>
<p>从上面的解释中可以知道：<code>ajax</code>是一种技术方案，但并不是一种<strong>新技术</strong>。它依赖的是现有的<code>CSS</code>/<code>HTML</code>/<code>Javascript</code>，而其中最核心的依赖是浏览器提供的<code>XMLHttpRequest</code>对象，是这个对象使得浏览器可以发出<code>HTTP</code>请求与接收<code>HTTP</code>响应。</p>
<p>所以我用一句话来总结两者的关系：我们使用<code>XMLHttpRequest</code>对象来发送一个<code>Ajax</code>请求。</p>
<h2 id="articleHeader1">
<code>XMLHttpRequest</code>的发展历程</h2>
<p><code>XMLHttpRequest</code>一开始只是微软浏览器提供的一个接口，后来各大浏览器纷纷效仿也提供了这个接口，再后来W3C对它进行了标准化，提出了<a href="https://www.w3.org/TR/XMLHttpRequest/" target="_blank"><code>XMLHttpRequest</code>标准</a>。<code>XMLHttpRequest</code>标准又分为<code>Level 1</code>和<code>Level 2</code>。<br><code>XMLHttpRequest Level 1</code>主要存在以下缺点：</p>
<ul>
<li><p>受同源策略的限制，不能发送跨域请求；</p></li>
<li><p>不能发送二进制文件（如图片、视频、音频等），只能发送纯文本数据；</p></li>
<li><p>在发送和获取数据的过程中，无法实时获取进度信息，只能判断是否完成；</p></li>
</ul>
<p>那么<code>Level 2</code>对<code>Level 1</code> 进行了改进，<code>XMLHttpRequest Level 2</code>中新增了以下功能：</p>
<ul>
<li><p>可以发送跨域请求，在服务端允许的情况下；</p></li>
<li><p>支持发送和接收二进制数据；</p></li>
<li><p>新增formData对象，支持发送表单数据；</p></li>
<li><p>发送和获取数据时，可以获取进度信息；</p></li>
<li><p>可以设置请求的超时时间；</p></li>
</ul>
<p>当然更详细的对比介绍，可以参考<a href="http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html" target="_blank">阮老师的这篇文章</a>，文章中对新增的功能都有具体代码示例。</p>
<h2 id="articleHeader2">
<code>XMLHttpRequest</code>兼容性</h2>
<p>关于<code>xhr</code>的浏览器兼容性，大家可以直接查看“Can I use”这个网站提供的结果<a href="http://caniuse.com/#search=XMLHttpRequest" target="_blank">XMLHttpRequest兼容性</a>，下面提供一个截图。</p>
<p><img data-src="/img/bVsiDk" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/bVsiDk" style="cursor: pointer; display: inline;"></p>
<p>从图中可以看到：</p>
<ul>
<li><p>IE8/IE9、Opera Mini 完全不支持<code>xhr</code>对象</p></li>
<li><p>IE10/IE11部分支持，不支持 <code>xhr.responseType</code>为<code>json</code></p></li>
<li><p>部分浏览器不支持设置请求超时，即无法使用<code>xhr.timeout</code></p></li>
<li><p>部分浏览器不支持<code>xhr.responseType</code>为<code>blob</code></p></li>
</ul>
<h2 id="articleHeader3">细说<code>XMLHttpRequest</code>如何使用</h2>
<p>先来看一段使用<code>XMLHttpRequest</code>发送<code>Ajax</code>请求的简单示例代码。</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="function sendAjax() {
  //构造表单数据
  var formData = new FormData();
  formData.append(&#39;username&#39;, &#39;johndoe&#39;);
  formData.append(&#39;id&#39;, 123456);
  //创建xhr对象 
  var xhr = new XMLHttpRequest();
  //设置xhr请求的超时时间
  xhr.timeout = 3000;
  //设置响应返回的数据格式
  xhr.responseType = &quot;text&quot;;
  //创建一个 post 请求，采用异步
  xhr.open(&#39;POST&#39;, &#39;/server&#39;, true);
  //注册相关事件回调处理函数
  xhr.onload = function(e) { 
    if(this.status == 200||this.status == 304){
        alert(this.responseText);
    }
  };
  xhr.ontimeout = function(e) { ... };
  xhr.onerror = function(e) { ... };
  xhr.upload.onprogress = function(e) { ... };
  
  //发送数据
  xhr.send(formData);
}
" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendAjax</span><span class="hljs-params">()</span> </span>{
  <span class="hljs-comment">//构造表单数据</span>
  <span class="hljs-keyword">var</span> formData = <span class="hljs-keyword">new</span> FormData();
  formData.append(<span class="hljs-string">'username'</span>, <span class="hljs-string">'johndoe'</span>);
  formData.append(<span class="hljs-string">'id'</span>, <span class="hljs-number">123456</span>);
  <span class="hljs-comment">//创建xhr对象 </span>
  <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();
  <span class="hljs-comment">//设置xhr请求的超时时间</span>
  xhr.timeout = <span class="hljs-number">3000</span>;
  <span class="hljs-comment">//设置响应返回的数据格式</span>
  xhr.responseType = <span class="hljs-string">"text"</span>;
  <span class="hljs-comment">//创建一个 post 请求，采用异步</span>
  xhr.open(<span class="hljs-string">'POST'</span>, <span class="hljs-string">'/server'</span>, <span class="hljs-literal">true</span>);
  <span class="hljs-comment">//注册相关事件回调处理函数</span>
  xhr.onload = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(e)</span> </span>{ 
    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.status == <span class="hljs-number">200</span>||<span class="hljs-keyword">this</span>.status == <span class="hljs-number">304</span>){
        alert(<span class="hljs-keyword">this</span>.responseText);
    }
  };
  xhr.ontimeout = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(e)</span> </span>{ ... };
  xhr.onerror = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(e)</span> </span>{ ... };
  xhr.upload.onprogress = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(e)</span> </span>{ ... };
  
  <span class="hljs-comment">//发送数据</span>
  xhr.send(formData);
}
</code></pre>
<p>上面是一个使用<code>xhr</code>发送表单数据的示例，整个流程可以参考注释。</p>
<hr>
<blockquote><p>接下来我将站在使用者的角度，以问题的形式介绍<code>xhr</code>的基本使用。<br>我对每一个问题涉及到的知识点都会进行比较细致地介绍，有些知识点可能是你平时忽略关注的。</p></blockquote>
<h3 id="articleHeader4">如何设置request header</h3>
<p>在发送<code>Ajax</code>请求（实质是一个<a href="http://www.tutorialspoint.com/http/http_header_fields.htm" target="_blank">HTTP</a>请求）时，我们可能需要设置一些请求头部信息，比如<code>content-type</code>、<code>connection</code>、<code>cookie</code>、<code>accept-xxx</code>等。<code>xhr</code>提供了<code>setRequestHeader</code>来允许我们修改请求 header。</p>
<blockquote><p><code>void setRequestHeader(DOMString header, DOMString value);</code></p></blockquote>
<p><strong>注意点</strong>：</p>
<ul>
<li><p>方法的第一个参数 header 大小写不敏感，即可以写成<code>content-type</code>，也可以写成<code>Content-Type</code>，甚至写成<code>content-Type</code>;</p></li>
<li><p><code>Content-Type</code>的默认值与具体发送的数据类型有关，请参考本文【可以发送什么类型的数据】一节；</p></li>
<li><p><code>setRequestHeader</code>必须在<code>open()</code>方法之后，<code>send()</code>方法之前调用，否则会抛错；</p></li>
<li><p><code>setRequestHeader</code>可以调用多次，最终的值不会采用覆盖<code>override</code>的方式，而是采用追加<code>append</code>的方式。下面是一个示例代码：</p></li>
</ul>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var client = new XMLHttpRequest();
client.open(&#39;GET&#39;, &#39;demo.cgi&#39;);
client.setRequestHeader(&#39;X-Test&#39;, &#39;one&#39;);
client.setRequestHeader(&#39;X-Test&#39;, &#39;two&#39;);
// 最终request header中&quot;X-Test&quot;为: one, two
client.send();" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> client = <span class="hljs-keyword">new</span> XMLHttpRequest();
client.open(<span class="hljs-string">'GET'</span>, <span class="hljs-string">'demo.cgi'</span>);
client.setRequestHeader(<span class="hljs-string">'X-Test'</span>, <span class="hljs-string">'one'</span>);
client.setRequestHeader(<span class="hljs-string">'X-Test'</span>, <span class="hljs-string">'two'</span>);
<span class="hljs-comment">// 最终request header中"X-Test"为: one, two</span>
client.send();</code></pre>
<h3 id="articleHeader5">如何获取response header</h3>
<p><code>xhr</code>提供了2个用来获取响应头部的方法：<code>getAllResponseHeaders</code>和<code>getResponseHeader</code>。前者是获取 response 中的所有header 字段，后者只是获取某个指定 header 字段的值。另外，<code>getResponseHeader(header)</code>的<code>header</code>参数不区分大小写。</p>
<blockquote><p><code>DOMString getAllResponseHeaders();</code><br><code>DOMString getResponseHeader(DOMString header);</code></p></blockquote>
<p><em>这2个方法看起来简单，但却处处是坑儿。</em></p>
<p>你是否遇到过下面的坑儿?——反正我是遇到了。。。</p>
<ol>
<li><p>使用<code>getAllResponseHeaders()</code>看到的所有<code>response header</code>与实际在控制台 <code>Network</code> 中看到的 <code>response header</code> 不一样</p></li>
<li><p>使用<code>getResponseHeader()</code>获取某个 <code>header</code> 的值时，浏览器抛错<code>Refused to get unsafe header "XXX"</code></p></li>
</ol>
<p>经过一番寻找最终在 <a href="http://stackoverflow.com/questions/7462968/restrictions-of-xmlhttprequests-getresponseheader" target="_blank">Stack Overflow找到了答案</a>。</p>
<ul>
<li><p>原因1：<a href="https://www.w3.org/TR/XMLHttpRequest/" target="_blank">W3C的 xhr 标准中做了限制</a>，规定客户端无法获取 response 中的 <code>Set-Cookie</code>、<code>Set-Cookie2</code>这2个字段，无论是同域还是跨域请求；</p></li>
<li><p>原因2：<a href="https://www.w3.org/TR/cors/#access-control-allow-credentials-response-header" target="_blank">W3C 的 cors 标准对于跨域请求也做了限制</a>，规定对于跨域请求，客户端允许获取的response header字段只限于“<code>simple response header</code>”和“<code>Access-Control-Expose-Headers</code>” （两个名词的解释见下方）。</p></li>
</ul>
<blockquote><p>"<code>simple response header</code>"包括的 header 字段有：<code>Cache-Control</code>,<code>Content-Language</code>,<code>Content-Type</code>,<code>Expires</code>,<code>Last-Modified</code>,<code>Pragma</code>;<br>"<code>Access-Control-Expose-Headers</code>"：首先得注意是"<code>Access-Control-Expose-Headers</code>"进行<strong>跨域请求</strong>时响应头部中的一个字段，对于同域请求，响应头部是没有这个字段的。这个字段中列举的 header 字段就是服务器允许暴露给客户端访问的字段。</p></blockquote>
<p>所以<code>getAllResponseHeaders()</code>只能拿到<strong><em>限制以外</em></strong>（即被视为<code>safe</code>）的header字段，而不是全部字段；而调用<code>getResponseHeader(header)</code>方法时，<code>header</code>参数必须是<strong><em>限制以外</em></strong>的header字段，否则调用就会报<code>Refused to get unsafe header</code>的错误。</p>
<h3 id="articleHeader6">如何指定<code>xhr.response</code>的数据类型</h3>
<p>有些时候我们希望<code>xhr.response</code>返回的就是我们想要的数据类型。比如：响应返回的数据是纯JSON字符串，但我们期望最终通过<code>xhr.response</code>拿到的直接就是一个 js 对象，我们该怎么实现呢？<br>有2种方法可以实现，一个是<code>level 1</code>就提供的<code>overrideMimeType()</code>方法，另一个是<code>level 2</code>才提供的<code>xhr.responseType</code>属性。</p>
<h4><code>xhr.overrideMimeType()</code></h4>
<p><code>overrideMimeType</code>是<code>xhr level 1</code>就有的方法，所以浏览器兼容性良好。这个方法的作用就是用来重写<code>response</code>的<code>content-type</code>，这样做有什么意义呢？比如：server 端给客户端返回了一份<code>document</code>或者是 <code>xml</code>文档，我们希望最终通过<code>xhr.response</code>拿到的就是一个<code>DOM</code>对象，那么就可以用<code>xhr.overrideMimeType('text/xml; charset = utf-8')</code>来实现。</p>
<p>再举一个使用场景，我们都知道<code>xhr level 1</code>不支持直接传输blob二进制数据，那如果真要传输 blob 该怎么办呢？当时就是利用<code>overrideMimeType</code>方法来解决这个问题的。</p>
<p>下面是一个获取图片文件的代码示例：</p>
<div class="widget-codetool" style="display: none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var xhr = new XMLHttpRequest();
//向 server 端获取一张图片
xhr.open(&#39;GET&#39;, &#39;/path/to/image.png&#39;, true);

// 这行是关键！
//将响应数据按照纯文本格式来解析，字符集替换为用户自己定义的字符集
xhr.overrideMimeType(&#39;text/plain; charset=x-user-defined&#39;);

xhr.onreadystatechange = function(e) {
  if (this.readyState == 4 &amp;&amp; this.status == 200) {
    //通过 responseText 来获取图片文件对应的二进制字符串
    var binStr = this.responseText;
    //然后自己再想方法将逐个字节还原为二进制数据
    for (var i = 0, len = binStr.length; i &lt; len; ++i) {
      var c = binStr.charCodeAt(i);
      //String.fromCharCode(c &amp; 0xff);
      var byte = c &amp; 0xff; 
    }
  }
};

xhr.send();" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();
<span class="hljs-comment">//向 server 端获取一张图片</span>
xhr.open(<span class="hljs-string">'GET'</span>, <span class="hljs-string">'/path/to/image.png'</span>, <span class="hljs-literal">true</span>);

<span class="hljs-comment">// 这行是关键！</span>
<span class="hljs-comment">//将响应数据按照纯文本格式来解析，字符集替换为用户自己定义的字符集</span>
xhr.overrideMimeType(<span class="hljs-string">'text/plain; charset=x-user-defined'</span>);

xhr.onreadystatechange = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(e)</span> </span>{
  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.readyState == <span class="hljs-number">4</span> &amp;&amp; <span class="hljs-keyword">this</span>.status == <span class="hljs-number">200</span>) {
    <span class="hljs-comment">//通过 responseText 来获取图片文件对应的二进制字符串</span>
    <span class="hljs-keyword">var</span> binStr = <span class="hljs-keyword">this</span>.responseText;
    <span class="hljs-comment">//然后自己再想方法将逐个字节还原为二进制数据</span>
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, len = binStr.length; i &lt; len; ++i) {
      <span class="hljs-keyword">var</span> c = binStr.charCodeAt(i);
      <span class="hljs-comment">//String.fromCharCode(c &amp; 0xff);</span>
      <span class="hljs-keyword">var</span> byte = c &amp; <span class="hljs-number">0xff</span>; 
    }
  }
};

xhr.send();</code></pre>
<p>代码示例中<code>xhr</code>请求的是一张图片，通过将 <code>response</code> 的 <code>content-type</code> 改为'text/plain; charset=x-user-defined'，使得 <code>xhr</code> 以纯文本格式来解析接收到的blob 数据，最终用户通过<code>this.responseText</code>拿到的就是图片文件对应的二进制字符串，最后再将其转换为 blob 数据。</p>
<h4><code>xhr.responseType</code></h4>
<p><code>responseType</code>是<code>xhr level 2</code>新增的属性，用来指定<code>xhr.response</code>的数据类型，目前还存在些兼容性问题，可以参考本文的【<code>XMLHttpRequest</code>的兼容性】这一小节。那么<code>responseType</code>可以设置为哪些格式呢，我简单做了一个表，如下：</p>
<table>
<thead><tr>
<th>值</th>
<th>
<code>xhr.response</code> 数据类型</th>
<th>说明</th>
</tr></thead>
<tbody>
<tr>
<td><code>""</code></td>
<td>
<code>String</code>字符串</td>
<td>默认值(在不设置<code>responseType</code>时)</td>
</tr>
<tr>
<td><code>"text"</code></td>
<td>
<code>String</code>字符串</td>
</tr>
<tr>
<td><code>"document"</code></td>
<td>
<code>Document</code>对象</td>
<td>希望返回 <code>XML</code> 格式数据时使用</td>
</tr>
<tr>
<td><code>"json"</code></td>
<td>
<code>javascript</code> 对象</td>
<td>存在兼容性问题，IE10/IE11不支持</td>
</tr>
<tr>
<td><code>"blob"</code></td>
<td>
<code>Blob</code>对象</td>
</tr>
<tr>
<td><code>"arrayBuffer"</code></td>
<td>
<code>ArrayBuffer</code>对象</td>
</tr>
</tbody>
</table>
<p>下面是同样是获取一张图片的代码示例，相比<code>xhr.overrideMimeType</code>,用<code>xhr.response</code>来实现简单得多。</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="var xhr = new XMLHttpRequest();
xhr.open(&#39;GET&#39;, &#39;/path/to/image.png&#39;, true);
//可以将`xhr.responseType`设置为`&quot;blob&quot;`也可以设置为`&quot; arrayBuffer&quot;`
//xhr.responseType = &#39;arrayBuffer&#39;;
xhr.responseType = &#39;blob&#39;;

xhr.onload = function(e) {
  if (this.status == 200) {
    var blob = this.response;
    ...
  }
};

xhr.send();" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();
xhr.open(<span class="hljs-string">'GET'</span>, <span class="hljs-string">'/path/to/image.png'</span>, <span class="hljs-literal">true</span>);
<span class="hljs-comment">//可以将`xhr.responseType`设置为`"blob"`也可以设置为`" arrayBuffer"`</span>
<span class="hljs-comment">//xhr.responseType = 'arrayBuffer';</span>
xhr.responseType = <span class="hljs-string">'blob'</span>;

xhr.onload = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(e)</span> </span>{
  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.status == <span class="hljs-number">200</span>) {
    <span class="hljs-keyword">var</span> blob = <span class="hljs-keyword">this</span>.response;
    ...
  }
};

xhr.send();</code></pre>
<h4>小结</h4>
<p>虽然在<code>xhr level 2</code>中，2者是共同存在的。但其实不难发现，<code>xhr.responseType</code>就是用来取代<code>xhr.overrideMimeType()</code>的，<code>xhr.responseType</code>功能强大的多，<code>xhr.overrideMimeType()</code>能做到的<code>xhr.responseType</code>都能做到。所以我们现在完全可以摒弃使用<code>xhr.overrideMimeType()</code>了。</p>
<h3 id="articleHeader7">如何获取response数据</h3>
<p><code>xhr</code>提供了3个属性来获取请求返回的数据，分别是：<code>xhr.response</code>、<code>xhr.responseText</code>、<code>xhr.responseXML</code></p>
<ul>
<li>
<p><code>xhr.response</code></p>
<ul>
<li><p>默认值：空字符串<code>""</code></p></li>
<li><p>当请求完成时，此属性才有正确的值</p></li>
<li><p>请求未完成时，此属性的值可能是<code>""</code>或者 <code>null</code>，具体与 <code>xhr.responseType</code>有关：当<code>responseType</code>为<code>""</code>或<code>"text"</code>时，值为<code>""</code>；<code>responseType</code>为其他值时，值为 <code>null</code></p></li>
</ul>
</li>
<li>
<p><code>xhr.responseText</code></p>
<ul>
<li><p>默认值为空字符串<code>""</code></p></li>
<li><p>只有当 <code>responseType</code> 为<code>"text"</code>、<code>""</code>时，<code>xhr</code>对象上才有此属性，此时才能调用<code>xhr.responseText</code>，否则抛错</p></li>
<li><p>只有当请求成功时，才能拿到正确值。以下2种情况下值都为空字符串<code>""</code>：请求未完成、请求失败</p></li>
</ul>
</li>
<li>
<p><code>xhr.responseXML</code></p>
<ul>
<li><p>默认值为 <code>null</code></p></li>
<li><p>只有当 <code>responseType</code> 为<code>"text"</code>、<code>""</code>、<code>"document"</code>时，<code>xhr</code>对象上才有此属性，此时才能调用<code>xhr.responseXML</code>，否则抛错</p></li>
<li><p>只有当请求成功且返回数据被正确解析时，才能拿到正确值。以下3种情况下值都为<code>null</code>：请求未完成、请求失败、请求成功但返回数据无法被正确解析时</p></li>
</ul>
</li>
</ul>
<h3 id="articleHeader8">如何追踪<code>ajax</code>请求的当前状态</h3>
<p>在发一个<code>ajax</code>请求后，如果想追踪请求当前处于哪种状态，该怎么做呢？</p>
<p>用<code>xhr.readyState</code>这个属性即可追踪到。这个属性是只读属性，总共有5种可能值，分别对应<code>xhr</code>不同的不同阶段。每次<code>xhr.readyState</code>的值发生变化时，都会触发<code>xhr.onreadystatechange</code>事件，我们可以在这个事件中进行相关状态判断。</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="  xhr.onreadystatechange = function () {
    switch(xhr.readyState){
      case 1://OPENED
        //do something
            break;
      case 2://HEADERS_RECEIVED
        //do something
        break;
      case 3://LOADING
        //do something
        break;
      case 4://DONE
        //do something
        break;
    }" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript">  xhr.onreadystatechange = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{
    <span class="hljs-keyword">switch</span>(xhr.readyState){
      <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<span class="hljs-comment">//OPENED</span>
        <span class="hljs-comment">//do something</span>
            <span class="hljs-keyword">break</span>;
      <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<span class="hljs-comment">//HEADERS_RECEIVED</span>
        <span class="hljs-comment">//do something</span>
        <span class="hljs-keyword">break</span>;
      <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<span class="hljs-comment">//LOADING</span>
        <span class="hljs-comment">//do something</span>
        <span class="hljs-keyword">break</span>;
      <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<span class="hljs-comment">//DONE</span>
        <span class="hljs-comment">//do something</span>
        <span class="hljs-keyword">break</span>;
    }</code></pre>
<table>
<thead><tr>
<th>值</th>
<th>状态</th>
<th>描述</th>
</tr></thead>
<tbody>
<tr>
<td><code>0</code></td>
<td>
<code>UNSENT</code> (初始状态，未打开)</td>
<td>此时<code>xhr</code>对象被成功构造，<code>open()</code>方法还未被调用</td>
</tr>
<tr>
<td><code>1</code></td>
<td>
<code>OPENED</code>  (已打开，未发送)</td>
<td>
<code>open()</code>方法已被成功调用，<code>send()</code>方法还未被调用。注意：只有<code>xhr</code>处于<code>OPENED</code>状态，才能调用<code>xhr.setRequestHeader()</code>和<code>xhr.send()</code>,否则会报错</td>
</tr>
<tr>
<td><code>2</code></td>
<td>
<code>HEADERS_RECEIVED</code> (已获取响应头)</td>
<td>
<code>send()</code>方法已经被调用, 响应头和响应状态已经返回</td>
</tr>
<tr>
<td><code>3</code></td>
<td>
<code>LOADING</code> (正在下载响应体)</td>
<td>响应体(<code>response entity body</code>)正在下载中，此状态下通过<code>xhr.response</code>可能已经有了响应数据</td>
</tr>
<tr>
<td><code>4</code></td>
<td>
<code>DONE</code> (整个数据传输过程结束)</td>
<td>整个数据传输过程结束，不管本次请求是成功还是失败</td>
</tr>
</tbody>
</table>
<h3 id="articleHeader9">如何设置请求的超时时间</h3>
<p>如果请求过了很久还没有成功，为了不会白白占用的网络资源，我们一般会主动终止请求。<code>XMLHttpRequest</code>提供了<code>timeout</code>属性来允许设置请求的超时时间。</p>
<blockquote><p><code>xhr.timeout</code></p></blockquote>
<p>单位：milliseconds 毫秒<br>默认值：<code>0</code>，即不设置超时</p>
<p>很多同学都知道：从<strong><em>请求开始</em></strong> 算起，若超过 <code>timeout</code> 时间请求还没有结束（包括成功/失败），则会触发ontimeout事件，主动结束该请求。</p>
<p>【那么到底什么时候才算是<strong><em>请求开始</em></strong> ？】<br>——<code>xhr.onloadstart</code>事件触发的时候，也就是你调用<code>xhr.send()</code>方法的时候。<br>因为<code>xhr.open()</code>只是创建了一个连接，但并没有真正开始数据的传输，而<code>xhr.send()</code>才是真正开始了数据的传输过程。只有调用了<code>xhr.send()</code>，才会触发<code>xhr.onloadstart</code> 。</p>
<p>【那么什么时候才算是<strong><em>请求结束</em></strong> ？】<br>—— <code>xhr.loadend</code>事件触发的时候。</p>
<p>另外，还有2个需要注意的坑儿：</p>
<ol>
<li><p>可以在 <code>send()</code>之后再设置此<code>xhr.timeout</code>，但计时起始点仍为调用<code>xhr.send()</code>方法的时刻。</p></li>
<li><p>当<code>xhr</code>为一个<code>sync</code>同步请求时，<code>xhr.timeout</code>必须置为<code>0</code>，否则会抛错。原因可以参考本文的【如何发一个同步请求】一节。</p></li>
</ol>
<h3 id="articleHeader10">如何发一个同步请求</h3>
<p><code>xhr</code>默认发的是异步请求，但也支持发同步请求（当然实际开发中应该尽量避免使用）。到底是异步还是同步请求，由<code>xhr.open（）</code>传入的<code>async</code>参数决定。</p>
<blockquote><p><code>open(method, url [, async = true [, username = null [, password = null]]])</code></p></blockquote>
<ul>
<li><p><code>method</code>: 请求的方式，如<code>GET/POST/HEADER</code>等，这个参数不区分大小写</p></li>
<li><p><code>url</code>: 请求的地址，可以是相对地址如<code>example.php</code>，这个<strong>相对</strong>是相对于当前网页的<code>url</code>路径；也可以是绝对地址如<code>http://www.example.com/example.php</code></p></li>
<li><p><code>async</code>: 默认值为<code>true</code>，即为异步请求，若<code>async=false</code>，则为同步请求</p></li>
</ul>
<p>在我认真研读W3C 的 xhr 标准前，我总以为同步请求和异步请求只是阻塞和非阻塞的区别，其他什么事件触发、参数设置应该是一样的，事实证明我错了。</p>
<p>W3C 的 xhr标准中关于<code>open()</code>方法有这样一段说明：</p>
<blockquote><p>Throws an "InvalidAccessError" exception if async is false, the JavaScript global environment is a document environment, and either the timeout attribute is not zero, the withCredentials attribute is true, or the responseType attribute is not the empty string.</p></blockquote>
<p>从上面一段说明可以知道，当<code>xhr</code>为同步请求时，有如下限制：</p>
<ul>
<li><p><code>xhr.timeout</code>必须为<code>0</code></p></li>
<li><p><code>xhr.withCredentials</code>必须为 <code>false</code></p></li>
<li><p><code>xhr.responseType</code>必须为<code>""</code>（注意置为<code>"text"</code>也不允许）</p></li>
</ul>
<p>若上面任何一个限制不满足，都会抛错，而对于异步请求，则没有这些参数设置上的限制。</p>
<p>之前说过页面中应该尽量避免使用<code>sync</code>同步请求，为什么呢？<br>因为我们无法设置请求超时时间（<code>xhr.timeout</code>为<code>0</code>，即不限时）。在不限制超时的情况下，有可能同步请求一直处于<code>pending</code>状态，服务端迟迟不返回响应，这样整个页面就会一直阻塞，无法响应用户的其他交互。</p>
<p>另外，标准中并没有提及同步请求时事件触发的限制，但实际开发中我确实遇到过部分应该触发的事件并没有触发的现象。如在 chrome中，当<code>xhr</code>为同步请求时，在<code>xhr.readyState</code>由<code>2</code>变成<code>3</code>时，并不会触发 <code>onreadystatechange</code>事件，<code>xhr.upload.onprogress</code>和 <code>xhr.onprogress</code>事件也不会触发。</p>
<h3 id="articleHeader11">如何获取上传、下载的进度</h3>
<p>在上传或者下载比较大的文件时，实时显示当前的上传、下载进度是很普遍的产品需求。<br>我们可以通过<code>onprogress</code>事件来实时显示进度，默认情况下这个事件每50ms触发一次。需要注意的是，上传过程和下载过程触发的是不同对象的<code>onprogress</code>事件：</p>
<ul>
<li><p>上传触发的是<code>xhr.upload</code>对象的 <code>onprogress</code>事件</p></li>
<li><p>下载触发的是<code>xhr</code>对象的<code>onprogress</code>事件</p></li>
</ul>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="xhr.onprogress = updateProgress;
xhr.upload.onprogress = updateProgress;
function updateProgress(event) {
    if (event.lengthComputable) {
      var completedPercent = event.loaded / event.total;
    }
 }" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript">xhr.onprogress = updateProgress;
xhr.upload.onprogress = updateProgress;
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateProgress</span><span class="hljs-params">(event)</span> </span>{
    <span class="hljs-keyword">if</span> (event.lengthComputable) {
      <span class="hljs-keyword">var</span> completedPercent = event.loaded / event.total;
    }
 }</code></pre>
<h3 id="articleHeader12">可以发送什么类型的数据</h3>
<blockquote><p>void send(data);</p></blockquote>
<p><code>xhr.send(data)</code>的参数data可以是以下几种类型：</p>
<ul>
<li><p><code>ArrayBuffer</code></p></li>
<li><p><code>Blob</code></p></li>
<li><p><code>Document</code></p></li>
<li><p><code>DOMString</code></p></li>
<li><p><code>FormData</code></p></li>
<li><p><code>null</code></p></li>
</ul>
<p>如果是 GET/HEAD请求，<code>send()</code>方法一般不传参或传 <code>null</code>。不过即使你真传入了参数，参数也最终被忽略，<code>xhr.send(data)</code>中的data会被置为 <code>null</code>.</p>
<p><code>xhr.send(data)</code>中data参数的数据类型会影响请求头部<code>content-type</code>的默认值：</p>
<ul>
<li><p>如果<code>data</code>是 <code>Document</code> 类型，同时也是<code>HTML Document</code>类型，则<code>content-type</code>默认值为<code>text/html;charset=UTF-8</code>;否则为<code>application/xml;charset=UTF-8</code>；</p></li>
<li><p>如果<code>data</code>是 <code>DOMString</code> 类型，<code>content-type</code>默认值为<code>text/plain;charset=UTF-8</code>；</p></li>
<li><p>如果<code>data</code>是 <code>FormData</code> 类型，<code>content-type</code>默认值为<code>multipart/form-data; boundary=[xxx]</code></p></li>
<li><p>如果<code>data</code>是其他类型，则不会设置<code>content-type</code>的默认值</p></li>
</ul>
<p>当然这些只是<code>content-type</code>的默认值，但如果用<code>xhr.setRequestHeader()</code>手动设置了中<code>content-type</code>的值，以上默认值就会被覆盖。</p>
<p>另外需要注意的是，若在断网状态下调用<code>xhr.send(data)</code>方法，则会抛错：<code>Uncaught NetworkError: Failed to execute 'send' on 'XMLHttpRequest'</code>。一旦程序抛出错误，如果不 catch 就无法继续执行后面的代码，所以调用 <code>xhr.send(data)</code>方法时，应该用 <code>try-catch</code>捕捉错误。</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="try{
    xhr.send(data)
  }catch(e) {
    //doSomething...
  };" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript"><span class="hljs-keyword">try</span>{
    xhr.send(data)
  }<span class="hljs-keyword">catch</span>(e) {
    <span class="hljs-comment">//doSomething...</span>
  };</code></pre>
<h3 id="articleHeader13">
<code>xhr.withCredentials</code>与 <code>CORS</code> 什么关系</h3>
<blockquote><p>我们都知道，在发同域请求时，浏览器会将<code>cookie</code>自动加在<code>request header</code>中。但大家是否遇到过这样的场景：在发送跨域请求时，<code>cookie</code>并没有自动加在<code>request header</code>中。</p></blockquote>
<p>造成这个问题的原因是：在<code>CORS</code>标准中做了规定，默认情况下，浏览器在发送跨域请求时，不能发送任何认证信息（<code>credentials</code>）如"<code>cookies</code>"和"<code>HTTP authentication schemes</code>"。除非<code>xhr.withCredentials</code>为<code>true</code>（<code>xhr</code>对象有一个属性叫<code>withCredentials</code>，默认值为<code>false</code>）。</p>
<p>所以根本原因是<code>cookies</code>也是一种认证信息，在跨域请求中，<code>client</code>端必须手动设置<code>xhr.withCredentials=true</code>，且<code>server</code>端也必须允许<code>request</code>能携带认证信息（即<code>response header</code>中包含<code>Access-Control-Allow-Credentials:true</code>），这样浏览器才会自动将<code>cookie</code>加在<code>request header</code>中。</p>
<p>另外，要特别注意一点，一旦跨域<code>request</code>能够携带认证信息，<code>server</code>端一定不能将<code>Access-Control-Allow-Origin</code>设置为<code>*</code>，否则就会面临攻击危险。</p>
<h2 id="articleHeader14">
<code>xhr</code>相关事件</h2>
<h3 id="articleHeader15">事件分类</h3>
<p><code>xhr</code>相关事件有很多，有时记起来还挺容易混乱。但当我了解了具体代码实现后，就容易理清楚了。下面是<code>XMLHttpRequest</code>的部分实现代码：</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="interface XMLHttpRequestEventTarget : EventTarget {
  // event handlers
  attribute EventHandler onloadstart;
  attribute EventHandler onprogress;
  attribute EventHandler onabort;
  attribute EventHandler onerror;
  attribute EventHandler onload;
  attribute EventHandler ontimeout;
  attribute EventHandler onloadend;
};

interface XMLHttpRequestUpload : XMLHttpRequestEventTarget {

};

interface XMLHttpRequest : XMLHttpRequestEventTarget {
  // event handler
  attribute EventHandler onreadystatechange;
  readonly attribute XMLHttpRequestUpload upload;
};" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="java"><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">XMLHttpRequestEventTarget</span> : <span class="hljs-title">EventTarget</span> </span>{
  <span class="hljs-comment">// event handlers</span>
  attribute EventHandler onloadstart;
  attribute EventHandler onprogress;
  attribute EventHandler onabort;
  attribute EventHandler onerror;
  attribute EventHandler onload;
  attribute EventHandler ontimeout;
  attribute EventHandler onloadend;
};

<span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">XMLHttpRequestUpload</span> : <span class="hljs-title">XMLHttpRequestEventTarget</span> </span>{

};

<span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">XMLHttpRequest</span> : <span class="hljs-title">XMLHttpRequestEventTarget</span> </span>{
  <span class="hljs-comment">// event handler</span>
  attribute EventHandler onreadystatechange;
  readonly attribute XMLHttpRequestUpload upload;
};</code></pre>
<p>从代码中我们可以看出：</p>
<ol>
<li>
<p><code>XMLHttpRequestEventTarget</code>接口定义了7个事件：</p>
<ul>
<li><p><code>onloadstart</code></p></li>
<li><p><code>onprogress</code></p></li>
<li><p><code>onabort</code></p></li>
<li><p><code>ontimeout</code></p></li>
<li><p><code>onerror</code></p></li>
<li><p><code>onload</code></p></li>
<li><p><code>onloadend</code></p></li>
</ul>
</li>
<li><p>每一个<code>XMLHttpRequest</code>里面都有一个<code>upload</code>属性，而<code>upload</code>是一个<code>XMLHttpRequestUpload</code>对象</p></li>
<li><p><code>XMLHttpRequest</code>和<code>XMLHttpRequestUpload</code>都继承了同一个<code>XMLHttpRequestEventTarget</code>接口，所以<code>xhr</code>和<code>xhr.upload</code>都有第一条列举的7个事件</p></li>
<li><p><code>onreadystatechange</code>是<code>XMLHttpRequest</code>独有的事件</p></li>
</ol>
<p>所以这么一看就很清晰了：<br><code>xhr</code>一共有8个相关事件：7个<code>XMLHttpRequestEventTarget</code>事件+1个独有的<code>onreadystatechange</code>事件；而<code>xhr.upload</code>只有7个<code>XMLHttpRequestEventTarget</code>事件。</p>
<h3 id="articleHeader16">事件触发条件</h3>
<p>下面是我自己整理的一张<code>xhr</code>相关事件触发条件表，其中最需要注意的是 <code>onerror</code> 事件的触发条件。</p>
<table>
<thead><tr>
<th>事件</th>
<th>触发条件</th>
</tr></thead>
<tbody>
<tr>
<td><code>onreadystatechange</code></td>
<td>每当<code>xhr.readyState</code>改变时触发；但<code>xhr.readyState</code>由非<code>0</code>值变为<code>0</code>时不触发。</td>
</tr>
<tr>
<td><code>onloadstart</code></td>
<td>调用<code>xhr.send()</code>方法后立即触发，若<code>xhr.send()</code>未被调用则不会触发此事件。</td>
</tr>
<tr>
<td><code>onprogress</code></td>
<td>
<code>xhr.upload.onprogress</code>在上传阶段(即<code>xhr.send()</code>之后，<code>xhr.readystate=2</code>之前)触发，每50ms触发一次；<code>xhr.onprogress</code>在下载阶段（即<code>xhr.readystate=3</code>时）触发，每50ms触发一次。</td>
</tr>
<tr>
<td><code>onload</code></td>
<td>当请求成功完成时触发，此时<code>xhr.readystate=4</code>
</td>
</tr>
<tr>
<td><code>onloadend</code></td>
<td>当请求结束（包括请求成功和请求失败）时触发</td>
</tr>
<tr>
<td><code>onabort</code></td>
<td>当调用<code>xhr.abort()</code>后触发</td>
</tr>
<tr>
<td><code>ontimeout</code></td>
<td>
<code>xhr.timeout</code>不等于0，由请求开始即<code>onloadstart</code>开始算起，当到达<code>xhr.timeout</code>所设置时间请求还未结束即<code>onloadend</code>，则触发此事件。</td>
</tr>
<tr>
<td><code>onerror</code></td>
<td>在请求过程中，若发生<code>Network error</code>则会触发此事件（若发生<code>Network error</code>时，上传还没有结束，则会先触发<code>xhr.upload.onerror</code>，再触发<code>xhr.onerror</code>；若发生<code>Network error</code>时，上传已经结束，则只会触发<code>xhr.onerror</code>）。<strong>注意</strong>，只有发生了网络层级别的异常才会触发此事件，对于应用层级别的异常，如响应返回的<code>xhr.statusCode</code>是<code>4xx</code>时，并不属于<code>Network error</code>，所以不会触发<code>onerror</code>事件，而是会触发<code>onload</code>事件。</td>
</tr>
</tbody>
</table>
<h3 id="articleHeader17">事件触发顺序</h3>
<p>当请求一切正常时，相关的事件触发顺序如下：</p>
<ol>
<li><p>触发<code>xhr.onreadystatechange</code>(之后每次<code>readyState</code>变化时，都会触发一次)</p></li>
<li><p>触发<code>xhr.onloadstart</code><br>//上传阶段开始：</p></li>
<li><p>触发<code>xhr.upload.onloadstart</code></p></li>
<li><p>触发<code>xhr.upload.onprogress</code></p></li>
<li><p>触发<code>xhr.upload.onload</code></p></li>
<li><p>触发<code>xhr.upload.onloadend</code><br>//上传结束，下载阶段开始：</p></li>
<li><p>触发<code>xhr.onprogress</code></p></li>
<li><p>触发<code>xhr.onload</code></p></li>
<li><p>触发<code>xhr.onloadend</code></p></li>
</ol>
<h4>发生<code>abort</code>/<code>timeout</code>/<code>error</code>异常的处理</h4>
<p>在请求的过程中，有可能发生 <code>abort</code>/<code>timeout</code>/<code>error</code>这3种异常。那么一旦发生这些异常，<code>xhr</code>后续会进行哪些处理呢？后续处理如下：</p>
<ol>
<li><p>一旦发生<code>abort</code>或<code>timeout</code>或<code>error</code>异常，先立即中止当前请求</p></li>
<li><p>将 <code>readystate</code> 置为<code>4</code>，并触发 <code>xhr.onreadystatechange</code>事件</p></li>
<li>
<p>如果上传阶段还没有结束，则依次触发以下事件：</p>
<ul>
<li><p><code>xhr.upload.onprogress</code></p></li>
<li><p><code>xhr.upload.[onabort或ontimeout或onerror]</code></p></li>
<li><p><code>xhr.upload.onloadend</code></p></li>
</ul>
</li>
<li><p>触发 <code>xhr.onprogress</code>事件</p></li>
<li><p>触发 <code>xhr.[onabort或ontimeout或onerror]</code>事件</p></li>
<li><p>触发<code>xhr.onloadend</code> 事件</p></li>
</ol>
<h4>在哪个<code>xhr</code>事件中注册成功回调？</h4>
<p>从上面介绍的事件中，可以知道若<code>xhr</code>请求成功，就会触发<code>xhr.onreadystatechange</code>和<code>xhr.onload</code>两个事件。 那么我们到底要将成功回调注册在哪个事件中呢？我倾向于 <code>xhr.onload</code>事件，因为<code>xhr.onreadystatechange</code>是每次<code>xhr.readyState</code>变化时都会触发，而不是<code>xhr.readyState=4</code>时才触发。</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="xhr.onload = function () {
    //如果请求成功
    if(xhr.status == 200){
      //do successCallback
    }
  }" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript">xhr.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{
    <span class="hljs-comment">//如果请求成功</span>
    <span class="hljs-keyword">if</span>(xhr.status == <span class="hljs-number">200</span>){
      <span class="hljs-comment">//do successCallback</span>
    }
  }</code></pre>
<p>上面的示例代码是很常见的写法：先判断<code>http</code>状态码是否是<code>200</code>，如果是，则认为请求是成功的，接着执行成功回调。这样的判断是有坑儿的，比如当返回的<code>http</code>状态码不是<code>200</code>，而是<code>201</code>时，请求虽然也是成功的，但并没有执行成功回调逻辑。所以更靠谱的判断方法应该是：当<code>http</code>状态码为<code>2xx</code>或<code>304</code>时才认为成功。</p>
<div class="widget-codetool" style="display:none;">
      <div class="widget-codetool--inner">
      <span class="selectCode code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="全选"></span>
      <span type="button" class="copyCode code-tool" data-toggle="tooltip" data-placement="top" data-clipboard-text="  xhr.onload = function () {
    //如果请求成功
    if((xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) || xhr.status == 304){
      //do successCallback
    }
  }" title="" data-original-title="复制"></span>
      <span type="button" class="saveToNote code-tool" data-toggle="tooltip" data-placement="top" title="" data-original-title="放进笔记"></span>
      </div>
      </div><pre><code class="javascript">  xhr.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{
    <span class="hljs-comment">//如果请求成功</span>
    <span class="hljs-keyword">if</span>((xhr.status &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.status &lt; <span class="hljs-number">300</span>) || xhr.status == <span class="hljs-number">304</span>){
      <span class="hljs-comment">//do successCallback</span>
    }
  }</code></pre>
<h2 id="articleHeader18">结语</h2>
<p>终于写完了......<br>看完那一篇长长的W3C的xhr 标准，我眼睛都花了......<br>希望这篇总结能帮助刚开始接触<code>XMLHttpRequest</code>的你。</p>
<p>最后给点扩展学习资料，如果你：</p>
<ul>
<li><p>想真正搞懂<code>XMLHttpRequest</code>，最靠谱的方法还是看 <a href="https://www.w3.org/TR/XMLHttpRequest/" target="_blank">W3C的xhr 标准</a>;</p></li>
<li><p>想结合代码学习如何用<code>XMLHttpRequest</code>发各种类型的数据，可以参考<a href="http://www.html5rocks.com/zh/tutorials/file/xhr2/" target="_blank">html5rocks上的这篇文章</a></p></li>
<li><p>想粗略的了解<code>XMLHttpRequest</code>的基本使用，可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest" target="_blank">MDN的XMLHttpRequest介绍</a>；</p></li>
<li><p>想了解<code>XMLHttpRequest</code> 的发展历程，可以参考<a href="http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html" target="_blank">阮老师的文章</a>；</p></li>
<li><p>想了解<code>Ajax</code>的基本介绍，可以参考<a href="http://www.tutorialspoint.com/ajax/index.htm" target="_blank">AJAX Tutorial</a>;</p></li>
<li><p>想了解跨域请求，则可以参考<a href="https://www.w3.org/TR/cors/" target="_blank">W3C的 cors 标准</a>;</p></li>
<li><p>想了解<code>http</code>协议，则可以参考<a href="http://www.tutorialspoint.com/http/http_header_fields.htm" target="_blank">HTTP Tutorial</a>;</p></li>
</ul>

                </div>
                                                
                <div class="clearfix mt10">

                    <ul class="article-operation list-inline pull-left">
                        <li><a href="https://segmentfault.com/a/1190000004322487" class="text-muted">1月17日发布</a></li>
                                                                                                                            <li class="dropdown js__content-ops" data-module="article" data-id="1190000004322487" data-typetext="文章">
                                <a href="javascript:void(0);" class="dropdown-toggle text-muted" data-toggle="dropdown">更多<b class="caret"></b></a>
                                <ul class="dropdown-menu dropdown-menu-left">
                                    <li><a href="https://segmentfault.com/a/1190000004322487#911" data-toggle="modal" data-target="#911" data-action="report">举报</a></li>
                                                                                                                                                                                                    
                                                                    </ul>
                            </li>
                                            </ul>
                </div>

                <div class="text-center mt10">
                    
                        <button type="button" id="mainLike" data-id="1190000004322487" class="btn btn-success btn-lg mr10">
                            27 推荐
                        </button>
                    
                                            <button type="button" id="mainBookmark" data-type="article" data-id="1190000004322487" class="btn btn-default btn-lg ">
                            收藏
                        </button>
                                    </div>

                                    <div class="recommend-post pt30 mt40 mb30 border-top">
                        <div class="row">
                            <div class="col-md-8">
                                                                <h4 class="mt0">你可能感兴趣的文章</h4>
                                <ul class="widget-links list-unstyled">
                                                                            <li class="widget-links__item">
                                            <a href="https://segmentfault.com/a/1190000004871100" title="Ajax与Fetch">Ajax与Fetch</a>
                                            <small class="text-muted">
                                                3 收藏，382
                                                浏览
                                            </small>
                                        </li>
                                                                            <li class="widget-links__item">
                                            <a href="https://segmentfault.com/a/1190000000702550" title="新手学跨域之CORS">新手学跨域之CORS</a>
                                            <small class="text-muted">
                                                4 收藏，1.8k
                                                浏览
                                            </small>
                                        </li>
                                                                            <li class="widget-links__item">
                                            <a href="https://segmentfault.com/a/1190000004489946" title="JavaScript Ajax与Comet——“跨源资源共享”的注意要点">JavaScript Ajax与Comet——“跨源资源共享”的注意要点</a>
                                            <small class="text-muted">
                                                17 收藏，680
                                                浏览
                                            </small>
                                        </li>
                                                                    </ul>
                                                            </div>
                            <div class="col-md-4">
                                                                    <div class="article-license">
                                                                                                                        <img class="mb5" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/creativecommons-cc.png" height="24"><br>
                                                                                <div class="license-item text-muted">
                                            本文采用 <a href="http://creativecommons.org/licenses/by/3.0/cn" target="_blank" class="alert-link">署名-相同方式共享 3.0 中国大陆许可协议</a>，分享、演绎需署名且使用相同方式共享。
                                        </div>

                                    </div>
                                                            </div>
                        </div>

                    </div>
                                <!-- <ul class="list-unstyled text-muted mt30">
                                        <li>上一篇：<a href="/a/1190000004227911">如何从一个 URL 字符串中提取出origin (scheme+domain+port) 信息？</a></li>
                                                            <li class="mt5">下一篇：<a href="/a/1190000004556040">聊一聊 cookie</a></li>
                                    </ul> -->

                <h2 class="h4 post-comment-title">讨论区</h2>
                <div class="widget-comments" id="comment-1190000004322487" data-id="1190000004322487"><div class="widget-comments__item hover-show " id="1050000004323660"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004323660" type="button" data-do="like" data-type="comment"></button><span class="count">+3</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>很好 赞</p> </div><textarea name="text" rows="1" id="commentText-1050000004323660" class="editTextarea mono form-control mb10 hidden">很好 赞</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004323660" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/manxisuo" class="commentUser" data-userid="1030000000575977" data-username="manxisuo" data-userslug="manxisuo" data-useravatar="https://sfault-avatar.b0.upaiyun.com/387/762/3877620671-56e68b93374e5_medium40"><strong>manxisuo</strong></a> · <span class="createdDate">1月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000000575977" data-id="1050000004323660" data-username="manxisuo"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004323660" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004324273"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004324273" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/manxisuo">manxisuo</a>：</span>        <div class="content fmt"><p>谢谢你的肯定~~看来花了这么多天写这篇博客没有白费！</p> </div><textarea name="text" rows="1" id="commentText-1050000004324273" class="editTextarea mono form-control mb10 hidden">谢谢你的肯定~~看来花了这么多天写这篇博客没有白费！</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004324273" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/ruoyiqing" class="commentUser" data-userid="1030000003705113" data-username="ruoyiqing" data-userslug="ruoyiqing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/880/675/880675381-55e906105a04a_medium40"><strong>ruoyiqing</strong></a> · <span class="createdDate">1月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003705113" data-id="1050000004324273" data-username="ruoyiqing"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004324273" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004324363"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004324363" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>之前一直傻傻分不清啥是Ajax,看完这篇文章,清楚多了;</p> </div><textarea name="text" rows="1" id="commentText-1050000004324363" class="editTextarea mono form-control mb10 hidden">之前一直傻傻分不清啥是Ajax,看完这篇文章,清楚多了;</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004324363" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/taylorwong" class="commentUser" data-userid="1030000004298246" data-username="taylorwong" data-userslug="taylorwong" data-useravatar="https://sfault-avatar.b0.upaiyun.com/234/691/2346915038-5695baf4c4724_medium40"><strong>taylorwong</strong></a> · <span class="createdDate">1月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000004298246" data-id="1050000004324363" data-username="taylorwong"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004324363" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004324508"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004324508" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/ruoyiqing">ruoyiqing</a>：</span>        <div class="content fmt"><p>客气了，认真并且让人真正学到东西的文章都值得称赞。</p> </div><textarea name="text" rows="1" id="commentText-1050000004324508" class="editTextarea mono form-control mb10 hidden">客气了，认真并且让人真正学到东西的文章都值得称赞。</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004324508" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/manxisuo" class="commentUser" data-userid="1030000000575977" data-username="manxisuo" data-userslug="manxisuo" data-useravatar="https://sfault-avatar.b0.upaiyun.com/387/762/3877620671-56e68b93374e5_medium40"><strong>manxisuo</strong></a> · <span class="createdDate">1月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000000575977" data-id="1050000004324508" data-username="manxisuo"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004324508" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004325594"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004325594" type="button" data-do="like" data-type="comment"></button><span class="count">+1</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>精辟好文章，推荐推荐！！</p> </div><textarea name="text" rows="1" id="commentText-1050000004325594" class="editTextarea mono form-control mb10 hidden">精辟好文章，推荐推荐！！</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004325594" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/hawkeas" class="commentUser" data-userid="1030000003723971" data-username="Hawkeas" data-userslug="hawkeas" data-useravatar="https://sfault-avatar.b0.upaiyun.com/104/627/1046276266-55ef1618d5dc8_medium40"><strong>Hawkeas</strong></a> · <span class="createdDate">1月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003723971" data-id="1050000004325594" data-username="Hawkeas"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004325594" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004325635"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004325635" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/hawkeas">Hawkeas</a>：</span>        <div class="content fmt"><p>哈哈哈，谢谢！不过想推荐得点击“推荐”按钮哦~~</p> </div><textarea name="text" rows="1" id="commentText-1050000004325635" class="editTextarea mono form-control mb10 hidden">哈哈哈，谢谢！不过想推荐得点击“推荐”按钮哦~~</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004325635" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/ruoyiqing" class="commentUser" data-userid="1030000003705113" data-username="ruoyiqing" data-userslug="ruoyiqing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/880/675/880675381-55e906105a04a_medium40"><strong>ruoyiqing</strong></a> · <span class="createdDate">1月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003705113" data-id="1050000004325635" data-username="ruoyiqing"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004325635" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004326144"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004326144" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>nice  segmentfault因为你而闪亮</p> </div><textarea name="text" rows="1" id="commentText-1050000004326144" class="editTextarea mono form-control mb10 hidden">nice  segmentfault因为你而闪亮</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004326144" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/dazhi" class="commentUser" data-userid="1030000000186440" data-username="大大大大志" data-userslug="dazhi" data-useravatar="https://sfault-avatar.b0.upaiyun.com/118/934/1189345167-1030000000186440_medium40"><strong>大大大大志</strong></a> · <span class="createdDate">1月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000000186440" data-id="1050000004326144" data-username="大大大大志"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004326144" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004328454"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004328454" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>终于看完了，感谢！！最近在学习ajax</p> </div><textarea name="text" rows="1" id="commentText-1050000004328454" class="editTextarea mono form-control mb10 hidden">终于看完了，感谢！！最近在学习ajax</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004328454" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/venoral" class="commentUser" data-userid="1030000004138304" data-username="终于学成了煞笔" data-userslug="venoral" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>终于学成了煞笔</strong></a> · <span class="createdDate">1月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000004138304" data-id="1050000004328454" data-username="终于学成了煞笔"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004328454" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004335496"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004335496" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>好文  以后可以多看几遍</p> </div><textarea name="text" rows="1" id="commentText-1050000004335496" class="editTextarea mono form-control mb10 hidden">好文  以后可以多看几遍</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004335496" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/dwqs" class="commentUser" data-userid="1030000000691249" data-username="不写代码的码农" data-userslug="dwqs" data-useravatar="https://sfault-avatar.b0.upaiyun.com/123/634/1236348520-5577e83608a48_medium40"><strong>不写代码的码农</strong></a> · <span class="createdDate">1月20日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000000691249" data-id="1050000004335496" data-username="不写代码的码农"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004335496" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004336466"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004336466" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>真赞！！解了很多疑惑！！</p> </div><textarea name="text" rows="1" id="commentText-1050000004336466" class="editTextarea mono form-control mb10 hidden">真赞！！解了很多疑惑！！</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004336466" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/kongkongyi_2333" class="commentUser" data-userid="1030000003855421" data-username="空空伊" data-userslug="kongkongyi_2333" data-useravatar="https://sfault-avatar.b0.upaiyun.com/381/897/3818972341-561dd20c90a10_medium40"><strong>空空伊</strong></a> · <span class="createdDate">1月20日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003855421" data-id="1050000004336466" data-username="空空伊"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004336466" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004337022"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004337022" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>好文章，写的很详细，收藏了</p> </div><textarea name="text" rows="1" id="commentText-1050000004337022" class="editTextarea mono form-control mb10 hidden">好文章，写的很详细，收藏了</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004337022" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/fengzhu" class="commentUser" data-userid="1030000002660153" data-username="枫竹" data-userslug="fengzhu" data-useravatar="https://sfault-avatar.b0.upaiyun.com/758/339/758339487-56371b16cd24a_medium40"><strong>枫竹</strong></a> · <span class="createdDate">1月20日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000002660153" data-id="1050000004337022" data-username="枫竹"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004337022" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004337923"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004337923" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/venoral">终于学成了煞笔</a>：</span>        <div class="content fmt"><p>学习 ajax 推荐先了解 HTTP 的基本知识（比如每个 header 字段，状态码），还有跨域请求有哪些限制。加油！</p> </div><textarea name="text" rows="1" id="commentText-1050000004337923" class="editTextarea mono form-control mb10 hidden">学习 ajax 推荐先了解 HTTP 的基本知识（比如每个 header 字段，状态码），还有跨域请求有哪些限制。加油！</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004337923" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/ruoyiqing" class="commentUser" data-userid="1030000003705113" data-username="ruoyiqing" data-userslug="ruoyiqing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/880/675/880675381-55e906105a04a_medium40"><strong>ruoyiqing</strong></a> · <span class="createdDate">1月20日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003705113" data-id="1050000004337923" data-username="ruoyiqing"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004337923" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004337948"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004337948" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/kongkongyi_2333">空空伊</a>：</span>        <div class="content fmt"><p>我之前只是会基本使用 xhr，平时用的 API 很少，所以当时疑惑很少。但用的 API 多了，疑惑就多了。了解基本使用后再学习一遍标准，会收获很大。共勉！</p> </div><textarea name="text" rows="1" id="commentText-1050000004337948" class="editTextarea mono form-control mb10 hidden">我之前只是会基本使用 xhr，平时用的 API 很少，所以当时疑惑很少。但用的 API 多了，疑惑就多了。了解基本使用后再学习一遍标准，会收获很大。共勉！ </textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004337948" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/ruoyiqing" class="commentUser" data-userid="1030000003705113" data-username="ruoyiqing" data-userslug="ruoyiqing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/880/675/880675381-55e906105a04a_medium40"><strong>ruoyiqing</strong></a> · <span class="createdDate">1月20日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003705113" data-id="1050000004337948" data-username="ruoyiqing"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004337948" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004338109"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004338109" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/ruoyiqing">ruoyiqing</a>：</span>        <div class="content fmt"><p>嗯嗯学习了，看《图解http》了解了一下😂最近在看《head first ajax》</p> </div><textarea name="text" rows="1" id="commentText-1050000004338109" class="editTextarea mono form-control mb10 hidden">嗯嗯学习了，看《图解http》了解了一下😂最近在看《head first ajax》</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004338109" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/venoral" class="commentUser" data-userid="1030000004138304" data-username="终于学成了煞笔" data-userslug="venoral" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>终于学成了煞笔</strong></a> · <span class="createdDate">1月20日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000004138304" data-id="1050000004338109" data-username="终于学成了煞笔"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004338109" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004340813"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004340813" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>非常不错的文章. 总结的很棒. 上次XMLHttpRequest的内容查了了好久, 当时看这个就好了~</p> </div><textarea name="text" rows="1" id="commentText-1050000004340813" class="editTextarea mono form-control mb10 hidden">非常不错的文章. 总结的很棒. 上次XMLHttpRequest的内容查了了好久, 当时看这个就好了~</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004340813" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/shinima" class="commentUser" data-userid="1030000002707584" data-username="机智的shinima" data-userslug="shinima" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>机智的shinima</strong></a> · <span class="createdDate">1月20日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000002707584" data-id="1050000004340813" data-username="机智的shinima"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004340813" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004345964"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004345964" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/shinima">机智的shinima</a>：</span>        <div class="content fmt"><p>很高兴能帮助到您，还是看标准比较靠谱。</p> </div><textarea name="text" rows="1" id="commentText-1050000004345964" class="editTextarea mono form-control mb10 hidden">很高兴能帮助到您，还是看标准比较靠谱。</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004345964" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/ruoyiqing" class="commentUser" data-userid="1030000003705113" data-username="ruoyiqing" data-userslug="ruoyiqing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/880/675/880675381-55e906105a04a_medium40"><strong>ruoyiqing</strong></a> · <span class="createdDate">1月21日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003705113" data-id="1050000004345964" data-username="ruoyiqing"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004345964" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004432782"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004432782" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>赞赞赞，真是详细啊，已关注哈哈哈。要是能有一篇fetch的就更好了</p> </div><textarea name="text" rows="1" id="commentText-1050000004432782" class="editTextarea mono form-control mb10 hidden">赞赞赞，真是详细啊，已关注哈哈哈。要是能有一篇fetch的就更好了</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004432782" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/mrshi" class="commentUser" data-userid="1030000003918604" data-username="mrshi" data-userslug="mrshi" data-useravatar="https://sfault-avatar.b0.upaiyun.com/466/659/466659842-56304e26acb46_medium40"><strong>mrshi</strong></a> · <span class="createdDate">2月14日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003918604" data-id="1050000004432782" data-username="mrshi"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004432782" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004436561"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004436561" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/mrshi">mrshi</a>：</span>        <div class="content fmt"><p>哈哈，fetch确实是替代 xhr 更简洁的 API。学习fetch可以参考下这篇文章：<a href="http://www.w3ctech.com/topic/854" target="_blank">http://www.w3ctech.com/topic/854</a></p> </div><textarea name="text" rows="1" id="commentText-1050000004436561" class="editTextarea mono form-control mb10 hidden">哈哈，fetch确实是替代 xhr 更简洁的 API。学习fetch可以参考下这篇文章：http://www.w3ctech.com/topic/854</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004436561" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/ruoyiqing" class="commentUser" data-userid="1030000003705113" data-username="ruoyiqing" data-userslug="ruoyiqing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/880/675/880675381-55e906105a04a_medium40"><strong>ruoyiqing</strong></a> · <span class="createdDate">2月15日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003705113" data-id="1050000004436561" data-username="ruoyiqing"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004436561" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004498588"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004498588" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>文章太棒了 解了疑惑 尤其是xhr.upload</p> </div><textarea name="text" rows="1" id="commentText-1050000004498588" class="editTextarea mono form-control mb10 hidden">文章太棒了 解了疑惑 尤其是xhr.upload </textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004498588" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/newworld" class="commentUser" data-userid="1030000004498573" data-username="new丶world" data-userslug="newworld" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>new丶world</strong></a> · <span class="createdDate">2月26日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000004498573" data-id="1050000004498588" data-username="new丶world"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004498588" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004502346"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004502346" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>xhr.overrideMimeType 这个方法在 xhr level 2 的浏览器上似乎不太好用，IE10 直接都不支持这个方法了。</p> </div><textarea name="text" rows="1" id="commentText-1050000004502346" class="editTextarea mono form-control mb10 hidden">xhr.overrideMimeType 这个方法在 xhr level 2 的浏览器上似乎不太好用，IE10 直接都不支持这个方法了。</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004502346" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/andot" class="commentUser" data-userid="1030000003022993" data-username="andot" data-userslug="andot" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>andot</strong></a> · <span class="createdDate">2月27日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003022993" data-id="1050000004502346" data-username="andot"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004502346" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004542527"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004542527" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>非常感谢</p> </div><textarea name="text" rows="1" id="commentText-1050000004542527" class="editTextarea mono form-control mb10 hidden">非常感谢</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004542527" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/luckyqiao" class="commentUser" data-userid="1030000002735182" data-username="Luckyqiao" data-userslug="luckyqiao" data-useravatar="https://sfault-avatar.b0.upaiyun.com/296/484/2964849973-56628d4b4291b_medium40"><strong>Luckyqiao</strong></a> · <span class="createdDate">3月4日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000002735182" data-id="1050000004542527" data-username="Luckyqiao"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004542527" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004561721"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004561721" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>楼主牛X啊</p> </div><textarea name="text" rows="1" id="commentText-1050000004561721" class="editTextarea mono form-control mb10 hidden">楼主牛X啊</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004561721" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/jroger" class="commentUser" data-userid="1030000000613552" data-username="JRoger" data-userslug="jroger" data-useravatar="https://sfault-avatar.b0.upaiyun.com/330/651/3306516535-55d41b76b1fb6_medium40"><strong>JRoger</strong></a> · <span class="createdDate">3月8日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000000613552" data-id="1050000004561721" data-username="JRoger"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004561721" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004575614"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004575614" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>太赞了 喜欢这种高质量的文章 期待更多干货</p> </div><textarea name="text" rows="1" id="commentText-1050000004575614" class="editTextarea mono form-control mb10 hidden">太赞了 喜欢这种高质量的文章 期待更多干货</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004575614" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/zyg" class="commentUser" data-userid="1030000000707849" data-username="zygsf" data-userslug="zyg" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>zygsf</strong></a> · <span class="createdDate">3月10日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000000707849" data-id="1050000004575614" data-username="zygsf"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004575614" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004713564"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004713564" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>绝对神作，小生拜服！</p> </div><textarea name="text" rows="1" id="commentText-1050000004713564" class="editTextarea mono form-control mb10 hidden">绝对神作，小生拜服！</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004713564" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/supremehover" class="commentUser" data-userid="1030000004703215" data-username="名抟千羽" data-userslug="supremehover" data-useravatar="https://sfault-avatar.b0.upaiyun.com/354/982/3549822391-56f93369b1982_medium40"><strong>名抟千羽</strong></a> · <span class="createdDate">3月29日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000004703215" data-id="1050000004713564" data-username="名抟千羽"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004713564" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000004979288"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000004979288" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>纠正一个地方：IE9应该是支持xhr的，只是有限制吧</p> </div><textarea name="text" rows="1" id="commentText-1050000004979288" class="editTextarea mono form-control mb10 hidden">纠正一个地方：IE9应该是支持xhr的，只是有限制吧</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000004979288" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/jeremyyin" class="commentUser" data-userid="1030000004436268" data-username="jeremyyin" data-userslug="jeremyyin" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>jeremyyin</strong></a> · <span class="createdDate">4月21日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000004436268" data-id="1050000004979288" data-username="jeremyyin"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000004979288" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000005100868"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000005100868" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>楼主封装有ajax吗？兼容性好麻烦，xhr2固然牛逼，但是不敢直接用啊，还是有兼容性好些</p> </div><textarea name="text" rows="1" id="commentText-1050000005100868" class="editTextarea mono form-control mb10 hidden">楼主封装有ajax吗？兼容性好麻烦，xhr2固然牛逼，但是不敢直接用啊，还是有兼容性好些</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000005100868" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/mengdu" class="commentUser" data-userid="1030000004031052" data-username="mengdu" data-userslug="mengdu" data-useravatar="https://sfault-avatar.b0.upaiyun.com/362/264/3622648695-5662459ca89da_medium40"><strong>mengdu</strong></a> · <span class="createdDate">5月11日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000004031052" data-id="1050000005100868" data-username="mengdu"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000005100868" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000005126587"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000005126587" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>楼主我有个问题，最近才学JS看高级程序设计时，看到超时设定时上面有句话是<br>请求终止时，会调用ontimeout事件处理程序，但此时readystate可能已经改变为4了。不太理解既然readystate已经为4了，说明有响应怎么又会终止</p> </div><textarea name="text" rows="1" id="commentText-1050000005126587" class="editTextarea mono form-control mb10 hidden">楼主我有个问题，最近才学JS看高级程序设计时，看到超时设定时上面有句话是
请求终止时，会调用ontimeout事件处理程序，但此时readystate可能已经改变为4了。不太理解既然readystate已经为4了，说明有响应怎么又会终止
</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000005126587" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/liesbeth" class="commentUser" data-userid="1030000005126501" data-username="liesbeth" data-userslug="liesbeth" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>liesbeth</strong></a> · <span class="createdDate">5月15日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000005126501" data-id="1050000005126587" data-username="liesbeth"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000005126587" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000005133111"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000005133111" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>谢谢楼主，写出这么好的文章！</p> </div><textarea name="text" rows="1" id="commentText-1050000005133111" class="editTextarea mono form-control mb10 hidden">谢谢楼主，写出这么好的文章！</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000005133111" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/bwangel" class="commentUser" data-userid="1030000003021158" data-username="bwangel23" data-userslug="bwangel" data-useravatar="https://sfault-avatar.b0.upaiyun.com/162/613/1626138123-565163d992065_medium40"><strong>bwangel23</strong></a> · <span class="createdDate">5月16日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003021158" data-id="1050000005133111" data-username="bwangel23"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000005133111" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000005269536"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000005269536" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>很全面很细致，非常赞！</p> </div><textarea name="text" rows="1" id="commentText-1050000005269536" class="editTextarea mono form-control mb10 hidden">很全面很细致，非常赞！</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000005269536" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/webyoung" class="commentUser" data-userid="1030000002706861" data-username="Jeremy_young" data-userslug="webyoung" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>Jeremy_young</strong></a> · <span class="createdDate">5月23日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000002706861" data-id="1050000005269536" data-username="Jeremy_young"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000005269536" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000005748513"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000005748513" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>感谢楼主，看了您的文章收获很多，但我还有一些疑问。<br>“当readyState等于2 send()方法已经被调用, 响应头和响应状态已经返回”，<br>send()方法一调用，响应头和状态就返回，那请求头(request headers)是什么时候发出的呢？</p>
<p>这句“((xhr.status &gt;= 200 &amp;&amp; xhr.status &lt;= 200) || xhr.status == 304)”中<br>(xhr.status &gt;= 200 &amp;&amp; xhr.status &lt;= 200)  大于等于200又小鱼等于200，得到的就是200啊？</p>
 </div><textarea name="text" rows="1" id="commentText-1050000005748513" class="editTextarea mono form-control mb10 hidden">感谢楼主，看了您的文章收获很多，但我还有一些疑问。
“当readyState等于2 send()方法已经被调用, 响应头和响应状态已经返回”，
send()方法一调用，响应头和状态就返回，那请求头(request headers)是什么时候发出的呢？

这句“((xhr.status &gt;= 200 &amp;&amp; xhr.status &lt;= 200) || xhr.status == 304)”中
(xhr.status &gt;= 200 &amp;&amp; xhr.status &lt;= 200)  大于等于200又小鱼等于200，得到的就是200啊？


</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000005748513" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/hanchanmingqizhishi" class="commentUser" data-userid="1030000004856110" data-username="单身狗保护协会" data-userslug="hanchanmingqizhishi" data-useravatar="https://sfault-avatar.b0.upaiyun.com/670/841/670841567-5701bd1c046e5_medium40"><strong>单身狗保护协会</strong></a> · <span class="createdDate">6月18日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000004856110" data-id="1050000005748513" data-username="单身狗保护协会"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000005748513" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000006062800"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000006062800" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>深度好文！</p> </div><textarea name="text" rows="1" id="commentText-1050000006062800" class="editTextarea mono form-control mb10 hidden">深度好文！</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000006062800" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/hugojing" class="commentUser" data-userid="1030000000721605" data-username="hugojing" data-userslug="hugojing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/396/244/3962449565-54a0ceaa7976a_medium40"><strong>hugojing</strong></a> · <span class="createdDate">7月25日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000000721605" data-id="1050000006062800" data-username="hugojing"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000006062800" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000006239832"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000006239832" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/liesbeth">liesbeth</a>：</span>        <div class="content fmt"><p>超时就会终止【abort()】,所以也会触发readyState==4···正常的。</p> </div><textarea name="text" rows="1" id="commentText-1050000006239832" class="editTextarea mono form-control mb10 hidden">超时就会终止【abort()】,所以也会触发readyState==4···正常的。</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000006239832" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/hinong" class="commentUser" data-userid="1030000000713618" data-username="海农" data-userslug="hinong" data-useravatar="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/user-40.png"><strong>海农</strong></a> · <span class="createdDate">8月11日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000000713618" data-id="1050000006239832" data-username="海农"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000006239832" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000006257272"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000006257272" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">  <span>回复 <a href="https://segmentfault.com/u/hanchanmingqizhishi">单身狗保护协会</a>：</span>        <div class="content fmt"><p>那个等于200的判断写错了，已更正，谢谢指正~~</p> </div><textarea name="text" rows="1" id="commentText-1050000006257272" class="editTextarea mono form-control mb10 hidden">那个等于200的判断写错了，已更正，谢谢指正~~</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000006257272" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/ruoyiqing" class="commentUser" data-userid="1030000003705113" data-username="ruoyiqing" data-userslug="ruoyiqing" data-useravatar="https://sfault-avatar.b0.upaiyun.com/880/675/880675381-55e906105a04a_medium40"><strong>ruoyiqing</strong></a> · <span class="createdDate">8月13日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003705113" data-id="1050000006257272" data-username="ruoyiqing"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000006257272" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div><div class="widget-comments__item hover-show " id="1050000006661141"><div class="votes widget-vote"><button class="like  hover-show-obj" data-id="1050000006661141" type="button" data-do="like" data-type="comment"></button><span class="count">&nbsp;</span>    </div><div class="comment-content wordbreak">          <div class="content fmt"><p>这是我看到过最好的讲 XMLHttpRequest 的文章了。</p> </div><textarea name="text" rows="1" id="commentText-1050000006661141" class="editTextarea mono form-control mb10 hidden">这是我看到过最好的讲 XMLHttpRequest 的文章了。</textarea><p class="comment-meta">            <a href="https://segmentfault.com/c/1050000006661141" class="text-muted"></a>&nbsp;<a href="https://segmentfault.com/u/wy_ei" class="commentUser" data-userid="1030000003899347" data-username="即刻出发_" data-userslug="wy_ei" data-useravatar="https://sfault-avatar.b0.upaiyun.com/267/355/2673557665-57957a929dd98_medium40"><strong>即刻出发_</strong></a> · <span class="createdDate">8月19日</span><span class="pull-right commentTools hover-show-obj"> <a href="https://segmentfault.com/a/1190000004322487#" class="commentReply mr5" data-userid="1030000003899347" data-id="1050000006661141" data-username="即刻出发_"><span class="flipx glyphicon glyphicon-share-alt" aria-hidden="true"></span></a><a href="https://segmentfault.com/a/1190000004322487#911" class="ml10" data-toggle="modal" data-target="#911" data-type="comment" data-id="1050000006661141" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a></span></p></div></div>
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
                

    <div class="widget-comments__form row">
        
                            <form class="clearfix SFLogin" method="POST">
                    <div class="form-group mb0 widget-comments__form--input">
                        <input name="id" type="hidden" value="1190000004322487">
                        <textarea rows="1" name="text" class="SFLogin form-control mono" id="commentText-1190000004322487" data-id="1190000004322487" placeholder="使用评论询问更多信息或提出修改意见，请不要在评论里回答问题" style="overflow: hidden; word-wrap: break-word; height: 35px;"></textarea>

                    </div>
                    <div class="widget-comments__btn">
                        <div class="pull-right">
                            <button type="submit" class="btn btn-default postComment" data-id="1190000004322487">提交评论
                            </button>
                            <span class="widget-comments__btn--tips"><a href="javascript:void(0);" class="toggle-comment-helper" title="语法提示">
                            <i class="fa fa-question-circle"></i>
                        </a></span>
                        </div>
                    </div>
                </form>
                <div class="col-md-12">
                    <div class="alert alert-warning alert-dismissible mb0 mt10 fmt comment-helper" data-rank="" style="" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close" style="right:0;"><span aria-hidden="true">×</span></button>
                        评论支持部分 Markdown 语法：<code>**bold**</code> <code>_italic_</code>
                        <code>[link](http://example.com)</code> <code>&gt; 引用</code> <code>`code`</code> <code>-
                        列表</code>。<br>同时，被你 @ 的用户也会收到通知
                    </div>
                </div>
            
        </div><!-- /.widget-comments__form -->
            </div><!-- /.widget-comments -->

    

                                    
                
            </div><!-- /.main -->


            <div class="col-xs-12 col-md-3 side">
                <div class="sfad-sidebar">
      <div class="sfad-item">
    <ins><a href="https://sponsor.segmentfault.com/ck.php?oaparams=2__bannerid=69__zoneid=2__cb=bfa5e0f401__oadest=https%3A%2F%2Fwww.teambition.com%2F%3Futm_source%3Dsegmentfault%26utm_medium%3Dbanner" target="_blank"><img src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/9168fdfb9ca9177fd3ee892dd8a10f20.jpg" width="255" height="165" alt="Teambition 高效协作" title="Teambition 高效协作" border="0"></a><div id="beacon_bfa5e0f401" style="position: absolute; left: 0px; top: 0px; visibility: hidden;"><img src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/lg.php" width="0" height="0" alt="" style="width: 0px; height: 0px;"></div></ins>
    <button class="close" type="button" aria-hidden="true">×</button>
</div>

  </div>


                <div class="widget-box no-border">
                    <p class="text-muted">本文隶属于专栏</p>
                    <h4 class="fz16"><a href="https://segmentfault.com/blog/webfronttrap">WEB前端路上踩过的坑儿</a></h4>

                    <p class="wordbreak">作为一名刚入行的 WEB 前端，开发时总是会遭遇各种坑儿，一不小心就掉进坑里出不来了。。。为了不会再掉进同一个坑儿，特此开通此专栏来记录我的踩坑经历，帮助其他同学少走些弯路~ ~</p>


                    <div class="article__widget--author">
                        <a href="https://segmentfault.com/u/ruoyiqing">
                            <img class="avatar-40" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/880675381-55e906105a04a_big64" alt="ruoyiqing">
                        </a>
                        <a href="https://segmentfault.com/u/ruoyiqing">
                            ruoyiqing
                        </a>
                        <p class="text-muted mb0">作者</p>

                                                    <div style="margin-top: 20px;">
                                                                    <button type="button mb20" class="btn btn-default follow-article" data-do="follow" data-type="blog" data-id="1200000003929180">关注专栏
                                    </button>
                                                            </div>
                        

                    </div>

                </div>


                
                    <div data-type="widget" data-api="/api/bookmarkArchive/hots" data-api-overwrite="/api/bookmarkArchive/1190000004322487/related">
        <script type="text/template">
            <div class="widget-box widget-box--bookmark no-border">
                <h4 class="widget-box__title">相关收藏夹 <a id="widgetBookmarkRefresh" class="userstab pull-right"
                                                          href="javascript:;">换一组</a></h4>
                <ul class="widget-links list-unstyled media">
                    <% _.each(data,function(d){ %>
                    <li class="widget-links__item">
                        <img class="pull-left pattern pattern-<%= d.id%19 %> mr10" src="https://sf-static.b0.upaiyun.com/v-57c4094c/global/img/pattern/<%= d.id%10 ? d.id%10 : 10 %>.svg" width="32">
                        <div class="media-body">
                            <a target="_blank" class="ellipsis mr0" href="<%- d.url %>"><%= d.name %></a>
                            <p class="mb0">
                                <span><%- d.num %></span> 个条目 <span class="division">|</span> <span><%- d.followers %></span> 人关注
                            </p>
                        </div>
                    </li>
                    <% }) %>
                </ul>
            </div>
        </script>
    
            <div class="widget-box widget-box--bookmark no-border">
                <h4 class="widget-box__title">相关收藏夹 <a id="widgetBookmarkRefresh" class="userstab pull-right" href="javascript:;">换一组</a></h4>
                <ul class="widget-links list-unstyled media">
                    
                    <li class="widget-links__item">
                        <img class="pull-left pattern pattern-6 mr10" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/9.svg" width="32">
                        <div class="media-body">
                            <a target="_blank" class="ellipsis mr0" href="https://segmentfault.com/bookmark/1230000004250569">2015 优秀文章 - HTTP</a>
                            <p class="mb0">
                                <span>22</span> 个条目 <span class="division">|</span> <span>72</span> 人关注
                            </p>
                        </div>
                    </li>
                    
                    <li class="widget-links__item">
                        <img class="pull-left pattern pattern-13 mr10" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/5.svg" width="32">
                        <div class="media-body">
                            <a target="_blank" class="ellipsis mr0" href="https://segmentfault.com/bookmark/1230000003105085">Nodejs</a>
                            <p class="mb0">
                                <span>4</span> 个条目 <span class="division">|</span> <span>0</span> 人关注
                            </p>
                        </div>
                    </li>
                    
                    <li class="widget-links__item">
                        <img class="pull-left pattern pattern-9 mr10" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/3.svg" width="32">
                        <div class="media-body">
                            <a target="_blank" class="ellipsis mr0" href="https://segmentfault.com/bookmark/1230000004241053">计算机网络基础</a>
                            <p class="mb0">
                                <span>5</span> 个条目 <span class="division">|</span> <span>1</span> 人关注
                            </p>
                        </div>
                    </li>
                    
                </ul>
            </div>
        </div>


                <div class="widget-share__full" data-text="你真的会使用XMLHttpRequest吗？" data-url="https://segmentfault.com/a/1190000004322487" data-shorturl="http://sfau.lt/b5siDH"><div style="margin-bottom:10px;">分享扩散：</div><div class="widget-share-network sharer-0" style="display: block;"><ul class="sn-inline"><li data-network="weibo"><a href="javascript:void(0);" class="entypo-weibo icon-sn-weibo share-1" data-toggle="tooltip" data-placement="top" title="" data-original-title="分享至新浪微博">新浪微博</a></li><li data-network="wechart"><a href="javascript:void(0);" class="entypo-wechart icon-sn-weixin share-2" data-toggle="tooltip" data-placement="top" title="" data-original-title="分享至微信">微信</a></li><li data-network="twitter"><a href="javascript:void(0);" class="entypo-twitter icon-sn-twitter share-3" data-toggle="tooltip" data-placement="top" title="" data-original-title="分享至 Twitter">Twitter</a></li><li data-network="facebook"><a href="javascript:void(0);" class="entypo-facebook icon-sn-facebook share-4" data-toggle="tooltip" data-placement="top" title="" data-original-title="分享至 Facebook">Facebook</a></li></ul></div><a type="button" class="btn btn-sm shareMore btn-sn-more" data-toggle="popover" data-placement="top" data-url="https://segmentfault.com/a/1190000004322487" data-shorturl="http://sfau.lt/b5siDH"><span class="icon-sn-dotted" data-original-title="" title=""></span><strong class="visible-xs-inline">•••</strong></a></div>

                <div class="post-nav hidden-xs side-outline hidden-sm fixed" style="display: block; width: 255px; top: 0px;">
                    <div class="panel panel-default widget-outline">
                        <div class="panel-heading">文章目录</div>
                        <div class="panel-body">
                            <div class="nav-body" style="top: 0px;">
                                <div class="highlight-title" style="top: 135px; height: 27px; display: block;"></div>
                                <ul class="articleIndex"><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader0">Ajax和XMLHttpRequest</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader1">XMLHttpRequest的发展历程</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader2">XMLHttpRequest兼容性</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader3">细说XMLHttpRequest如何使用</a></li><li style="list-style:none;"><ul><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader4">如何设置request header</a></li><li class="active"><a href="https://segmentfault.com/a/1190000004322487#articleHeader5">如何获取response header</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader6">如何指定xhr.response的数据类型</a></li><li><a href="https://segmentfault.com/a/1190000004322487#articleHeader7">如何获取response数据</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader8">如何追踪ajax请求的当前状态</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader9">如何设置请求的超时时间</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader10">如何发一个同步请求</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader11">如何获取上传、下载的进度</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader12">可以发送什么类型的数据</a></li><li class=""><a href="https://segmentfault.com/a/1190000004322487#articleHeader13">xhr.withCredentials与 CORS 什么关系</a></li></ul></li><li><a href="https://segmentfault.com/a/1190000004322487#articleHeader14">xhr相关事件</a></li><li style="list-style:none;"><ul><li><a href="https://segmentfault.com/a/1190000004322487#articleHeader15">事件分类</a></li><li><a href="https://segmentfault.com/a/1190000004322487#articleHeader16">事件触发条件</a></li><li><a href="https://segmentfault.com/a/1190000004322487#articleHeader17">事件触发顺序</a></li></ul></li><li><a href="https://segmentfault.com/a/1190000004322487#articleHeader18">结语</a></li></ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- /.side -->
        </div>
    </div>
</div>

<div id="shareToWeiboModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span><span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">分享</h4>
            </div>
            <div class="modal-body">
                <p class="sfModal-content">
                    分享到微博？
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default dont-likeweibo" data-dismiss="modal">取消</button>
                <a href="https://segmentfault.com/a/1190000004322487" id="shareLink" class="btn btn-primary done-btn" target="_blank" onclick="$(&#39;#shareToWeiboModal&#39;).modal(&#39;hide&#39;)">分享</a>
            </div>
        </div>
    </div>
</div>

    

<script type="text/template" id="regNext">
        <div class="row flex-vertical-center">
        <div class="col-md-12">
            <p class="mb0" style="font-size: 14px; margin-right:50px; font-family: Source Code Pro,Consolas,Menlo,Monaco,Courier New,monospace;">
                    C++ 的结果是 D 还是 E？
            </p>
            <button class="btn btn-primary SFLogin mr10"
                    onclick='ga("send", "event", "join button", "clicked", "footer welcome popup");'>D
            </button>
            <button class="btn  btn-default  tomorrow">E</button>
        </div>
        
    </div>
</script>

<div class="widget-register widget-welcome-question mt20 hidden-xs widget-welcome widget-register-slideUp">
    <div class="container">
        <div class="row flex-vertical-center">
            <div class="col-sm-12 col-md-8">
                <p class="mb0">
                                                                你好！看起来你挺喜欢这个内容，但是你还没有注册帐号。 <br><br>当你创建了帐号，我们能准确地追踪你关注的问题，在有新答案或内容的时候收到网页和邮件通知。<br>还能直接向作者咨询更多细节。如果上面的内容有帮助，记得点赞 (♥◠‿◠)ﾉ 表示感谢。
                                    </p>

            </div>
            <div class="col-sm-12 col-lg-3 col-lg-offset-1 col-md-4">
                <button class="btn btn-primary btn-lg SFLogin  mr10" onclick="ga(&quot;send&quot;, &quot;event&quot;, &quot;join button&quot;, &quot;clicked&quot;, &quot;footer welcome popup&quot;);">立即注册
                </button>
                <button class="btn btn-lg btn-default  tomorrow">明天提醒我</button>
            </div>
        </div>
    </div>
</div>

<div class="modal widget-911" id="911" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button class="close" data-dismiss="modal" type="button">
          <span aria-hidden="true">×</span>
          <span class="sr-only">Close</span>
        </button>
        <h4 class="modal-title"><span data-model="action"></span><span data-model="type"></span></h4>
      </div>
      <div class="modal-body">
        <form id="reportForm">
          <!-- 后台返回信息 -->
          <p class="alert alert-warning" data-model="returnMsg"></p>
          <div data-role="base">
            <p>
              <strong class="required">我要<span data-model="action"></span>该<span data-model="type"></span>，理由是：</strong>
            </p>
            <ul class="list-unstyled" data-model="list"></ul>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button class="btn btn-default pull-left" type="button" data-role="back" style="display:none">返回重选</button>
                <button class="btn btn-default" data-dismiss="modal" type="button">取消</button>
        <button class="btn btn-primary" data-role="submit" type="button">提交</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<footer id="footer">
    <div class="container">
        <div class="row hidden-xs">
            <dl class="col-sm-2 site-link">
                <dt>网站相关</dt>
                <dd><a href="https://segmentfault.com/about">关于我们</a></dd>
                <dd><a href="https://segmentfault.com/tos">服务条款</a></dd>
                <dd><a href="https://segmentfault.com/faq">帮助中心</a></dd>
                <dd><a href="https://segmentfault.com/repu">声望与权限</a></dd>
                <dd><a href="https://segmentfault.com/markdown">编辑器语法</a></dd>
                <dd><a href="https://weekly.segmentfault.com/">每周精选</a></dd>
                <dd><a href="https://segmentfault.com/app">App 下载</a></dd>
            </dl>
            <dl class="col-sm-2 site-link">
                <dt>联系合作</dt>
                <dd><a href="https://segmentfault.com/contact">联系我们</a></dd>
                <dd><a href="https://segmentfault.com/hiring">加入我们</a></dd>
                <dd><a href="https://segmentfault.com/link">合作伙伴</a></dd>
                <dd><a href="https://segmentfault.com/press">媒体报道</a></dd>
                <dd><a href="https://board.segmentfault.com/">建议反馈</a></dd>
                            </dl>
            <dl class="col-sm-2 site-link">
                <dt>常用链接</dt>
                                                <dd><a href="https://chrome.google.com/webstore/detail/segmentfault-%E7%AC%94%E8%AE%B0/pjklfdmleagfaekibdccmhlhellefcfo" target="_blank">笔记插件: Chrome</a></dd>
                                                                <dd><a href="https://addons.mozilla.org/zh-CN/firefox/addon/sf-note-ext/" target="_blank">笔记插件: Firefox</a></dd>
                                                                <dd>订阅：<a href="https://segmentfault.com/feeds">问答</a> / <a href="https://segmentfault.com/feeds/blogs">文章</a></dd>
                                                                <dd><a href="https://mirrors.segmentfault.com/" target="_blank">文档镜像</a></dd>
                                                                <dd><a href="https://segmentfault.com/blog/interview" target="_blank">社区访谈</a></dd>
                                                                <dd><a href="https://segmentfault.com/d-day" target="_blank">D-DAY 技术沙龙</a></dd>
                                                                <dd><a href="https://segmentfault.com/hackathon" target="_blank">黑客马拉松 Hackathon</a></dd>
                                                                <dd><a href="https://namebeta.com/" target="_blank">域名搜索注册</a></dd>
                                            </dl>
            <dl class="col-sm-2 site-link">
                <dt>关注我们</dt>
                                <dd><a href="https://github.com/SegmentFault" target="_blank">Github</a></dd>
                                <dd><a href="https://twitter.com/segment_fault" target="_blank">Twitter</a></dd>
                                <dd><a href="http://weibo.com/segmentfault" target="_blank">新浪微博</a></dd>
                                <dd><a href="https://segmentfault.com/blog/segmentfault_team" target="_blank">团队日志</a></dd>
                                <dd><a href="https://segmentfault.com/blog/segmentfault" target="_blank">产品技术日志</a></dd>
                                <dd><a href="https://segmentfault.com/blog/community_admin" target="_blank">社区运营日志</a></dd>
                                <dd><a href="https://segmentfault.com/blog/segmentfault_news" target="_blank">市场运营日志</a></dd>
                            </dl>
            <dl class="col-sm-4 site-link" id="license">
                <dt>内容许可</dt>
                <dd>除特别说明外，用户内容均采用 <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-sa/3.0/cn/">知识共享署名-相同方式共享 3.0 中国大陆许可协议</a> 进行许可
                </dd>
                <dd>本站由 <a target="_blank" href="https://www.upyun.com/?utm_source=segmentfault&amp;utm_medium=link&amp;utm_campaign=upyun&amp;md=segmentfault">又拍云</a> 提供 CDN 存储服务
                </dd>
            </dl>
        </div>
        <div class="copyright">
            Copyright © 2011-2016 SegmentFault. 当前呈现版本 16.08.30<br>
            <a href="http://www.miibeian.gov.cn/" rel="nofollow">浙ICP备 15005796号-2</a> &nbsp;
            <a target="_blank" href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010602002000" rel="nofollow">浙公网安备 33010602002000号</a>
        </div>
        <p class="text-center">
            <a class="js__view--selector hidden-sm hidden-md hidden-lg" data-action="mobile" href="javascript:;">移动版</a>
            <a class="js__view--selector hidden-sm hidden-md hidden-lg" data-action="desktop" href="javascript:;">桌面版</a>
        </p>
    </div>
</footer>

<div id="fixedTools" class="hidden-xs hidden-sm">
    <a id="backtop" class="border-bottom" href="https://segmentfault.com/a/1190000004322487#">回顶部</a>

    <div class="qrcodeWraper">
        <a href="https://segmentfault.com/app#qrcode"><span class="glyphicon glyphicon-qrcode"></span></a>
        <img id="qrcode" class="border" alt="sf-wechat" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/appQrcode.png">

        <p class="qrcode-text">扫扫下载 App</p>
    </div>
</div>

<div class="app-promotion-bar">
    <a href="javascript:;"><i class="fa fa-close close"></i></a>
    <div class="icon"></div>
    <h5 class="title h5">SegmentFault</h5>
    <p class="describe">一起探索更多未知</p>
    <a class="download-btn btn btn-sm btn-primary" href="https://segmentfault.com/app#qrcode">下载 App</a>
</div>

<script id="loginModal" type="text/template">
<div class="row bg-white login-modal">
    <div class="col-md-4 col-sm-12 col-md-push-7 login-wrap">
        <h1 class="h4 text-muted login-title">用户登录</h1>
        <form action="/api/user/login" method="POST" role="form" class="mt30">
            <div class="form-group">
                <label class="control-label">Email</label>
                <input type="email" class="form-control" name="mail" required placeholder="hello@segmentfault.com">
            </div>
            <div class="form-group">
                <label class="control-label">密码</label>
                <input type="password" class="form-control" name="password" required placeholder="密码">
            </div>
            <div class="form-group clearfix">
                <div class="checkbox pull-left">
                    <label><input name="remember" type="checkbox" value="1" checked> 记住登录状态</label>
                </div>
                <button type="submit" class="btn btn-primary pull-right pl20 pr20" onclick='ga("send", "event", "email login button", "clicked", "login modal");'>登录</button>
            </div>
        </form>
        <p class="h4 text-muted visible-xs-block h4">快速登录</p>
        <div class="widget-login mt30">
            <p class="text-muted mt5 mr10 pull-left hidden-xs">快速登录</p>
            <a href="/user/oauth/google" class="btn btn-default btn-sm btn-sn-google" onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "google"});'><span class="icon-sn-bg-google"></span> <strong class="visible-xs-inline">Google 账号</strong></a>
            <a href="/user/oauth/github" class="btn btn-default btn-sm btn-sn-github" onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "github"});");'><span class="icon-sn-bg-github"></span> <strong class="visible-xs-inline">Github 账号</strong></a>
            <a href="/user/oauth/weibo" class="btn btn-default btn-sm btn-sn-weibo" onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "weibo"});'><span class="icon-sn-bg-weibo"></span> <strong class="visible-xs-inline">新浪微博账号</strong></a>
            <a href="/user/oauth/qq" class="btn btn-default btn-sm btn-sn-qq" onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span class="icon-sn-bg-qq"></span> <strong class="visible-xs-inline">QQ 账号</strong></a>
            <a href="/user/oauth/weixin" class="btn btn-default btn-sm btn-sn-weixin" onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span class="icon-sn-bg-weixin"></span> <strong class="visible-xs-inline">微信账号</strong></a>
            <button id="loginShowMore" href="javascript:void(0);" class="btn mb5 btn-default btn-sm btn-sn-dotted"><span class="icon-sn-bg-dotted"></span><strong class="visible-xs-inline">•••</strong></button>
            <a href="/user/oauth/twitter" class="btn btn-default btn-sn-twitter btn-sm hidden" onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "twitter"});'><span class="icon-sn-bg-twitter"></span> <strong class="visible-xs-inline">Twitter 账号</strong></a>
            <a href="/user/oauth/facebook" class="btn btn-default btn-sn-facebook btn-sm hidden" onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "facebook"});'><span class="icon-sn-bg-facebook"></span> <strong class="visible-xs-inline">Facebook 账号</strong></a>
            <a href="/user/oauth/douban" class="btn btn-default btn-sn-douban btn-sm hidden" onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "douban"});'><span class="icon-sn-bg-douban"></span> <strong class="visible-xs-inline">豆瓣账号</strong></a>
        </div>
    </div>
    <div class="login-vline hidden-xs hidden-sm"></div>
    <div class="col-md-4 col-md-pull-3 col-sm-12 login-wrap">
        <h1 class="h4 text-muted login-title">创建新账号</h1>
        <form action="/api/user/register" method="POST" role="form" class="mt30">
            <div class="form-group">
                <label for="name" class="control-label">用户名</label>
                <input type="text" class="form-control" name="name" required placeholder="字母、数字等，用户名唯一">
            </div>
            <div class="form-group">
                <label for="mail" class="control-label">Email</label>
                <input type="hidden" style="display:none" name="mail">
                <input type="email" autocomplete="off" class="form-control register-mail" name="mail" required placeholder="hello@segmentfault.com">
            </div>
            <div class="form-group">
                <label for="password" class="control-label">密码</label>
                <input type="password" class="form-control" name="password" required placeholder="不少于 6 位">
            </div>
            <div class="form-group" style="display:none;">
                <label class="required control-label">验证码</label>
                <input type="text" class="form-control" id="captcha" name="captcha" placeholder="请输入下方的验证码">
                <div class="mt10"><a id="loginReloadCaptcha"  href="javascript:void(0)"><img data-src="/user/captcha?w=240&h=50" class="captcha" width="240" height="50" /></a></div>
            </div>
            <div class="form-group clearfix">
                <div class="checkbox pull-left">
                    同意并接受<a href="/tos" target="_blank">《服务条款》</a>
                </div>
                <button type="submit" class="btn btn-primary pl20 pr20 pull-right" onclick='ga("send", "event", "email register button", "clicked", "login modal");'>注册</button>
            </div>
        </form>
    </div>
</div>
<div class="text-center text-muted mt30">
    <a href="/user/forgot" class="ml5">找回密码</a>
</div>
</script>



<script>
    (function (w) {
        w.SF = {
            staticUrl: "https://sf-static.b0.upaiyun.com/v-57c4094c"
        };
        w.SF.token = (function () {
    var _KGRqyd = 'f'//'63'
+'85e'//'8t'
+'8f0'//'Vw'
+//'jTB'
'61'+'hU'//'hU'
+'11'//'3'
+//'x'
'b1'+'4'//'p'
+'bb'//'kj'
+//'2t'
'00'+//'zYw'
'9c'+'90'//'Id6'
+'7e'//'V2'
+''///*'E'*/'E'
+'1vn'//'1vn'
+'e9'//'0'
+'22'//'Oj'
+//'qtj'
'2'+//'Ole'
'710', _1rbei = [[9,11],[24,27]];

    for (var i = 0; i < _1rbei.length; i ++) {
        _KGRqyd = _KGRqyd.substring(0, _1rbei[i][0]) + _KGRqyd.substring(_1rbei[i][1]);
    }

    return _KGRqyd;
})();;
    })(window);

                var lock = {
        type: "",
        text: '',
        table: {"ban_post":[1,"\u4f60\u5df2\u7ecf\u88ab\u7981\u8a00, \u65e0\u6cd5\u8fdb\u884c\u6b64\u64cd\u4f5c, \u5982\u6709\u7591\u4e49\u8bf7\u63d0\u4ea4\u7533\u8bc9, \u6216\u8005\u53d1\u90ae\u4ef6\u5230pr@segmentfault.com"]}
    };
</script>

    <script crossorigin="" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/assets.js"></script>
    <script crossorigin="" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/post.min.js"></script>

<script async="" src="./你真的会使用XMLHttpRequest吗？ - WEB前端路上踩过的坑儿 - SegmentFault_files/asyncjs.php"></script>

<script>
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-918487-8']);
    _gaq.push(['_trackPageview']);
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r;
        i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date();
        a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

            
        

            

    ga('create', 'UA-918487-8', 'auto', {
        'userID'
    : 0,
        'createdTime'
    : 0,
        'now'
    : 1472561562 });
    ga('set', 'dimension1', 'guest');
    ga('send', 'pageview');

</script>

<script type="text/javascript">
    var _vds = _vds || [];
    window._vds = _vds;
    (function() {
        _vds.push(['setAccountId', '5411b7ab1ae040ed9a4eb4a120a06ead']);
        (function() {
            var vds = document.createElement('script');
            vds.type = 'text/javascript';
            vds.async = true;
            vds.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'dn-growing.qbox.me/vds.js';
            var s = document.getElementsByTagName('script')[0];
            s.parentNode.insertBefore(vds, s);
        })();
    })();
</script>

<script>
    var _hmt = _hmt || [];
    (function () {
        var hm = document.createElement("script");
        hm.src = "//hm.baidu.com/hm.js?e23800c454aa573c0ccb16b52665ac26";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</script>



<div id="noteWidget" class="noteWidget hidden hidden-xs">
    <div class="noteWidget-header clearfix">
        <h2 class="h4 pull-left">记笔记</h2>
        <ul class="list-inline pull-right mb0">
            <li id="noteWidgetMinimize"><span class="icon-minimize"></span></li><li id="noteWidgetZoom"><span class="icon-zoom"></span></li><li id="noteWidgetClose"><span class="icon-close"></span></li>
        </ul>
    </div>
    <form method="POST" action="https://segmentfault.com/api/notes/add" role="form">
        <div class="form-group">
            <label for="title" class="sr-only">标题</label>
            <input type="hidden" value="" id="draftId">
            <input type="text" name="title" data-error="" autocomplete="off" class="form-control" placeholder="笔记描述" value="">
        </div>
        <div class="editor-config clearfix">
            <select name="lang" class="form-control pull-left input-sm">
                <optgroup label="文本语法">
                    <option value="text" data-mode="text">纯文本</option>
                    <option value="markdown" data-mode="markdown">Markdown</option>
                    <option value="javascript" data-mode="javascript">Javascript</option>
                    <option value="css" data-mode="css">CSS</option>
                    <option value="html5" data-mode="htmlmixed">HTML</option>
                    <option value="php" data-mode="php">PHP</option>
                    <option value="python" data-mode="python">Python</option>
                    <option value="ruby" data-mode="ruby">Ruby</option>
                    <option value="go" data-mode="go">Go</option>
                    <option value="c" data-mode="clike">C/C++</option>
                    <option value="java" data-mode="java">Java</option>
                    <option value="bash" data-mode="shell">Shell/Bash</option>
                </optgroup>
            </select>
            <div class="pull-right hidden-xs">
                <select name="indentWithTabs" class="form-control inline-block input-sm">
                    <optgroup label="缩进模式">
                        <option value="false">空格缩进</option>
                        <option value="true">Tabs 缩进</option>
                    </optgroup>
                </select>
                <select name="tabSize" class="form-control inline-block input-sm">
                    <optgroup label="缩进大小">
                        <option value="2">2</option>
                        <option value="4" selected="">4</option>
                    </optgroup>
                </select>
                <select name="lineWrap" class="form-control inline-block input-sm">
                    <optgroup label="换行方式">
                        <option value="true">自动换行</option>
                        <option value="false">不换行</option>
                    </optgroup>
                </select>
            </div>
        </div>
        <textarea id="codeMirror" class="form-control" style="display: none;"></textarea><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-hscrollbar" style="left: 0px;"><div style="height: 100%; min-height: 1px;"></div></div><div class="CodeMirror-vscrollbar"><div style="min-width: 1px;"></div></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px;"><div style="position: relative;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"></div><div class="CodeMirror-code"></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px;"></div><div class="CodeMirror-gutters"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 1px;"></div></div></div></div>
        <div class="mt20 clearfix">
            <div class="pull-right">
                <span class="text-muted hidden" id="editorStatus">已保存</span>
                <a id="dropIt" href="javascript:void(0);" class="mr10 hidden">[舍弃]</a>
                <button data-type="note" id="publishIt2" class="btn btn-default ml10" data-id="" data-do="add" data-url="" data-text="保存私密笔记" data-name="">保存私密笔记</button>
                <button data-type="note" id="publishIt" class="btn btn-primary ml10" data-id="" data-do="add" data-url="" data-text="保存公开笔记" data-name="">保存公开笔记</button>
                </div>
            </div>
        </form></div>
    
<div id="atwho-container"><div id="atwho-ground-commentText-1190000004322487"><div class="atwho-view" id="at-view-64"><ul class="atwho-view-ul"></ul></div></div></div><textarea tabindex="-1" style="position: absolute; top: -999px; left: 0px; right: auto; bottom: auto; border: 0px; padding: 0px; box-sizing: content-box; word-wrap: break-word; overflow: hidden; transition: none; height: 0px !important; min-height: 0px !important; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; font-weight: 400; font-style: normal; letter-spacing: 0px; text-transform: none; word-spacing: 0px; text-indent: 0px; white-space: pre-wrap; line-height: 21px; width: 74px;" class="autosizejs" id="autosizejs"></textarea></body></html>